<?xml version='1.0' encoding='UTF-8'?><ResultsSession buildId="CLI-DEMO1-2025-01-05" climode="true" endTime="2025-01-05T19:30:13+02:00" execEnv="win32_x86_64" hasViols="true" id="1736719895563" lang="en_US" machine="ESL1" prjModule="diaglist_license_check" project="CLI-DEMO1" tag="Flow Analysis Aggressive" time="2025-01-05T19:30:07+02:00" toolDispName="C/C++test" toolId="c++test" toolName="DTP Engine for C/C++" toolVer="2024.2.0" user="danie">
   <TestConfig machine="ESL1" name="Flow Analysis Aggressive" pseudoUrl="builtin://Flow Analysis Aggressive" user="danie"/>
   <Authors>
      <Author id="dev1" name="danie"/>
   </Authors>
   <Analyzers>
      <Analyzer id="com.parasoft.xtest.scope.analyzer" name="Scope Analyzer" ver="10.7.1.20241108"/>
      <Analyzer id="com.parasoft.xtest.cpp.analyzer.static.code" name="Parasoft C/C++ Code Analyzer" ver="10.7.1.20241114B2528"/>
      <Analyzer id="com.parasoft.xtest.cpp.analyzer.desktop.files.in.scope" name="Helper Scope Analyzer for C/C++test Professional" ver="10.7.1.20241114B2528"/>
      <Analyzer id="com.parasoft.xtest.cpp.analyzer.static.pattern" name="Parasoft C/C++ Static Analyzer" ver="10.7.1.20241114B2528"/>
      <Analyzer id="com.parasoft.xtest.cpp.analyzer.static.flow" name="Parasoft C/C++ Flow Analyzer" ver="10.7.1.20241023B5124"/>
      <Analyzer id="com.parasoft.xtest.cpp.analyzer.static.global" name="Parasoft C/C++ Global Static Analyzer" ver="10.7.1.20241114B2528"/>
   </Analyzers>
   <VersionInfos>
      <StorageInfo ownerId="" resultId="ISetupResult" ver="1" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IMetricsViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IExecutionViolation" ver="1" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IDupCodeViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IFlowAnalysisViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IFunctionalViolation" ver="1" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IChangeImpactViolation" ver="1" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="ICodingStandardsViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IUnitTestViolation" ver="1" ver10x="1"/>
   </VersionInfos>
   <Goals tsks="21">
      
      <History>
         <Graph id="gls">
            <Categories>
               <Category color="red" name="Total" pos="0"/>
            </Categories>
            <Total secSer="1" title="" xTitle="Date" yTitle="Tasks" yTitle2="Total Tasks">
               <X>01-05-25,</X>
               <Y>21,</Y>
               <Delta>21,</Delta>
            </Total>
         </Graph>
      </History>
   
   </Goals>
   <Scope>
      <Repositories/>
      <Locations>
         <Loc auth="danie" hash="-1207189245" locRef="1" projId="diaglist_license_check" projPath="/diaglist_license_check" project="diaglist_license_check" resProjPath="Source Files/diaglist_license_check.c" totLns="246" uri="file:/C:/Users/danie/source/repos/diaglist_license_check/diaglist_license_check/diaglist_license_check.c"/>
      </Locations>
   </Scope>
   
  <SetupProblems/>

   <CodingStandards ownerId="com.parasoft.xtest.checkers.api.standards" time="0:00:06">
      <Projects>
         <Project bdCheckedFiles="0" bdTotalFiles="0" checkedFiles="1" checkedLns="246" id="diaglist_license_check" name="diaglist_license_check" qfixErrs="0" suppErrs="0" totErrs="21" totFiles="1" totLns="246"/>
      </Projects>
      
      <History>
         <Graph id="lns">
            <Categories>
               <Category color="blue" name="Total Lines" pos="0"/>
               <Category color="green" name="Checked Lines" pos="1"/>
               <Category authPos="0" color="red" name="Tasks" pos="2"/>
            </Categories>
            <Total secSer="1" title="" xTitle="Date" yTitle="Lines" yTitle2="Tasks">
               <X>01-05-25,</X>
               <Y>246,246,21,</Y>
               <Delta>246,246,21,</Delta>
            </Total>
            <Authors title="" xTitle="Date" yTitle="Total Tasks">
               <Author name="danie">
                  <X>01-05-25,</X>
                  <Y>21,</Y>
                  <Delta>21,</Delta>
               </Author>
            </Authors>
         </Graph>
      </History>
   
      
      <Rules>
         <CategoriesList>
            <Category authTot="0;" authUrg="0;" desc="Flow Analysis" name="BD" rules="137" total="0">
               <Category authTot="0;" authUrg="0;" desc="Incorrect API usage" name="BD-API" rules="7" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Possible Bugs" name="BD-PB" rules="74" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Resources" name="BD-RES" rules="8" total="0"/>
               <Category authTot="20;" authUrg="20;" desc="Security" name="BD-SECURITY" rules="20" total="20"/>
               <Category authTot="0;" authUrg="0;" desc="Containers" name="BD-CO" rules="5" total="0"/>
               <Category authTot="1;" authUrg="1;" desc="Threads &amp; Synchronization" name="BD-TRS" rules="21" total="1"/>
            </Category>
         </CategoriesList>
         <RulesList>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-API" desc="Do not pass incorrect values to library functions" id="BD-API-BADPARAM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-API" desc="Do not pass negative values to functions expecting non-negative arguments" id="BD-API-NEGPARAM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-API" desc="Do not check for a non-negative value after passing as a non-negative argument" id="BD-API-REVNEGPARAM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-CO" desc="Do not access iterator out of range" id="BD-CO-ITOUT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-CO" desc="Use valid references, pointers, and iterators to reference elements of a basic_string" id="BD-CO-STRMOD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-CO" desc="Do not pass empty container iterators to std algorithms as destinations" id="BD-CO-EMPCON" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-CO" desc="Do not modify container while iterating over it" id="BD-CO-ITMOD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Always catch exceptions" id="BD-PB-EXCEPT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid signed integer overflows" id="BD-PB-INTUB" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid use before initialization" id="BD-PB-NOTINIT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Atomic objects shall be properly initialized before being accessed" id="BD-PB-NOTINITAT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid null pointer dereferencing" id="BD-PB-NP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid buffer overflow due to defining incorrect format limits" id="BD-PB-OVERFFMT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid overflow due to reading a not zero terminated string" id="BD-PB-OVERFNZT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid overflow when reading from a buffer" id="BD-PB-OVERFRD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid overflow when writing to a buffer" id="BD-PB-OVERFWR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not point to a wrapped object that has been freed" id="BD-PB-WRAPESC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid division by zero" id="BD-PB-ZERO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid accessing arrays out of bounds" id="BD-PB-ARRAY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="A pointer pointing to an element of an array of objects shall not be passed to a smart pointer of single object type" id="BD-PB-ARRPTR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid incorrect shift operations" id="BD-PB-BADSHIFT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Use the correct byte ordering when transferring data between systems" id="BD-PB-BYTEORD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid conditions that always evaluate to the same value" id="BD-PB-CC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Consistently check the returned value of non-void functions" id="BD-PB-CHECKRET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Always check the returned value of non-void function" id="BD-PB-CHECKRETGEN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid accessing collections out of bounds" id="BD-PB-COOB" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not modify the alignment of objects by calling realloc()" id="BD-PB-DNMPTR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="The macro EOF should be compared with the unmodified return value from the Standard Library function" id="BD-PB-EOFCOMP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Properly use errno value" id="BD-PB-ERRNO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Properly define exit handlers" id="BD-PB-EXITHAN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Reset strings on fgets() or fgetws() failure" id="BD-PB-FGETS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Only use values for fsetpos() that are returned from fgetpos()" id="BD-PB-FSETPOS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid data loss when converting between integer types" id="BD-PB-INTDL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not rely on an environment pointer following an operation that may invalidate it" id="BD-PB-INVENV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Pointers returned by certain Standard Library functions should not be used following a subsequent call to the same or related function" id="BD-PB-INVRET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="The Standard Library function memcmp shall not be used to compare null terminated strings" id="BD-PB-MCCSTR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid calls to memory-setting functions that can be optimized out by the compiler" id="BD-PB-MEMOPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Properly define new handlers" id="BD-PB-NEWHAN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid throwing exceptions from functions that are declared not to throw" id="BD-PB-NOEXCEPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Never return from functions that should not return" id="BD-PB-NORETURN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid accessing arrays and pointers out of bounds" id="BD-PB-OVERFARRAY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="An object shall not be assigned or copied to an overlapping object" id="BD-PB-OVERLAP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not treat arrays polymorphically" id="BD-PB-POLARR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not compare two unrelated pointers" id="BD-PB-PTRCMP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not subtract two pointers that do not address elements of the same array" id="BD-PB-PTRSUB" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not store an already-owned pointer value in an unrelated smart pointer" id="BD-PB-PTRVALUE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not call putenv() with a pointer to an automatic variable as the argument" id="BD-PB-PUTENV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Properly define signal handlers" id="BD-PB-SIGHAN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not return from a computational exception signal handler" id="BD-PB-SIGRETURN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not alternately input and output from a stream without an intervening flush or positioning call" id="BD-PB-STREAMINOUT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not subsequently use the argument to std::forward" id="BD-PB-SUBSEQFRWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not rely on the value of a moved-from object" id="BD-PB-SUBSEQMOVE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid switch with unreachable branches" id="BD-PB-SWITCH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Properly define terminate handlers" id="BD-PB-TERMHAN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Properly define unexpected handlers" id="BD-PB-UNEXPHAN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not use the ungetc function on a stream with the file position indicator zero" id="BD-PB-UNGETC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not use dynamic type of an object under construction" id="BD-PB-VCTOR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not use dynamic type of an object under destruction" id="BD-PB-VDTOR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Ensure the size of the variable length array is in valid range" id="BD-PB-VLASIZE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="The same file shall not be opened for read and write access at the same time on different streams" id="BD-PB-WRRDSTR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid writing to a stream which has been opened as read only" id="BD-PB-WRROS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid value change when converting between integer types" id="BD-PB-INTVC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid wraparounds when performing arithmetic integer operations" id="BD-PB-INTWRAP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Ensure strings are zero terminated" id="BD-PB-NZTS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Ensure the output buffer is large enough when using path manipulation functions" id="BD-PB-PATHBUF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Always throw the created std::exception object" id="BD-PB-STDEXC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Suspicious setting of stream flags" id="BD-PB-STREAMFLAGS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Restore stream format" id="BD-PB-STREAMFMT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid unused values" id="BD-PB-VOVR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Guarantee that container indices are within the valid range" id="BD-PB-VALRANGE" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-RES" desc="Properly deallocate dynamically allocated resources" id="BD-RES-BADDEALLOC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-RES" desc="Ensure deallocation functions guarantee resource freeing" id="BD-RES-BADFREEF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-RES" desc="Do not use resources that have been freed" id="BD-RES-FREE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-RES" desc="Allocate sufficient memory to hold an object of a given type" id="BD-RES-INSUFMEM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-RES" desc="Do not free resources using invalid pointers" id="BD-RES-INVFREE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-RES" desc="Ensure resources are freed" id="BD-RES-LEAKS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-RES" desc="Avoid cyclic shared_ptr references" id="BD-RES-CSP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-RES" desc="Do not create variables on the stack above the defined limits" id="BD-RES-STACKLIM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="1;" authUrg="1;" cat="BD-SECURITY" desc="Avoid tainted data in array indexes" id="BD-SECURITY-ARRAY" sev="1" total="1"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Prevent buffer overflows from tainted data" id="BD-SECURITY-BUFWRITE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Avoid unsafe use of a value obtained from arithmetic operations on tainted value" id="BD-SECURITY-INTOVERF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Avoid buffer overflow from tainted data due to defining incorrect format limits" id="BD-SECURITY-OVERFFMT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Avoid buffer read overflow from tainted data" id="BD-SECURITY-OVERFRD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Avoid buffer write overflow from tainted data" id="BD-SECURITY-OVERFWR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Protect against command injection" id="BD-SECURITY-TDCMD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="7;" authUrg="7;" cat="BD-SECURITY" desc="Avoid printing tainted data on the output console" id="BD-SECURITY-TDCONSOLE" sev="1" total="7"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Protect against environment injection" id="BD-SECURITY-TDENV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="3;" authUrg="3;" cat="BD-SECURITY" desc="Protect against file name injection" id="BD-SECURITY-TDFNAMES" sev="1" total="3"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Exclude unsanitized user input from format strings" id="BD-SECURITY-TDINPUT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="9;" authUrg="9;" cat="BD-SECURITY" desc="Validate potentially tainted data before it is used in the controlling expression of a loop" id="BD-SECURITY-TDLOOP" sev="1" total="9"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Protect against SQL injection" id="BD-SECURITY-TDSQL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Properly seed pseudorandom number generators" id="BD-SECURITY-RAND" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Sensitive data should be cleared before being deallocated" id="BD-SECURITY-SENSFREE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Avoid passing sensitive data to functions that write to log files" id="BD-SECURITY-SENSLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Validate potentially tainted data before it is used to determine the size of memory allocation" id="BD-SECURITY-TDALLOC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Disable resolving XML external entities (XXE) in libxerces-c" id="BD-SECURITY-XXEXRC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="Avoid double locking" id="BD-TRS-DLOCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="Avoid race conditions when using fork and file descriptors" id="BD-TRS-FORKFILE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="Do not abandon unreleased locks" id="BD-TRS-LOCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="Do not acquire locks in different order" id="BD-TRS-ORDER" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="Avoid race conditions while checking for the existence of a symbolic link" id="BD-TRS-SYMLINK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="Do not use blocking functions while holding a lock" id="BD-TRS-TSHL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="Declare objects shared between POSIX threads with appropriate storage durations" id="BD-TRS-ARG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="Variable should be used in context of single critical section" id="BD-TRS-DIFCS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="1;" authUrg="1;" cat="BD-TRS" desc="Avoid race conditions while accessing files" id="BD-TRS-FRC" sev="2" total="1"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="Do not join or detach a thread that was previously joined or detached" id="BD-TRS-JOINDETACH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="The Standard Library function mtx_timedlock() shall not be invoked on a mutex that does not support timeout" id="BD-TRS-TIMEDLOCK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="Do not release a lock that has not been acquired" id="BD-TRS-REVLOCK" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="There shall be no data races between threads" id="BD-TRS-THRDR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="A thread synchronization object should not be destroyed by a thread" id="BD-TRS-THRDSTR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="A thread synchronization object should not be initialized by a thread" id="BD-TRS-THRINIT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="A thread should not be created by another thread" id="BD-TRS-THRTHR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="A thread-specific storage should not be created by a thread" id="BD-TRS-THRTSS" sev="3" total="0"/>
         </RulesList>
         <SeverityList>
            <Severity authTot="20;" authUrg="20;" id="1" total="20"/>
            <Severity authTot="1;" authUrg="1;" id="2" total="1"/>
         </SeverityList>
      </Rules>
      
  <Supps/>

      
  <StdViols>
    <FlowViol msg="Data obtained from a console (&quot;filePath[]&quot;) is injected to a file or path name" ln="92" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="237" rule="BD-SECURITY-TDFNAMES" FirstElSrcRngStartPos="0" lnHash="497856354" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Protect against file name injection" FirstElSrcRngStartln="236" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="1113349971" lang="cpp" violId="848e0151-2b31-354f-9937-ce20c190bfe2" locEndPos="0" urgent="true" locEndLn="93" goals="1," locStartln="92" sev="1" locRef="1" tool="c++test" lineHash="497856354" unbViolId="a439ef36-4fc7-321d-ab52-abb981acf999" locType="sr" hash="-1207189245" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="-786871230" ln="216" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="216" srcRngEndLn="217" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char filePath[MAX_PATH_LEN] = { 0 }; // Initialize with zeros" ElType="." rngLn="216"/>
        <ElDesc lineHash="1524434609" ln="218" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="218" srcRngEndLn="219" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="loadStoredPath(...)" ElType="." rngLn="218">
          <ElDescList>
            <ElDesc lineHash="842755070" ln="150" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="150" srcRngEndLn="151" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;r&quot;);" ElType="." rngLn="150"/>
            <ElDesc lineHash="1220656230" ln="151" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="151" srcRngEndLn="152" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!config) {" ElType="." rngLn="151">
              <Anns>
                <Ann msg="Condition evaluation: !config (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-474288024" ln="152" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="152" srcRngEndLn="153" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return false;" ElType="." rngLn="152"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1524434609" ln="218" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="218" srcRngEndLn="219" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (loadStoredPath(filePath)) {" ElType="." rngLn="218">
          <Anns>
            <Ann msg="Condition evaluation: loadStoredPath(...) (false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1506858587" ln="235" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="235" srcRngEndLn="236" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;No stored file path found. Please enter the license file path: &quot;);" ElType="." rngLn="235"/>
        <ElDesc lineHash="1115411321" ln="236" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="236" srcRngEndLn="237" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(...)" ElType=".C" rngLn="236">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: filePath[]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1115411321" ln="236" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="236" srcRngEndLn="237" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (scanf(&quot; %259s&quot;, filePath) != 1) { // Limit input length to prevent overflow" ElType="." rngLn="236">
          <Anns>
            <Ann msg="Condition evaluation: (scanf(...) != 1) (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1996922329" ln="240" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="240" srcRngEndLn="241" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="storeFilePath(filePath);" ElType="." rngLn="240">
          <ElDescList>
            <ElDesc lineHash="842904025" ln="166" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="166" srcRngEndLn="167" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;w&quot;);" ElType="." rngLn="166">
              <Anns>
                <Ann msg="Tainted data: filePath[]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="994035581" ln="167" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="167" srcRngEndLn="168" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (config) {" ElType="." rngLn="167">
              <Anns>
                <Ann msg="Condition evaluation: (config != 0) (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1782197061" ln="173" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="173" srcRngEndLn="174" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fprintf(stderr, &quot;Error: Unable to store file path.\n&quot;);" ElType="." rngLn="173"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-1143685017" ln="243" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="243" srcRngEndLn="244" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="checkDiaglistSection(filePath);" ElType="!" rngLn="243">
          <ElDescList>
            <ElDesc lineHash="497856354" ln="92" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="92" srcRngEndLn="93" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* file = fopen(filePath, &quot;r&quot;);" ElType=".P" rngLn="92">
              <Anns>
                <Ann msg="Tainted data: filePath[]" kind="var"/>
                <Ann msg="Call to a dangerous method" kind="point"/>
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a console (&quot;filePath[]&quot;) is injected to a file or path name" ln="92" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="228" rule="BD-SECURITY-TDFNAMES" FirstElSrcRngStartPos="0" lnHash="497856354" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Protect against file name injection" FirstElSrcRngStartln="227" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="306179239" lang="cpp" violId="b8d72a6b-3f6d-3370-99c6-fd0678c9cc03" locEndPos="0" urgent="true" locEndLn="93" goals="1," locStartln="92" sev="1" locRef="1" tool="c++test" lineHash="497856354" unbViolId="4c81acfb-8fa1-35d8-a2dd-239679a95dc9" locType="sr" hash="-1207189245" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="-786871230" ln="216" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="216" srcRngEndLn="217" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char filePath[MAX_PATH_LEN] = { 0 }; // Initialize with zeros" ElType="." rngLn="216"/>
        <ElDesc lineHash="1524434609" ln="218" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="218" srcRngEndLn="219" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="loadStoredPath(...)" ElType="." rngLn="218">
          <ElDescList>
            <ElDesc lineHash="842755070" ln="150" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="150" srcRngEndLn="151" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;r&quot;);" ElType="." rngLn="150"/>
            <ElDesc lineHash="1220656230" ln="151" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="151" srcRngEndLn="152" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!config) {" ElType="." rngLn="151">
              <Anns>
                <Ann msg="Condition evaluation: !config (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="2127008475" ln="154" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="154" srcRngEndLn="155" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (fgets(filePath, MAX_PATH_LEN, config) != NULL) {" ElType="." rngLn="154">
              <Anns>
                <Ann msg="Condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1861800122" ln="156" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="156" srcRngEndLn="157" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="filePath[strcspn(filePath, &quot;\n&quot;)] = '\0';" ElType="." rngLn="156"/>
            <ElDesc lineHash="-1802127606" ln="157" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="157" srcRngEndLn="158" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fclose(config);" ElType="." rngLn="157"/>
            <ElDesc lineHash="-1525876355" ln="158" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="158" srcRngEndLn="159" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return true;" ElType="." rngLn="158"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1524434609" ln="218" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="218" srcRngEndLn="219" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (loadStoredPath(filePath)) {" ElType="." rngLn="218">
          <Anns>
            <Ann msg="Condition evaluation: loadStoredPath(...) (true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1615095582" ln="219" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="219" srcRngEndLn="220" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Stored file path found: %s\n&quot;, filePath);" ElType="." rngLn="219"/>
        <ElDesc lineHash="667507342" ln="220" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="220" srcRngEndLn="221" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Do you want to delete the stored file path? (y/n): &quot;);" ElType="." rngLn="220"/>
        <ElDesc lineHash="10412016" ln="221" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="221" srcRngEndLn="222" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char choice;" ElType="." rngLn="221"/>
        <ElDesc lineHash="278597054" ln="222" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="222" srcRngEndLn="223" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(&quot; %c&quot;, &amp;choice);" ElType="." rngLn="222"/>
        <ElDesc lineHash="622142175" ln="224" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="224" srcRngEndLn="225" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (choice == 'y' || choice == 'Y') {" ElType="." rngLn="224">
          <Anns>
            <Ann msg="Condition evaluation: (choice == 121) (assuming true)" kind="condEval"/>
            <Ann msg="Condition evaluation: choice == 'y' || choice == 'Y' (true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-885291541" ln="225" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="225" srcRngEndLn="226" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="deleteStoredFilePath();" ElType="." rngLn="225">
          <ElDescList>
            <ElDesc lineHash="1027685507" ln="179" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="179" srcRngEndLn="180" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (remove(CONFIG_FILE) == 0) {" ElType="." rngLn="179">
              <Anns>
                <Ann msg="Condition evaluation: (remove(...) == 0) (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-982098717" ln="180" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="180" srcRngEndLn="181" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Stored file path deleted successfully.\n&quot;);" ElType="." rngLn="180"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-341041138" ln="226" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="226" srcRngEndLn="227" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Enter the license file path: &quot;);" ElType="." rngLn="226"/>
        <ElDesc lineHash="1917045625" ln="227" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="227" srcRngEndLn="228" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(...)" ElType=".C" rngLn="227">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: filePath[]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1917045625" ln="227" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="227" srcRngEndLn="228" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (scanf(&quot; %259s&quot;, filePath) != 1) { // Limit input length to prevent overflow" ElType="." rngLn="227">
          <Anns>
            <Ann msg="Condition evaluation: (scanf(...) != 1) (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="955622873" ln="231" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="231" srcRngEndLn="232" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="storeFilePath(filePath);" ElType="." rngLn="231">
          <ElDescList>
            <ElDesc lineHash="842904025" ln="166" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="166" srcRngEndLn="167" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;w&quot;);" ElType="." rngLn="166">
              <Anns>
                <Ann msg="Tainted data: filePath[]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="994035581" ln="167" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="167" srcRngEndLn="168" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (config) {" ElType="." rngLn="167">
              <Anns>
                <Ann msg="Condition evaluation: (config != 0) (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1782197061" ln="173" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="173" srcRngEndLn="174" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fprintf(stderr, &quot;Error: Unable to store file path.\n&quot;);" ElType="." rngLn="173"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-1143685017" ln="243" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="243" srcRngEndLn="244" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="checkDiaglistSection(filePath);" ElType="!" rngLn="243">
          <ElDescList>
            <ElDesc lineHash="497856354" ln="92" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="92" srcRngEndLn="93" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* file = fopen(filePath, &quot;r&quot;);" ElType=".P" rngLn="92">
              <Anns>
                <Ann msg="Tainted data: filePath[]" kind="var"/>
                <Ann msg="Call to a dangerous method" kind="point"/>
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a file (&quot;filePath[]&quot;) is injected to a file or path name" ln="92" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="155" rule="BD-SECURITY-TDFNAMES" FirstElSrcRngStartPos="0" lnHash="497856354" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Protect against file name injection" FirstElSrcRngStartln="154" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="212024387" lang="cpp" violId="9b785838-6af1-3149-8f61-5c54b10ab754" locEndPos="0" urgent="true" locEndLn="93" goals="1," locStartln="92" sev="1" locRef="1" tool="c++test" lineHash="497856354" unbViolId="bb9ba831-b3ae-312c-ba36-6e79fd4dec2d" locType="sr" hash="-1207189245" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="-786871230" ln="216" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="216" srcRngEndLn="217" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char filePath[MAX_PATH_LEN] = { 0 }; // Initialize with zeros" ElType="." rngLn="216"/>
        <ElDesc lineHash="1524434609" ln="218" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="218" srcRngEndLn="219" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="loadStoredPath(...)" ElType="!" rngLn="218">
          <ElDescList>
            <ElDesc lineHash="842755070" ln="150" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="150" srcRngEndLn="151" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;r&quot;);" ElType="." rngLn="150"/>
            <ElDesc lineHash="1220656230" ln="151" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="151" srcRngEndLn="152" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!config) {" ElType="." rngLn="151">
              <Anns>
                <Ann msg="Condition evaluation: !config (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="2127008475" ln="154" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="154" srcRngEndLn="155" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(...)" ElType=".C" rngLn="154">
              <Anns>
                <Ann msg="Tainting point" kind="cause"/>
                <Ann msg="Tainted data: filePath[]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="2127008475" ln="154" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="154" srcRngEndLn="155" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (fgets(filePath, MAX_PATH_LEN, config) != NULL) {" ElType="." rngLn="154">
              <Anns>
                <Ann msg="Condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1861800122" ln="156" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="156" srcRngEndLn="157" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="filePath[strcspn(filePath, &quot;\n&quot;)] = '\0';" ElType="." rngLn="156"/>
            <ElDesc lineHash="-1802127606" ln="157" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="157" srcRngEndLn="158" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fclose(config);" ElType="." rngLn="157"/>
            <ElDesc lineHash="-1525876355" ln="158" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="158" srcRngEndLn="159" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return true;" ElType="." rngLn="158"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1524434609" ln="218" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="218" srcRngEndLn="219" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (loadStoredPath(filePath)) {" ElType="." rngLn="218">
          <Anns>
            <Ann msg="Tainted data: filePath[]" kind="var"/>
            <Ann msg="Condition evaluation: loadStoredPath(...) (true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1615095582" ln="219" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="219" srcRngEndLn="220" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Stored file path found: %s\n&quot;, filePath);" ElType="." rngLn="219"/>
        <ElDesc lineHash="667507342" ln="220" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="220" srcRngEndLn="221" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Do you want to delete the stored file path? (y/n): &quot;);" ElType="." rngLn="220"/>
        <ElDesc lineHash="10412016" ln="221" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="221" srcRngEndLn="222" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char choice;" ElType="." rngLn="221"/>
        <ElDesc lineHash="278597054" ln="222" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="222" srcRngEndLn="223" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(&quot; %c&quot;, &amp;choice);" ElType="." rngLn="222"/>
        <ElDesc lineHash="622142175" ln="224" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="224" srcRngEndLn="225" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (choice == 'y' || choice == 'Y') {" ElType="." rngLn="224">
          <Anns>
            <Ann msg="Condition evaluation: (choice == 121) (assuming false)" kind="condEval"/>
            <Ann msg="Condition evaluation: (choice == 89) (assuming false)" kind="condEval"/>
            <Ann msg="Condition evaluation: choice == 'y' || choice == 'Y' (false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1143685017" ln="243" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="243" srcRngEndLn="244" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="checkDiaglistSection(filePath);" ElType="!" rngLn="243">
          <ElDescList>
            <ElDesc lineHash="497856354" ln="92" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="92" srcRngEndLn="93" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* file = fopen(filePath, &quot;r&quot;);" ElType=".P" rngLn="92">
              <Anns>
                <Ann msg="Tainted data: filePath[]" kind="var"/>
                <Ann msg="Call to a dangerous method" kind="point"/>
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a console (&quot;file&quot;) is used in a loop condition" ln="102" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Tainted data use in a loop condition" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="237" rule="BD-SECURITY-TDLOOP" FirstElSrcRngStartPos="0" lnHash="2086606902" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Validate potentially tainted data before it is used in the controlling expression of a loop" FirstElSrcRngStartln="236" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="555878856" lang="cpp" violId="cb6a4174-cd70-32eb-905f-cf70979e2d7f" locEndPos="0" urgent="true" locEndLn="103" goals="1," locStartln="102" sev="1" locRef="1" tool="c++test" lineHash="2086606902" unbViolId="60b53746-c1bb-3666-adfd-848c46c8c61d" locType="sr" hash="-1207189245" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="-786871230" ln="216" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="216" srcRngEndLn="217" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char filePath[MAX_PATH_LEN] = { 0 }; // Initialize with zeros" ElType="." rngLn="216"/>
        <ElDesc lineHash="1524434609" ln="218" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="218" srcRngEndLn="219" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="loadStoredPath(...)" ElType="." rngLn="218">
          <ElDescList>
            <ElDesc lineHash="842755070" ln="150" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="150" srcRngEndLn="151" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;r&quot;);" ElType="." rngLn="150"/>
            <ElDesc lineHash="1220656230" ln="151" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="151" srcRngEndLn="152" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!config) {" ElType="." rngLn="151">
              <Anns>
                <Ann msg="Condition evaluation: !config (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-474288024" ln="152" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="152" srcRngEndLn="153" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return false;" ElType="." rngLn="152"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1524434609" ln="218" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="218" srcRngEndLn="219" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (loadStoredPath(filePath)) {" ElType="." rngLn="218">
          <Anns>
            <Ann msg="Condition evaluation: loadStoredPath(...) (false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1506858587" ln="235" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="235" srcRngEndLn="236" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;No stored file path found. Please enter the license file path: &quot;);" ElType="." rngLn="235"/>
        <ElDesc lineHash="1115411321" ln="236" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="236" srcRngEndLn="237" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(...)" ElType=".C" rngLn="236">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: filePath[]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1115411321" ln="236" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="236" srcRngEndLn="237" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (scanf(&quot; %259s&quot;, filePath) != 1) { // Limit input length to prevent overflow" ElType="." rngLn="236">
          <Anns>
            <Ann msg="Condition evaluation: (scanf(...) != 1) (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1996922329" ln="240" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="240" srcRngEndLn="241" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="storeFilePath(filePath);" ElType="." rngLn="240">
          <ElDescList>
            <ElDesc lineHash="842904025" ln="166" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="166" srcRngEndLn="167" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;w&quot;);" ElType="." rngLn="166">
              <Anns>
                <Ann msg="Tainted data: filePath[]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="994035581" ln="167" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="167" srcRngEndLn="168" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (config) {" ElType="." rngLn="167">
              <Anns>
                <Ann msg="Condition evaluation: (config != 0) (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1782197061" ln="173" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="173" srcRngEndLn="174" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fprintf(stderr, &quot;Error: Unable to store file path.\n&quot;);" ElType="." rngLn="173"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-1143685017" ln="243" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="243" srcRngEndLn="244" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="checkDiaglistSection(filePath);" ElType="!" rngLn="243">
          <ElDescList>
            <ElDesc lineHash="497856354" ln="92" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="92" srcRngEndLn="93" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* file = fopen(filePath, &quot;r&quot;);" ElType="!" rngLn="92">
              <Anns>
                <Ann msg="Tainted data: filePath[]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-642891540" ln="93" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="93" srcRngEndLn="94" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!file) {" ElType="." rngLn="93">
              <Anns>
                <Ann msg="Tainted data: file" kind="var"/>
                <Ann msg="Condition evaluation: !file (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="1070453125" ln="98" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="98" srcRngEndLn="99" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char line[LINE_LEN];" ElType="." rngLn="98"/>
            <ElDesc lineHash="-1727056776" ln="99" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="99" srcRngEndLn="100" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="bool diaglistFound = false;" ElType="." rngLn="99"/>
            <ElDesc lineHash="2086606902" ln="102" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="102" srcRngEndLn="103" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(...)" ElType=".P" rngLn="102">
              <Anns>
                <Ann msg="Tainted data: file" kind="var"/>
                <Ann msg="Tainted data use in a loop condition" kind="point"/>
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a console (&quot;file&quot;) is used in a loop condition" ln="102" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Tainted data use in a loop condition" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="228" rule="BD-SECURITY-TDLOOP" FirstElSrcRngStartPos="0" lnHash="2086606902" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Validate potentially tainted data before it is used in the controlling expression of a loop" FirstElSrcRngStartln="227" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="-1957524548" lang="cpp" violId="b2895210-2cc4-39b8-9446-831c14fded20" locEndPos="0" urgent="true" locEndLn="103" goals="1," locStartln="102" sev="1" locRef="1" tool="c++test" lineHash="2086606902" unbViolId="6a52c52f-a5fc-3b87-8d25-7b39946bd209" locType="sr" hash="-1207189245" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="-786871230" ln="216" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="216" srcRngEndLn="217" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char filePath[MAX_PATH_LEN] = { 0 }; // Initialize with zeros" ElType="." rngLn="216"/>
        <ElDesc lineHash="1524434609" ln="218" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="218" srcRngEndLn="219" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="loadStoredPath(...)" ElType="." rngLn="218">
          <ElDescList>
            <ElDesc lineHash="842755070" ln="150" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="150" srcRngEndLn="151" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;r&quot;);" ElType="." rngLn="150"/>
            <ElDesc lineHash="1220656230" ln="151" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="151" srcRngEndLn="152" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!config) {" ElType="." rngLn="151">
              <Anns>
                <Ann msg="Condition evaluation: !config (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="2127008475" ln="154" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="154" srcRngEndLn="155" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (fgets(filePath, MAX_PATH_LEN, config) != NULL) {" ElType="." rngLn="154">
              <Anns>
                <Ann msg="Condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1861800122" ln="156" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="156" srcRngEndLn="157" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="filePath[strcspn(filePath, &quot;\n&quot;)] = '\0';" ElType="." rngLn="156"/>
            <ElDesc lineHash="-1802127606" ln="157" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="157" srcRngEndLn="158" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fclose(config);" ElType="." rngLn="157"/>
            <ElDesc lineHash="-1525876355" ln="158" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="158" srcRngEndLn="159" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return true;" ElType="." rngLn="158"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1524434609" ln="218" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="218" srcRngEndLn="219" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (loadStoredPath(filePath)) {" ElType="." rngLn="218">
          <Anns>
            <Ann msg="Condition evaluation: loadStoredPath(...) (true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1615095582" ln="219" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="219" srcRngEndLn="220" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Stored file path found: %s\n&quot;, filePath);" ElType="." rngLn="219"/>
        <ElDesc lineHash="667507342" ln="220" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="220" srcRngEndLn="221" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Do you want to delete the stored file path? (y/n): &quot;);" ElType="." rngLn="220"/>
        <ElDesc lineHash="10412016" ln="221" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="221" srcRngEndLn="222" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char choice;" ElType="." rngLn="221"/>
        <ElDesc lineHash="278597054" ln="222" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="222" srcRngEndLn="223" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(&quot; %c&quot;, &amp;choice);" ElType="." rngLn="222"/>
        <ElDesc lineHash="622142175" ln="224" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="224" srcRngEndLn="225" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (choice == 'y' || choice == 'Y') {" ElType="." rngLn="224">
          <Anns>
            <Ann msg="Condition evaluation: (choice == 121) (assuming true)" kind="condEval"/>
            <Ann msg="Condition evaluation: choice == 'y' || choice == 'Y' (true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-885291541" ln="225" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="225" srcRngEndLn="226" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="deleteStoredFilePath();" ElType="." rngLn="225">
          <ElDescList>
            <ElDesc lineHash="1027685507" ln="179" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="179" srcRngEndLn="180" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (remove(CONFIG_FILE) == 0) {" ElType="." rngLn="179">
              <Anns>
                <Ann msg="Condition evaluation: (remove(...) == 0) (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-982098717" ln="180" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="180" srcRngEndLn="181" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Stored file path deleted successfully.\n&quot;);" ElType="." rngLn="180"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-341041138" ln="226" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="226" srcRngEndLn="227" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Enter the license file path: &quot;);" ElType="." rngLn="226"/>
        <ElDesc lineHash="1917045625" ln="227" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="227" srcRngEndLn="228" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(...)" ElType=".C" rngLn="227">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: filePath[&lt;some index>]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1917045625" ln="227" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="227" srcRngEndLn="228" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (scanf(&quot; %259s&quot;, filePath) != 1) { // Limit input length to prevent overflow" ElType="." rngLn="227">
          <Anns>
            <Ann msg="Condition evaluation: (scanf(...) != 1) (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="955622873" ln="231" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="231" srcRngEndLn="232" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="storeFilePath(filePath);" ElType="!" rngLn="231">
          <ElDescList>
            <ElDesc lineHash="842904025" ln="166" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="166" srcRngEndLn="167" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;w&quot;);" ElType="." rngLn="166">
              <Anns>
                <Ann msg="Tainted data: ((char*)filePath)[&lt;some index>]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="994035581" ln="167" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="167" srcRngEndLn="168" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (config) {" ElType="." rngLn="167">
              <Anns>
                <Ann msg="Condition evaluation: (config != 0) (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1782197061" ln="173" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="173" srcRngEndLn="174" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fprintf(stderr, &quot;Error: Unable to store file path.\n&quot;);" ElType="!" rngLn="173"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-1143685017" ln="243" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="243" srcRngEndLn="244" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="checkDiaglistSection(filePath);" ElType="!" rngLn="243">
          <ElDescList>
            <ElDesc lineHash="497856354" ln="92" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="92" srcRngEndLn="93" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* file = fopen(filePath, &quot;r&quot;);" ElType="!" rngLn="92">
              <Anns>
                <Ann msg="Tainted data: ((char*)filePath)[&lt;some index>]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-642891540" ln="93" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="93" srcRngEndLn="94" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!file) {" ElType="." rngLn="93">
              <Anns>
                <Ann msg="Tainted data: file" kind="var"/>
                <Ann msg="Condition evaluation: !file (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="1070453125" ln="98" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="98" srcRngEndLn="99" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char line[LINE_LEN];" ElType="." rngLn="98"/>
            <ElDesc lineHash="-1727056776" ln="99" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="99" srcRngEndLn="100" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="bool diaglistFound = false;" ElType="." rngLn="99"/>
            <ElDesc lineHash="2086606902" ln="102" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="102" srcRngEndLn="103" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(...)" ElType=".P" rngLn="102">
              <Anns>
                <Ann msg="Tainted data: file" kind="var"/>
                <Ann msg="Tainted data use in a loop condition" kind="point"/>
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a file (&quot;file&quot;) is used in a loop condition" ln="102" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Tainted data use in a loop condition" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="155" rule="BD-SECURITY-TDLOOP" FirstElSrcRngStartPos="0" lnHash="2086606902" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Validate potentially tainted data before it is used in the controlling expression of a loop" FirstElSrcRngStartln="154" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="193495242" lang="cpp" violId="509b6fe8-0498-3f80-86f4-32b792c7a889" locEndPos="0" urgent="true" locEndLn="103" goals="1," locStartln="102" sev="1" locRef="1" tool="c++test" lineHash="2086606902" unbViolId="d9b46da3-ab41-31cd-afec-2a9cff44ae04" locType="sr" hash="-1207189245" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="-786871230" ln="216" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="216" srcRngEndLn="217" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char filePath[MAX_PATH_LEN] = { 0 }; // Initialize with zeros" ElType="." rngLn="216"/>
        <ElDesc lineHash="1524434609" ln="218" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="218" srcRngEndLn="219" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="loadStoredPath(...)" ElType="!" rngLn="218">
          <ElDescList>
            <ElDesc lineHash="842755070" ln="150" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="150" srcRngEndLn="151" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;r&quot;);" ElType="." rngLn="150"/>
            <ElDesc lineHash="1220656230" ln="151" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="151" srcRngEndLn="152" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!config) {" ElType="." rngLn="151">
              <Anns>
                <Ann msg="Condition evaluation: !config (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="2127008475" ln="154" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="154" srcRngEndLn="155" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(...)" ElType=".C" rngLn="154">
              <Anns>
                <Ann msg="Tainting point" kind="cause"/>
                <Ann msg="Tainted data: filePath[&lt;some index>]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="2127008475" ln="154" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="154" srcRngEndLn="155" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (fgets(filePath, MAX_PATH_LEN, config) != NULL) {" ElType="." rngLn="154">
              <Anns>
                <Ann msg="Condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1861800122" ln="156" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="156" srcRngEndLn="157" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="filePath[strcspn(filePath, &quot;\n&quot;)] = '\0';" ElType="." rngLn="156"/>
            <ElDesc lineHash="-1802127606" ln="157" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="157" srcRngEndLn="158" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fclose(config);" ElType="." rngLn="157"/>
            <ElDesc lineHash="-1525876355" ln="158" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="158" srcRngEndLn="159" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return true;" ElType="." rngLn="158"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1524434609" ln="218" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="218" srcRngEndLn="219" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (loadStoredPath(filePath)) {" ElType="." rngLn="218">
          <Anns>
            <Ann msg="Tainted data: filePath[&lt;some index>]" kind="var"/>
            <Ann msg="Condition evaluation: loadStoredPath(...) (true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1615095582" ln="219" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="219" srcRngEndLn="220" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Stored file path found: %s\n&quot;, filePath);" ElType="." rngLn="219"/>
        <ElDesc lineHash="667507342" ln="220" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="220" srcRngEndLn="221" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Do you want to delete the stored file path? (y/n): &quot;);" ElType="." rngLn="220"/>
        <ElDesc lineHash="10412016" ln="221" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="221" srcRngEndLn="222" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char choice;" ElType="." rngLn="221"/>
        <ElDesc lineHash="278597054" ln="222" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="222" srcRngEndLn="223" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(&quot; %c&quot;, &amp;choice);" ElType="." rngLn="222"/>
        <ElDesc lineHash="622142175" ln="224" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="224" srcRngEndLn="225" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (choice == 'y' || choice == 'Y') {" ElType="." rngLn="224">
          <Anns>
            <Ann msg="Condition evaluation: (choice == 121) (assuming false)" kind="condEval"/>
            <Ann msg="Condition evaluation: (choice == 89) (assuming false)" kind="condEval"/>
            <Ann msg="Condition evaluation: choice == 'y' || choice == 'Y' (false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1143685017" ln="243" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="243" srcRngEndLn="244" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="checkDiaglistSection(filePath);" ElType="!" rngLn="243">
          <ElDescList>
            <ElDesc lineHash="497856354" ln="92" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="92" srcRngEndLn="93" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* file = fopen(filePath, &quot;r&quot;);" ElType="!" rngLn="92">
              <Anns>
                <Ann msg="Tainted data: ((char*)filePath)[&lt;some index>]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-642891540" ln="93" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="93" srcRngEndLn="94" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!file) {" ElType="." rngLn="93">
              <Anns>
                <Ann msg="Tainted data: file" kind="var"/>
                <Ann msg="Condition evaluation: !file (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="1070453125" ln="98" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="98" srcRngEndLn="99" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char line[LINE_LEN];" ElType="." rngLn="98"/>
            <ElDesc lineHash="-1727056776" ln="99" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="99" srcRngEndLn="100" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="bool diaglistFound = false;" ElType="." rngLn="99"/>
            <ElDesc lineHash="2086606902" ln="102" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="102" srcRngEndLn="103" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(...)" ElType=".P" rngLn="102">
              <Anns>
                <Ann msg="Tainted data: file" kind="var"/>
                <Ann msg="Tainted data use in a loop condition" kind="point"/>
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a console (&quot;file&quot;) is used in a loop condition" ln="118" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Tainted data use in a loop condition" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="237" rule="BD-SECURITY-TDLOOP" FirstElSrcRngStartPos="0" lnHash="2086606902" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Validate potentially tainted data before it is used in the controlling expression of a loop" FirstElSrcRngStartln="236" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="-837718943" lang="cpp" violId="7a6b230b-8411-3e18-a2b1-c9f248be0f90" locEndPos="0" urgent="true" locEndLn="119" goals="1," locStartln="118" sev="1" locRef="1" tool="c++test" lineHash="2086606902" unbViolId="f9e4427b-9990-3140-9f23-c6871f14137b" locType="sr" hash="-1207189245" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="-786871230" ln="216" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="216" srcRngEndLn="217" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char filePath[MAX_PATH_LEN] = { 0 }; // Initialize with zeros" ElType="." rngLn="216"/>
        <ElDesc lineHash="1524434609" ln="218" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="218" srcRngEndLn="219" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="loadStoredPath(...)" ElType="." rngLn="218">
          <ElDescList>
            <ElDesc lineHash="842755070" ln="150" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="150" srcRngEndLn="151" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;r&quot;);" ElType="." rngLn="150"/>
            <ElDesc lineHash="1220656230" ln="151" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="151" srcRngEndLn="152" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!config) {" ElType="." rngLn="151">
              <Anns>
                <Ann msg="Condition evaluation: !config (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-474288024" ln="152" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="152" srcRngEndLn="153" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return false;" ElType="." rngLn="152"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1524434609" ln="218" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="218" srcRngEndLn="219" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (loadStoredPath(filePath)) {" ElType="." rngLn="218">
          <Anns>
            <Ann msg="Condition evaluation: loadStoredPath(...) (false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1506858587" ln="235" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="235" srcRngEndLn="236" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;No stored file path found. Please enter the license file path: &quot;);" ElType="." rngLn="235"/>
        <ElDesc lineHash="1115411321" ln="236" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="236" srcRngEndLn="237" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(...)" ElType=".C" rngLn="236">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: filePath[]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1115411321" ln="236" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="236" srcRngEndLn="237" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (scanf(&quot; %259s&quot;, filePath) != 1) { // Limit input length to prevent overflow" ElType="." rngLn="236">
          <Anns>
            <Ann msg="Condition evaluation: (scanf(...) != 1) (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1996922329" ln="240" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="240" srcRngEndLn="241" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="storeFilePath(filePath);" ElType="." rngLn="240">
          <ElDescList>
            <ElDesc lineHash="842904025" ln="166" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="166" srcRngEndLn="167" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;w&quot;);" ElType="." rngLn="166">
              <Anns>
                <Ann msg="Tainted data: filePath[]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="994035581" ln="167" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="167" srcRngEndLn="168" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (config) {" ElType="." rngLn="167">
              <Anns>
                <Ann msg="Condition evaluation: (config != 0) (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1782197061" ln="173" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="173" srcRngEndLn="174" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fprintf(stderr, &quot;Error: Unable to store file path.\n&quot;);" ElType="." rngLn="173"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-1143685017" ln="243" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="243" srcRngEndLn="244" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="checkDiaglistSection(filePath);" ElType="!" rngLn="243">
          <ElDescList>
            <ElDesc lineHash="497856354" ln="92" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="92" srcRngEndLn="93" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* file = fopen(filePath, &quot;r&quot;);" ElType="!" rngLn="92">
              <Anns>
                <Ann msg="Tainted data: filePath[]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-642891540" ln="93" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="93" srcRngEndLn="94" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!file) {" ElType="." rngLn="93">
              <Anns>
                <Ann msg="Tainted data: file" kind="var"/>
                <Ann msg="Condition evaluation: !file (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="1070453125" ln="98" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="98" srcRngEndLn="99" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char line[LINE_LEN];" ElType="." rngLn="98"/>
            <ElDesc lineHash="-1727056776" ln="99" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="99" srcRngEndLn="100" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="bool diaglistFound = false;" ElType="." rngLn="99"/>
            <ElDesc lineHash="2086606902" ln="102" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="102" srcRngEndLn="103" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="102">
              <Anns>
                <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
                <Ann msg="Entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-125611083" ln="103" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="103" srcRngEndLn="104" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strstr(line, &quot;# Diaglist&quot;) != NULL) {" ElType="." rngLn="103">
              <Anns>
                <Ann msg="Condition evaluation: (strstr(...) != 0) (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1089687517" ln="104" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="104" srcRngEndLn="105" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="diaglistFound = true;" ElType="." rngLn="104"/>
            <ElDesc lineHash="207609628" ln="105" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="105" srcRngEndLn="106" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="break;" ElType="." rngLn="105">
              <Anns>
                <Ann msg="Exit the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="1243469831" ln="109" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="109" srcRngEndLn="110" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!diaglistFound) {" ElType="." rngLn="109">
              <Anns>
                <Ann msg="Condition evaluation: !diaglistFound (false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-810956815" ln="115" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="115" srcRngEndLn="116" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Diaglist section found. Checking for dates...\n&quot;);" ElType="." rngLn="115"/>
            <ElDesc lineHash="2086606902" ln="118" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="118" srcRngEndLn="119" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(...)" ElType=".P" rngLn="118">
              <Anns>
                <Ann msg="Tainted data: file" kind="var"/>
                <Ann msg="Tainted data use in a loop condition" kind="point"/>
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a console (&quot;file&quot;) is used in a loop condition" ln="118" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Tainted data use in a loop condition" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="228" rule="BD-SECURITY-TDLOOP" FirstElSrcRngStartPos="0" lnHash="2086606902" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Validate potentially tainted data before it is used in the controlling expression of a loop" FirstElSrcRngStartln="227" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="1322534485" lang="cpp" violId="defb6a1f-6213-3f21-a37a-5fce03647609" locEndPos="0" urgent="true" locEndLn="119" goals="1," locStartln="118" sev="1" locRef="1" tool="c++test" lineHash="2086606902" unbViolId="2e69a9dd-23d0-3796-b12e-3e12399c404a" locType="sr" hash="-1207189245" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="-786871230" ln="216" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="216" srcRngEndLn="217" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char filePath[MAX_PATH_LEN] = { 0 }; // Initialize with zeros" ElType="." rngLn="216"/>
        <ElDesc lineHash="1524434609" ln="218" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="218" srcRngEndLn="219" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="loadStoredPath(...)" ElType="." rngLn="218">
          <ElDescList>
            <ElDesc lineHash="842755070" ln="150" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="150" srcRngEndLn="151" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;r&quot;);" ElType="." rngLn="150"/>
            <ElDesc lineHash="1220656230" ln="151" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="151" srcRngEndLn="152" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!config) {" ElType="." rngLn="151">
              <Anns>
                <Ann msg="Condition evaluation: !config (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="2127008475" ln="154" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="154" srcRngEndLn="155" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (fgets(filePath, MAX_PATH_LEN, config) != NULL) {" ElType="." rngLn="154">
              <Anns>
                <Ann msg="Condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1861800122" ln="156" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="156" srcRngEndLn="157" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="filePath[strcspn(filePath, &quot;\n&quot;)] = '\0';" ElType="." rngLn="156"/>
            <ElDesc lineHash="-1802127606" ln="157" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="157" srcRngEndLn="158" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fclose(config);" ElType="." rngLn="157"/>
            <ElDesc lineHash="-1525876355" ln="158" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="158" srcRngEndLn="159" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return true;" ElType="." rngLn="158"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1524434609" ln="218" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="218" srcRngEndLn="219" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (loadStoredPath(filePath)) {" ElType="." rngLn="218">
          <Anns>
            <Ann msg="Condition evaluation: loadStoredPath(...) (true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1615095582" ln="219" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="219" srcRngEndLn="220" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Stored file path found: %s\n&quot;, filePath);" ElType="." rngLn="219"/>
        <ElDesc lineHash="667507342" ln="220" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="220" srcRngEndLn="221" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Do you want to delete the stored file path? (y/n): &quot;);" ElType="." rngLn="220"/>
        <ElDesc lineHash="10412016" ln="221" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="221" srcRngEndLn="222" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char choice;" ElType="." rngLn="221"/>
        <ElDesc lineHash="278597054" ln="222" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="222" srcRngEndLn="223" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(&quot; %c&quot;, &amp;choice);" ElType="." rngLn="222"/>
        <ElDesc lineHash="622142175" ln="224" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="224" srcRngEndLn="225" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (choice == 'y' || choice == 'Y') {" ElType="." rngLn="224">
          <Anns>
            <Ann msg="Condition evaluation: (choice == 121) (assuming true)" kind="condEval"/>
            <Ann msg="Condition evaluation: choice == 'y' || choice == 'Y' (true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-885291541" ln="225" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="225" srcRngEndLn="226" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="deleteStoredFilePath();" ElType="." rngLn="225">
          <ElDescList>
            <ElDesc lineHash="1027685507" ln="179" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="179" srcRngEndLn="180" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (remove(CONFIG_FILE) == 0) {" ElType="." rngLn="179">
              <Anns>
                <Ann msg="Condition evaluation: (remove(...) == 0) (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-982098717" ln="180" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="180" srcRngEndLn="181" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Stored file path deleted successfully.\n&quot;);" ElType="." rngLn="180"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-341041138" ln="226" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="226" srcRngEndLn="227" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Enter the license file path: &quot;);" ElType="." rngLn="226"/>
        <ElDesc lineHash="1917045625" ln="227" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="227" srcRngEndLn="228" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(...)" ElType=".C" rngLn="227">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: filePath[&lt;some index>]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1917045625" ln="227" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="227" srcRngEndLn="228" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (scanf(&quot; %259s&quot;, filePath) != 1) { // Limit input length to prevent overflow" ElType="." rngLn="227">
          <Anns>
            <Ann msg="Condition evaluation: (scanf(...) != 1) (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="955622873" ln="231" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="231" srcRngEndLn="232" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="storeFilePath(filePath);" ElType="!" rngLn="231">
          <ElDescList>
            <ElDesc lineHash="842904025" ln="166" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="166" srcRngEndLn="167" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;w&quot;);" ElType="." rngLn="166">
              <Anns>
                <Ann msg="Tainted data: ((char*)filePath)[&lt;some index>]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="994035581" ln="167" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="167" srcRngEndLn="168" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (config) {" ElType="." rngLn="167">
              <Anns>
                <Ann msg="Condition evaluation: (config != 0) (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1782197061" ln="173" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="173" srcRngEndLn="174" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fprintf(stderr, &quot;Error: Unable to store file path.\n&quot;);" ElType="!" rngLn="173"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-1143685017" ln="243" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="243" srcRngEndLn="244" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="checkDiaglistSection(filePath);" ElType="!" rngLn="243">
          <ElDescList>
            <ElDesc lineHash="497856354" ln="92" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="92" srcRngEndLn="93" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* file = fopen(filePath, &quot;r&quot;);" ElType="!" rngLn="92">
              <Anns>
                <Ann msg="Tainted data: ((char*)filePath)[&lt;some index>]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-642891540" ln="93" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="93" srcRngEndLn="94" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!file) {" ElType="." rngLn="93">
              <Anns>
                <Ann msg="Tainted data: file" kind="var"/>
                <Ann msg="Condition evaluation: !file (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="1070453125" ln="98" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="98" srcRngEndLn="99" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char line[LINE_LEN];" ElType="." rngLn="98"/>
            <ElDesc lineHash="-1727056776" ln="99" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="99" srcRngEndLn="100" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="bool diaglistFound = false;" ElType="." rngLn="99"/>
            <ElDesc lineHash="2086606902" ln="102" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="102" srcRngEndLn="103" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="102">
              <Anns>
                <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
                <Ann msg="Entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-125611083" ln="103" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="103" srcRngEndLn="104" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strstr(line, &quot;# Diaglist&quot;) != NULL) {" ElType="." rngLn="103">
              <Anns>
                <Ann msg="Condition evaluation: (strstr(...) != 0) (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1089687517" ln="104" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="104" srcRngEndLn="105" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="diaglistFound = true;" ElType="." rngLn="104"/>
            <ElDesc lineHash="207609628" ln="105" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="105" srcRngEndLn="106" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="break;" ElType="." rngLn="105">
              <Anns>
                <Ann msg="Exit the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="1243469831" ln="109" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="109" srcRngEndLn="110" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!diaglistFound) {" ElType="." rngLn="109">
              <Anns>
                <Ann msg="Condition evaluation: !diaglistFound (false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-810956815" ln="115" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="115" srcRngEndLn="116" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Diaglist section found. Checking for dates...\n&quot;);" ElType="." rngLn="115"/>
            <ElDesc lineHash="2086606902" ln="118" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="118" srcRngEndLn="119" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(...)" ElType=".P" rngLn="118">
              <Anns>
                <Ann msg="Tainted data: file" kind="var"/>
                <Ann msg="Tainted data use in a loop condition" kind="point"/>
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a console (&quot;datePos&quot;) is used in a loop condition" ln="122" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Tainted data use in a loop condition" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="237" rule="BD-SECURITY-TDLOOP" FirstElSrcRngStartPos="0" lnHash="-1597845385" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Validate potentially tainted data before it is used in the controlling expression of a loop" FirstElSrcRngStartln="236" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="2099284031" lang="cpp" violId="c7beba6c-9489-3549-9533-12f57aebb024" locEndPos="0" urgent="true" locEndLn="123" goals="1," locStartln="122" sev="1" locRef="1" tool="c++test" lineHash="-1597845385" unbViolId="d9919651-59c5-3f82-b661-e6d62badd7a2" locType="sr" hash="-1207189245" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="-786871230" ln="216" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="216" srcRngEndLn="217" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char filePath[MAX_PATH_LEN] = { 0 }; // Initialize with zeros" ElType="." rngLn="216"/>
        <ElDesc lineHash="1524434609" ln="218" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="218" srcRngEndLn="219" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="loadStoredPath(...)" ElType="." rngLn="218">
          <ElDescList>
            <ElDesc lineHash="842755070" ln="150" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="150" srcRngEndLn="151" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;r&quot;);" ElType="." rngLn="150"/>
            <ElDesc lineHash="1220656230" ln="151" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="151" srcRngEndLn="152" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!config) {" ElType="." rngLn="151">
              <Anns>
                <Ann msg="Condition evaluation: !config (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-474288024" ln="152" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="152" srcRngEndLn="153" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return false;" ElType="." rngLn="152"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1524434609" ln="218" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="218" srcRngEndLn="219" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (loadStoredPath(filePath)) {" ElType="." rngLn="218">
          <Anns>
            <Ann msg="Condition evaluation: loadStoredPath(...) (false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1506858587" ln="235" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="235" srcRngEndLn="236" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;No stored file path found. Please enter the license file path: &quot;);" ElType="." rngLn="235"/>
        <ElDesc lineHash="1115411321" ln="236" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="236" srcRngEndLn="237" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(...)" ElType=".C" rngLn="236">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: filePath[]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1115411321" ln="236" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="236" srcRngEndLn="237" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (scanf(&quot; %259s&quot;, filePath) != 1) { // Limit input length to prevent overflow" ElType="." rngLn="236">
          <Anns>
            <Ann msg="Condition evaluation: (scanf(...) != 1) (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1996922329" ln="240" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="240" srcRngEndLn="241" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="storeFilePath(filePath);" ElType="." rngLn="240">
          <ElDescList>
            <ElDesc lineHash="842904025" ln="166" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="166" srcRngEndLn="167" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;w&quot;);" ElType="." rngLn="166">
              <Anns>
                <Ann msg="Tainted data: filePath[]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="994035581" ln="167" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="167" srcRngEndLn="168" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (config) {" ElType="." rngLn="167">
              <Anns>
                <Ann msg="Condition evaluation: (config != 0) (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1782197061" ln="173" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="173" srcRngEndLn="174" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fprintf(stderr, &quot;Error: Unable to store file path.\n&quot;);" ElType="." rngLn="173"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-1143685017" ln="243" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="243" srcRngEndLn="244" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="checkDiaglistSection(filePath);" ElType="!" rngLn="243">
          <ElDescList>
            <ElDesc lineHash="497856354" ln="92" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="92" srcRngEndLn="93" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* file = fopen(filePath, &quot;r&quot;);" ElType="!" rngLn="92">
              <Anns>
                <Ann msg="Tainted data: filePath[]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-642891540" ln="93" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="93" srcRngEndLn="94" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!file) {" ElType="." rngLn="93">
              <Anns>
                <Ann msg="Tainted data: file" kind="var"/>
                <Ann msg="Condition evaluation: !file (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="1070453125" ln="98" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="98" srcRngEndLn="99" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char line[LINE_LEN];" ElType="." rngLn="98"/>
            <ElDesc lineHash="-1727056776" ln="99" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="99" srcRngEndLn="100" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="bool diaglistFound = false;" ElType="." rngLn="99"/>
            <ElDesc lineHash="2086606902" ln="102" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="102" srcRngEndLn="103" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(...)" ElType="!" rngLn="102"/>
            <ElDesc lineHash="2086606902" ln="102" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="102" srcRngEndLn="103" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="102">
              <Anns>
                <Ann msg="Tainted data: line[]" kind="var"/>
                <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
                <Ann msg="Entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-125611083" ln="103" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="103" srcRngEndLn="104" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strstr(line, &quot;# Diaglist&quot;) != NULL) {" ElType="." rngLn="103">
              <Anns>
                <Ann msg="Condition evaluation: (strstr(...) != 0) (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1089687517" ln="104" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="104" srcRngEndLn="105" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="diaglistFound = true;" ElType="." rngLn="104"/>
            <ElDesc lineHash="207609628" ln="105" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="105" srcRngEndLn="106" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="break;" ElType="." rngLn="105">
              <Anns>
                <Ann msg="Exit the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="1243469831" ln="109" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="109" srcRngEndLn="110" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!diaglistFound) {" ElType="." rngLn="109">
              <Anns>
                <Ann msg="Condition evaluation: !diaglistFound (false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-810956815" ln="115" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="115" srcRngEndLn="116" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Diaglist section found. Checking for dates...\n&quot;);" ElType="." rngLn="115"/>
            <ElDesc lineHash="2086606902" ln="118" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="118" srcRngEndLn="119" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="118">
              <Anns>
                <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
                <Ann msg="Entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-688285623" ln="119" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="119" srcRngEndLn="120" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int day, month, year;" ElType="." rngLn="119"/>
            <ElDesc lineHash="723039117" ln="120" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="120" srcRngEndLn="121" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char* datePos = strstr(line, &quot; &quot;); // Start looking for dates after spaces" ElType="!" rngLn="120"/>
            <ElDesc lineHash="-1597845385" ln="122" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="122" srcRngEndLn="123" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (datePos) {" ElType=".P" rngLn="122">
              <Anns>
                <Ann msg="Tainted data: datePos" kind="var"/>
                <Ann msg="Tainted data use in a loop condition" kind="point"/>
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a file (&quot;datePos&quot;) is used in a loop condition" ln="122" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Tainted data use in a loop condition" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="103" rule="BD-SECURITY-TDLOOP" FirstElSrcRngStartPos="0" lnHash="-1597845385" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Validate potentially tainted data before it is used in the controlling expression of a loop" FirstElSrcRngStartln="102" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="1653528277" lang="cpp" violId="12f04ba9-a3ca-3ba5-9be9-6633c2c28fc5" locEndPos="0" urgent="true" locEndLn="123" goals="1," locStartln="122" sev="1" locRef="1" tool="c++test" lineHash="-1597845385" unbViolId="e2d3eaca-70f7-3690-a04c-67e67f2ed433" locType="sr" hash="-1207189245" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="497856354" ln="92" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="92" srcRngEndLn="93" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* file = fopen(filePath, &quot;r&quot;);" ElType="." rngLn="92"/>
        <ElDesc lineHash="-642891540" ln="93" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="93" srcRngEndLn="94" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!file) {" ElType="." rngLn="93">
          <Anns>
            <Ann msg="Condition evaluation: !file (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1070453125" ln="98" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="98" srcRngEndLn="99" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char line[LINE_LEN];" ElType="." rngLn="98"/>
        <ElDesc lineHash="-1727056776" ln="99" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="99" srcRngEndLn="100" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="bool diaglistFound = false;" ElType="." rngLn="99"/>
        <ElDesc lineHash="2086606902" ln="102" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="102" srcRngEndLn="103" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(...)" ElType=".C" rngLn="102">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: line[&lt;some index>]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2086606902" ln="102" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="102" srcRngEndLn="103" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="102">
          <Anns>
            <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-125611083" ln="103" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="103" srcRngEndLn="104" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strstr(line, &quot;# Diaglist&quot;) != NULL) {" ElType="." rngLn="103">
          <Anns>
            <Ann msg="Condition evaluation: (strstr(...) != 0) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1089687517" ln="104" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="104" srcRngEndLn="105" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="diaglistFound = true;" ElType="." rngLn="104"/>
        <ElDesc lineHash="207609628" ln="105" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="105" srcRngEndLn="106" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="break;" ElType="." rngLn="105">
          <Anns>
            <Ann msg="Exit the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1243469831" ln="109" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="109" srcRngEndLn="110" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!diaglistFound) {" ElType="." rngLn="109">
          <Anns>
            <Ann msg="Condition evaluation: !diaglistFound (false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-810956815" ln="115" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="115" srcRngEndLn="116" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Diaglist section found. Checking for dates...\n&quot;);" ElType="." rngLn="115"/>
        <ElDesc lineHash="2086606902" ln="118" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="118" srcRngEndLn="119" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="118">
          <Anns>
            <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-688285623" ln="119" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="119" srcRngEndLn="120" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int day, month, year;" ElType="." rngLn="119"/>
        <ElDesc lineHash="723039117" ln="120" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="120" srcRngEndLn="121" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char* datePos = strstr(line, &quot; &quot;); // Start looking for dates after spaces" ElType="!" rngLn="120"/>
        <ElDesc lineHash="-1597845385" ln="122" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="122" srcRngEndLn="123" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (datePos) {" ElType=".P" rngLn="122">
          <Anns>
            <Ann msg="Tainted data: datePos" kind="var"/>
            <Ann msg="Tainted data use in a loop condition" kind="point"/>
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a console (&quot;datePos&quot;) is used in a loop condition" ln="122" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Tainted data use in a loop condition" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="228" rule="BD-SECURITY-TDLOOP" FirstElSrcRngStartPos="0" lnHash="-1597845385" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Validate potentially tainted data before it is used in the controlling expression of a loop" FirstElSrcRngStartln="227" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="-784251093" lang="cpp" violId="51a96913-54ac-3be7-9ab0-44891c130cf3" locEndPos="0" urgent="true" locEndLn="123" goals="1," locStartln="122" sev="1" locRef="1" tool="c++test" lineHash="-1597845385" unbViolId="5ac308c7-309a-339b-b9be-5ab197d12327" locType="sr" hash="-1207189245" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="-786871230" ln="216" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="216" srcRngEndLn="217" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char filePath[MAX_PATH_LEN] = { 0 }; // Initialize with zeros" ElType="." rngLn="216"/>
        <ElDesc lineHash="1524434609" ln="218" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="218" srcRngEndLn="219" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="loadStoredPath(...)" ElType="." rngLn="218">
          <ElDescList>
            <ElDesc lineHash="842755070" ln="150" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="150" srcRngEndLn="151" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;r&quot;);" ElType="." rngLn="150"/>
            <ElDesc lineHash="1220656230" ln="151" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="151" srcRngEndLn="152" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!config) {" ElType="." rngLn="151">
              <Anns>
                <Ann msg="Condition evaluation: !config (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="2127008475" ln="154" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="154" srcRngEndLn="155" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (fgets(filePath, MAX_PATH_LEN, config) != NULL) {" ElType="." rngLn="154">
              <Anns>
                <Ann msg="Condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1861800122" ln="156" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="156" srcRngEndLn="157" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="filePath[strcspn(filePath, &quot;\n&quot;)] = '\0';" ElType="." rngLn="156"/>
            <ElDesc lineHash="-1802127606" ln="157" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="157" srcRngEndLn="158" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fclose(config);" ElType="." rngLn="157"/>
            <ElDesc lineHash="-1525876355" ln="158" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="158" srcRngEndLn="159" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return true;" ElType="." rngLn="158"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1524434609" ln="218" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="218" srcRngEndLn="219" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (loadStoredPath(filePath)) {" ElType="." rngLn="218">
          <Anns>
            <Ann msg="Condition evaluation: loadStoredPath(...) (true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1615095582" ln="219" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="219" srcRngEndLn="220" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Stored file path found: %s\n&quot;, filePath);" ElType="." rngLn="219"/>
        <ElDesc lineHash="667507342" ln="220" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="220" srcRngEndLn="221" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Do you want to delete the stored file path? (y/n): &quot;);" ElType="." rngLn="220"/>
        <ElDesc lineHash="10412016" ln="221" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="221" srcRngEndLn="222" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char choice;" ElType="." rngLn="221"/>
        <ElDesc lineHash="278597054" ln="222" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="222" srcRngEndLn="223" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(&quot; %c&quot;, &amp;choice);" ElType="." rngLn="222"/>
        <ElDesc lineHash="622142175" ln="224" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="224" srcRngEndLn="225" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (choice == 'y' || choice == 'Y') {" ElType="." rngLn="224">
          <Anns>
            <Ann msg="Condition evaluation: (choice == 121) (assuming true)" kind="condEval"/>
            <Ann msg="Condition evaluation: choice == 'y' || choice == 'Y' (true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-885291541" ln="225" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="225" srcRngEndLn="226" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="deleteStoredFilePath();" ElType="." rngLn="225">
          <ElDescList>
            <ElDesc lineHash="1027685507" ln="179" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="179" srcRngEndLn="180" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (remove(CONFIG_FILE) == 0) {" ElType="." rngLn="179">
              <Anns>
                <Ann msg="Condition evaluation: (remove(...) == 0) (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-982098717" ln="180" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="180" srcRngEndLn="181" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Stored file path deleted successfully.\n&quot;);" ElType="." rngLn="180"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-341041138" ln="226" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="226" srcRngEndLn="227" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Enter the license file path: &quot;);" ElType="." rngLn="226"/>
        <ElDesc lineHash="1917045625" ln="227" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="227" srcRngEndLn="228" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(...)" ElType=".C" rngLn="227">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: filePath[&lt;some index>]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1917045625" ln="227" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="227" srcRngEndLn="228" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (scanf(&quot; %259s&quot;, filePath) != 1) { // Limit input length to prevent overflow" ElType="." rngLn="227">
          <Anns>
            <Ann msg="Condition evaluation: (scanf(...) != 1) (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="955622873" ln="231" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="231" srcRngEndLn="232" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="storeFilePath(filePath);" ElType="!" rngLn="231">
          <ElDescList>
            <ElDesc lineHash="842904025" ln="166" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="166" srcRngEndLn="167" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;w&quot;);" ElType="." rngLn="166">
              <Anns>
                <Ann msg="Tainted data: ((char*)filePath)[&lt;some index>]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="994035581" ln="167" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="167" srcRngEndLn="168" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (config) {" ElType="." rngLn="167">
              <Anns>
                <Ann msg="Condition evaluation: (config != 0) (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1782197061" ln="173" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="173" srcRngEndLn="174" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fprintf(stderr, &quot;Error: Unable to store file path.\n&quot;);" ElType="!" rngLn="173"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-1143685017" ln="243" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="243" srcRngEndLn="244" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="checkDiaglistSection(filePath);" ElType="!" rngLn="243">
          <ElDescList>
            <ElDesc lineHash="497856354" ln="92" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="92" srcRngEndLn="93" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* file = fopen(filePath, &quot;r&quot;);" ElType="!" rngLn="92">
              <Anns>
                <Ann msg="Tainted data: ((char*)filePath)[&lt;some index>]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-642891540" ln="93" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="93" srcRngEndLn="94" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!file) {" ElType="." rngLn="93">
              <Anns>
                <Ann msg="Tainted data: file" kind="var"/>
                <Ann msg="Condition evaluation: !file (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="1070453125" ln="98" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="98" srcRngEndLn="99" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char line[LINE_LEN];" ElType="." rngLn="98"/>
            <ElDesc lineHash="-1727056776" ln="99" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="99" srcRngEndLn="100" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="bool diaglistFound = false;" ElType="." rngLn="99"/>
            <ElDesc lineHash="2086606902" ln="102" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="102" srcRngEndLn="103" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(...)" ElType="!" rngLn="102"/>
            <ElDesc lineHash="2086606902" ln="102" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="102" srcRngEndLn="103" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="102">
              <Anns>
                <Ann msg="Tainted data: line[]" kind="var"/>
                <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
                <Ann msg="Entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-125611083" ln="103" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="103" srcRngEndLn="104" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strstr(line, &quot;# Diaglist&quot;) != NULL) {" ElType="." rngLn="103">
              <Anns>
                <Ann msg="Condition evaluation: (strstr(...) != 0) (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1089687517" ln="104" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="104" srcRngEndLn="105" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="diaglistFound = true;" ElType="." rngLn="104"/>
            <ElDesc lineHash="207609628" ln="105" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="105" srcRngEndLn="106" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="break;" ElType="." rngLn="105">
              <Anns>
                <Ann msg="Exit the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="1243469831" ln="109" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="109" srcRngEndLn="110" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!diaglistFound) {" ElType="." rngLn="109">
              <Anns>
                <Ann msg="Condition evaluation: !diaglistFound (false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-810956815" ln="115" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="115" srcRngEndLn="116" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Diaglist section found. Checking for dates...\n&quot;);" ElType="." rngLn="115"/>
            <ElDesc lineHash="2086606902" ln="118" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="118" srcRngEndLn="119" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="118">
              <Anns>
                <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
                <Ann msg="Entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-688285623" ln="119" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="119" srcRngEndLn="120" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int day, month, year;" ElType="." rngLn="119"/>
            <ElDesc lineHash="723039117" ln="120" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="120" srcRngEndLn="121" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char* datePos = strstr(line, &quot; &quot;); // Start looking for dates after spaces" ElType="!" rngLn="120"/>
            <ElDesc lineHash="-1597845385" ln="122" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="122" srcRngEndLn="123" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (datePos) {" ElType=".P" rngLn="122">
              <Anns>
                <Ann msg="Tainted data: datePos" kind="var"/>
                <Ann msg="Tainted data use in a loop condition" kind="point"/>
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a file (&quot;datePos&quot;) is used in a loop condition" ln="122" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Tainted data use in a loop condition" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="119" rule="BD-SECURITY-TDLOOP" FirstElSrcRngStartPos="0" lnHash="-1597845385" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Validate potentially tainted data before it is used in the controlling expression of a loop" FirstElSrcRngStartln="118" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="1653528277" lang="cpp" violId="062cfe13-a429-398b-a91d-a5125cd67839" locEndPos="0" urgent="true" locEndLn="123" goals="1," locStartln="122" sev="1" locRef="1" tool="c++test" lineHash="-1597845385" unbViolId="78002774-c268-3726-ad49-1125d7199086" locType="sr" hash="-1207189245" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="497856354" ln="92" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="92" srcRngEndLn="93" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* file = fopen(filePath, &quot;r&quot;);" ElType="." rngLn="92"/>
        <ElDesc lineHash="-642891540" ln="93" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="93" srcRngEndLn="94" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!file) {" ElType="." rngLn="93">
          <Anns>
            <Ann msg="Condition evaluation: !file (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1070453125" ln="98" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="98" srcRngEndLn="99" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char line[LINE_LEN];" ElType="." rngLn="98"/>
        <ElDesc lineHash="-1727056776" ln="99" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="99" srcRngEndLn="100" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="bool diaglistFound = false;" ElType="." rngLn="99"/>
        <ElDesc lineHash="2086606902" ln="102" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="102" srcRngEndLn="103" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="102">
          <Anns>
            <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-125611083" ln="103" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="103" srcRngEndLn="104" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strstr(line, &quot;# Diaglist&quot;) != NULL) {" ElType="." rngLn="103">
          <Anns>
            <Ann msg="Condition evaluation: (strstr(...) != 0) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1089687517" ln="104" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="104" srcRngEndLn="105" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="diaglistFound = true;" ElType="." rngLn="104"/>
        <ElDesc lineHash="207609628" ln="105" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="105" srcRngEndLn="106" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="break;" ElType="." rngLn="105">
          <Anns>
            <Ann msg="Exit the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1243469831" ln="109" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="109" srcRngEndLn="110" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!diaglistFound) {" ElType="." rngLn="109">
          <Anns>
            <Ann msg="Condition evaluation: !diaglistFound (false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-810956815" ln="115" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="115" srcRngEndLn="116" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Diaglist section found. Checking for dates...\n&quot;);" ElType="." rngLn="115"/>
        <ElDesc lineHash="2086606902" ln="118" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="118" srcRngEndLn="119" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(...)" ElType=".C" rngLn="118">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: line[&lt;some index>]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2086606902" ln="118" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="118" srcRngEndLn="119" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="118">
          <Anns>
            <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-688285623" ln="119" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="119" srcRngEndLn="120" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int day, month, year;" ElType="." rngLn="119"/>
        <ElDesc lineHash="723039117" ln="120" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="120" srcRngEndLn="121" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char* datePos = strstr(line, &quot; &quot;); // Start looking for dates after spaces" ElType="!" rngLn="120"/>
        <ElDesc lineHash="-1597845385" ln="122" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="122" srcRngEndLn="123" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (datePos) {" ElType=".P" rngLn="122">
          <Anns>
            <Ann msg="Tainted data: datePos" kind="var"/>
            <Ann msg="Tainted data use in a loop condition" kind="point"/>
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a file (&quot;monthStr[0]&quot;) is printed on a console" ln="131" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="119" rule="BD-SECURITY-TDCONSOLE" FirstElSrcRngStartPos="0" lnHash="1153759191" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Avoid printing tainted data on the output console" FirstElSrcRngStartln="118" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="-1968909257" lang="cpp" violId="6f6f5e39-3ced-32a6-a3a7-7d465a3d6f55" locEndPos="0" urgent="true" locEndLn="132" goals="1," locStartln="131" sev="1" locRef="1" tool="c++test" lineHash="1153759191" unbViolId="799e3160-2031-3250-80f3-0fa89ea153a1" locType="sr" hash="-1207189245" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="497856354" ln="92" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="92" srcRngEndLn="93" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* file = fopen(filePath, &quot;r&quot;);" ElType="." rngLn="92"/>
        <ElDesc lineHash="-642891540" ln="93" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="93" srcRngEndLn="94" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!file) {" ElType="." rngLn="93">
          <Anns>
            <Ann msg="Condition evaluation: !file (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1070453125" ln="98" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="98" srcRngEndLn="99" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char line[LINE_LEN];" ElType="." rngLn="98"/>
        <ElDesc lineHash="-1727056776" ln="99" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="99" srcRngEndLn="100" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="bool diaglistFound = false;" ElType="." rngLn="99"/>
        <ElDesc lineHash="2086606902" ln="102" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="102" srcRngEndLn="103" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="102">
          <Anns>
            <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-125611083" ln="103" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="103" srcRngEndLn="104" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strstr(line, &quot;# Diaglist&quot;) != NULL) {" ElType="." rngLn="103">
          <Anns>
            <Ann msg="Condition evaluation: (strstr(...) != 0) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1089687517" ln="104" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="104" srcRngEndLn="105" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="diaglistFound = true;" ElType="." rngLn="104"/>
        <ElDesc lineHash="207609628" ln="105" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="105" srcRngEndLn="106" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="break;" ElType="." rngLn="105">
          <Anns>
            <Ann msg="Exit the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1243469831" ln="109" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="109" srcRngEndLn="110" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!diaglistFound) {" ElType="." rngLn="109">
          <Anns>
            <Ann msg="Condition evaluation: !diaglistFound (false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-810956815" ln="115" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="115" srcRngEndLn="116" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Diaglist section found. Checking for dates...\n&quot;);" ElType="." rngLn="115"/>
        <ElDesc lineHash="2086606902" ln="118" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="118" srcRngEndLn="119" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(...)" ElType=".C" rngLn="118">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: line[&lt;some index>]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2086606902" ln="118" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="118" srcRngEndLn="119" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="118">
          <Anns>
            <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-688285623" ln="119" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="119" srcRngEndLn="120" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int day, month, year;" ElType="." rngLn="119"/>
        <ElDesc lineHash="723039117" ln="120" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="120" srcRngEndLn="121" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char* datePos = strstr(line, &quot; &quot;); // Start looking for dates after spaces" ElType="!" rngLn="120"/>
        <ElDesc lineHash="-1597845385" ln="122" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="122" srcRngEndLn="123" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (datePos) {" ElType="." rngLn="122">
          <Anns>
            <Ann msg="Tainted data: datePos" kind="var"/>
            <Ann msg="Loop condition evaluation: (datePos != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1188863936" ln="123" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="123" srcRngEndLn="124" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (sscanf(datePos, &quot;%2d-%*3s-%4d&quot;, &amp;day, &amp;year) == 2) {" ElType="." rngLn="123">
          <Anns>
            <Ann msg="Condition evaluation: (sscanf(...) == 2) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1916454930" ln="124" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="124" srcRngEndLn="125" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char monthStr[4];" ElType="." rngLn="124"/>
        <ElDesc lineHash="936057600" ln="125" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="125" srcRngEndLn="126" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="sscanf(datePos, &quot;%*2d-%3s-%*4d&quot;, monthStr);" ElType="!" rngLn="125"/>
        <ElDesc lineHash="-162925558" ln="126" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="126" srcRngEndLn="127" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="month = monthToNumber(monthStr);" ElType="!" rngLn="126">
          <ElDescList>
            <ElDesc lineHash="871928418" ln="43" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="43" srcRngEndLn="44" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char monthLower[4];" ElType="." rngLn="43">
              <Anns>
                <Ann msg="Tainted data: month[]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="1738018591" ln="44" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="44" srcRngEndLn="45" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 3; i++) {" ElType="." rngLn="44">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 3) (true)" kind="condEval"/>
                <Ann msg="Entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="1002600856" ln="45" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="45" srcRngEndLn="46" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="monthLower[i] = tolower(month[i]);" ElType="!" rngLn="45"/>
            <ElDesc lineHash="1738018591" ln="44" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="44" srcRngEndLn="45" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 3; i++) {" ElType="." rngLn="44">
              <Anns>
                <Ann msg="Tainted data: ((char*)month)[0]" kind="var"/>
                <Ann msg="Loop condition evaluation: (i &lt; 3) (assuming false)" kind="condEval"/>
                <Ann msg="Not entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="407903157" ln="47" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="47" srcRngEndLn="48" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="monthLower[3] = '\0'; // Null-terminate the string" ElType="." rngLn="47"/>
            <ElDesc lineHash="-1252698123" ln="49" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="49" srcRngEndLn="50" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 12; i++) {" ElType="." rngLn="49">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 12) (true)" kind="condEval"/>
                <Ann msg="Entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-2072426268" ln="50" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="50" srcRngEndLn="51" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strcmp(monthLower, months[i]) == 0) {" ElType="." rngLn="50">
              <Anns>
                <Ann msg="Condition evaluation: (strcmp(...) == 0) (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1253033097" ln="51" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="51" srcRngEndLn="52" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return i; // Return the zero-based index for the month" ElType="!" rngLn="51"/>
          </ElDescList>
          <Anns>
            <Ann msg="Tainted data: monthStr[]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1972123649" ln="128" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="128" srcRngEndLn="129" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (month != -1) {" ElType="." rngLn="128">
          <Anns>
            <Ann msg="Tainted data: monthStr[0]" kind="var"/>
            <Ann msg="Condition evaluation: (month != -1) (true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1063052744" ln="129" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="129" srcRngEndLn="130" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int daysLeft = daysUntil(day, month, year);" ElType="." rngLn="129">
          <ElDescList>
            <ElDesc lineHash="-279154857" ln="72" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="72" srcRngEndLn="73" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="struct tm future = { 0 };" ElType="." rngLn="72"/>
            <ElDesc lineHash="-134161896" ln="74" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="74" srcRngEndLn="75" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="future.tm_mday = day;" ElType="." rngLn="74"/>
            <ElDesc lineHash="-1806589075" ln="75" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="75" srcRngEndLn="76" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="future.tm_mon = month;" ElType="." rngLn="75"/>
            <ElDesc lineHash="-847282296" ln="76" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="76" srcRngEndLn="77" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="future.tm_year = year - 1900;" ElType="." rngLn="76"/>
            <ElDesc lineHash="-109824665" ln="77" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="77" srcRngEndLn="78" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="future.tm_isdst = -1; // Ignore daylight saving time" ElType="." rngLn="77"/>
            <ElDesc lineHash="1951175529" ln="79" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="79" srcRngEndLn="80" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="time_t now = time(NULL);" ElType="." rngLn="79"/>
            <ElDesc lineHash="559573299" ln="80" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="80" srcRngEndLn="81" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="time_t futureTime = mktime(&amp;future);" ElType="." rngLn="80"/>
            <ElDesc lineHash="325780107" ln="82" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="82" srcRngEndLn="83" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (futureTime == -1) {" ElType="." rngLn="82">
              <Anns>
                <Ann msg="Condition evaluation: (futureTime == -1) (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="988477150" ln="87" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="87" srcRngEndLn="88" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return (int)((futureTime - now) / (60 * 60 * 24));" ElType="." rngLn="87"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1752044184" ln="130" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="130" srcRngEndLn="131" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (daysLeft >= 0) {" ElType="." rngLn="130">
          <Anns>
            <Ann msg="Condition evaluation: (daysLeft >= 0) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1153759191" ln="131" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="131" srcRngEndLn="132" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Expiration date: %02d-%s-%04d, Days left: %d\n&quot;, day, monthStr, year, daysLeft);" ElType=".P" rngLn="131">
          <Anns>
            <Ann msg="Tainted data: monthStr[0]" kind="var"/>
            <Ann msg="Call to a dangerous method" kind="point"/>
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a file (&quot;monthStr[0]&quot;) is printed on a console" ln="131" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="103" rule="BD-SECURITY-TDCONSOLE" FirstElSrcRngStartPos="0" lnHash="1153759191" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Avoid printing tainted data on the output console" FirstElSrcRngStartln="102" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="-1968909257" lang="cpp" violId="1e394823-ad54-3bef-8df4-c29babdf161c" locEndPos="0" urgent="true" locEndLn="132" goals="1," locStartln="131" sev="1" locRef="1" tool="c++test" lineHash="1153759191" unbViolId="55dd51d6-d8b5-3bbd-8b9a-aef9ebc5364a" locType="sr" hash="-1207189245" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="497856354" ln="92" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="92" srcRngEndLn="93" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* file = fopen(filePath, &quot;r&quot;);" ElType="." rngLn="92"/>
        <ElDesc lineHash="-642891540" ln="93" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="93" srcRngEndLn="94" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!file) {" ElType="." rngLn="93">
          <Anns>
            <Ann msg="Condition evaluation: !file (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1070453125" ln="98" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="98" srcRngEndLn="99" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char line[LINE_LEN];" ElType="." rngLn="98"/>
        <ElDesc lineHash="-1727056776" ln="99" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="99" srcRngEndLn="100" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="bool diaglistFound = false;" ElType="." rngLn="99"/>
        <ElDesc lineHash="2086606902" ln="102" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="102" srcRngEndLn="103" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(...)" ElType=".C" rngLn="102">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: line[&lt;some index>]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2086606902" ln="102" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="102" srcRngEndLn="103" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="102">
          <Anns>
            <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-125611083" ln="103" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="103" srcRngEndLn="104" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strstr(line, &quot;# Diaglist&quot;) != NULL) {" ElType="." rngLn="103">
          <Anns>
            <Ann msg="Condition evaluation: (strstr(...) != 0) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1089687517" ln="104" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="104" srcRngEndLn="105" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="diaglistFound = true;" ElType="." rngLn="104"/>
        <ElDesc lineHash="207609628" ln="105" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="105" srcRngEndLn="106" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="break;" ElType="." rngLn="105">
          <Anns>
            <Ann msg="Exit the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1243469831" ln="109" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="109" srcRngEndLn="110" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!diaglistFound) {" ElType="." rngLn="109">
          <Anns>
            <Ann msg="Condition evaluation: !diaglistFound (false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-810956815" ln="115" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="115" srcRngEndLn="116" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Diaglist section found. Checking for dates...\n&quot;);" ElType="." rngLn="115"/>
        <ElDesc lineHash="2086606902" ln="118" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="118" srcRngEndLn="119" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="118">
          <Anns>
            <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-688285623" ln="119" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="119" srcRngEndLn="120" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int day, month, year;" ElType="." rngLn="119"/>
        <ElDesc lineHash="723039117" ln="120" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="120" srcRngEndLn="121" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char* datePos = strstr(line, &quot; &quot;); // Start looking for dates after spaces" ElType="!" rngLn="120"/>
        <ElDesc lineHash="-1597845385" ln="122" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="122" srcRngEndLn="123" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (datePos) {" ElType="." rngLn="122">
          <Anns>
            <Ann msg="Tainted data: datePos" kind="var"/>
            <Ann msg="Loop condition evaluation: (datePos != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1188863936" ln="123" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="123" srcRngEndLn="124" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (sscanf(datePos, &quot;%2d-%*3s-%4d&quot;, &amp;day, &amp;year) == 2) {" ElType="." rngLn="123">
          <Anns>
            <Ann msg="Condition evaluation: (sscanf(...) == 2) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1916454930" ln="124" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="124" srcRngEndLn="125" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char monthStr[4];" ElType="." rngLn="124"/>
        <ElDesc lineHash="936057600" ln="125" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="125" srcRngEndLn="126" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="sscanf(datePos, &quot;%*2d-%3s-%*4d&quot;, monthStr);" ElType="!" rngLn="125"/>
        <ElDesc lineHash="-162925558" ln="126" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="126" srcRngEndLn="127" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="month = monthToNumber(monthStr);" ElType="!" rngLn="126">
          <ElDescList>
            <ElDesc lineHash="871928418" ln="43" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="43" srcRngEndLn="44" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char monthLower[4];" ElType="." rngLn="43">
              <Anns>
                <Ann msg="Tainted data: month[]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="1738018591" ln="44" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="44" srcRngEndLn="45" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 3; i++) {" ElType="." rngLn="44">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 3) (true)" kind="condEval"/>
                <Ann msg="Entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="1002600856" ln="45" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="45" srcRngEndLn="46" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="monthLower[i] = tolower(month[i]);" ElType="!" rngLn="45"/>
            <ElDesc lineHash="1738018591" ln="44" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="44" srcRngEndLn="45" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 3; i++) {" ElType="." rngLn="44">
              <Anns>
                <Ann msg="Tainted data: ((char*)month)[0]" kind="var"/>
                <Ann msg="Loop condition evaluation: (i &lt; 3) (assuming false)" kind="condEval"/>
                <Ann msg="Not entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="407903157" ln="47" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="47" srcRngEndLn="48" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="monthLower[3] = '\0'; // Null-terminate the string" ElType="." rngLn="47"/>
            <ElDesc lineHash="-1252698123" ln="49" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="49" srcRngEndLn="50" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 12; i++) {" ElType="." rngLn="49">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 12) (true)" kind="condEval"/>
                <Ann msg="Entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-2072426268" ln="50" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="50" srcRngEndLn="51" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strcmp(monthLower, months[i]) == 0) {" ElType="." rngLn="50">
              <Anns>
                <Ann msg="Condition evaluation: (strcmp(...) == 0) (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1253033097" ln="51" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="51" srcRngEndLn="52" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return i; // Return the zero-based index for the month" ElType="!" rngLn="51"/>
          </ElDescList>
          <Anns>
            <Ann msg="Tainted data: monthStr[]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1972123649" ln="128" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="128" srcRngEndLn="129" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (month != -1) {" ElType="." rngLn="128">
          <Anns>
            <Ann msg="Tainted data: monthStr[0]" kind="var"/>
            <Ann msg="Condition evaluation: (month != -1) (true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1063052744" ln="129" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="129" srcRngEndLn="130" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int daysLeft = daysUntil(day, month, year);" ElType="." rngLn="129">
          <ElDescList>
            <ElDesc lineHash="-279154857" ln="72" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="72" srcRngEndLn="73" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="struct tm future = { 0 };" ElType="." rngLn="72"/>
            <ElDesc lineHash="-134161896" ln="74" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="74" srcRngEndLn="75" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="future.tm_mday = day;" ElType="." rngLn="74"/>
            <ElDesc lineHash="-1806589075" ln="75" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="75" srcRngEndLn="76" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="future.tm_mon = month;" ElType="." rngLn="75"/>
            <ElDesc lineHash="-847282296" ln="76" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="76" srcRngEndLn="77" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="future.tm_year = year - 1900;" ElType="." rngLn="76"/>
            <ElDesc lineHash="-109824665" ln="77" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="77" srcRngEndLn="78" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="future.tm_isdst = -1; // Ignore daylight saving time" ElType="." rngLn="77"/>
            <ElDesc lineHash="1951175529" ln="79" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="79" srcRngEndLn="80" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="time_t now = time(NULL);" ElType="." rngLn="79"/>
            <ElDesc lineHash="559573299" ln="80" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="80" srcRngEndLn="81" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="time_t futureTime = mktime(&amp;future);" ElType="." rngLn="80"/>
            <ElDesc lineHash="325780107" ln="82" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="82" srcRngEndLn="83" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (futureTime == -1) {" ElType="." rngLn="82">
              <Anns>
                <Ann msg="Condition evaluation: (futureTime == -1) (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="988477150" ln="87" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="87" srcRngEndLn="88" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return (int)((futureTime - now) / (60 * 60 * 24));" ElType="." rngLn="87"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1752044184" ln="130" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="130" srcRngEndLn="131" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (daysLeft >= 0) {" ElType="." rngLn="130">
          <Anns>
            <Ann msg="Condition evaluation: (daysLeft >= 0) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1153759191" ln="131" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="131" srcRngEndLn="132" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Expiration date: %02d-%s-%04d, Days left: %d\n&quot;, day, monthStr, year, daysLeft);" ElType=".P" rngLn="131">
          <Anns>
            <Ann msg="Tainted data: monthStr[0]" kind="var"/>
            <Ann msg="Call to a dangerous method" kind="point"/>
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a file (&quot;monthStr[0]&quot;) is printed on a console" ln="134" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="119" rule="BD-SECURITY-TDCONSOLE" FirstElSrcRngStartPos="0" lnHash="2111538180" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Avoid printing tainted data on the output console" FirstElSrcRngStartln="118" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="-15662481" lang="cpp" violId="f7870a84-09ac-364a-b0f4-894833b7cbf7" locEndPos="0" urgent="true" locEndLn="135" goals="1," locStartln="134" sev="1" locRef="1" tool="c++test" lineHash="2111538180" unbViolId="ca0b1372-8473-3c99-8e8c-c2ec5364f27e" locType="sr" hash="-1207189245" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="497856354" ln="92" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="92" srcRngEndLn="93" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* file = fopen(filePath, &quot;r&quot;);" ElType="." rngLn="92"/>
        <ElDesc lineHash="-642891540" ln="93" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="93" srcRngEndLn="94" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!file) {" ElType="." rngLn="93">
          <Anns>
            <Ann msg="Condition evaluation: !file (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1070453125" ln="98" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="98" srcRngEndLn="99" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char line[LINE_LEN];" ElType="." rngLn="98"/>
        <ElDesc lineHash="-1727056776" ln="99" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="99" srcRngEndLn="100" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="bool diaglistFound = false;" ElType="." rngLn="99"/>
        <ElDesc lineHash="2086606902" ln="102" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="102" srcRngEndLn="103" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="102">
          <Anns>
            <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-125611083" ln="103" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="103" srcRngEndLn="104" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strstr(line, &quot;# Diaglist&quot;) != NULL) {" ElType="." rngLn="103">
          <Anns>
            <Ann msg="Condition evaluation: (strstr(...) != 0) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1089687517" ln="104" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="104" srcRngEndLn="105" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="diaglistFound = true;" ElType="." rngLn="104"/>
        <ElDesc lineHash="207609628" ln="105" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="105" srcRngEndLn="106" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="break;" ElType="." rngLn="105">
          <Anns>
            <Ann msg="Exit the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1243469831" ln="109" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="109" srcRngEndLn="110" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!diaglistFound) {" ElType="." rngLn="109">
          <Anns>
            <Ann msg="Condition evaluation: !diaglistFound (false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-810956815" ln="115" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="115" srcRngEndLn="116" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Diaglist section found. Checking for dates...\n&quot;);" ElType="." rngLn="115"/>
        <ElDesc lineHash="2086606902" ln="118" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="118" srcRngEndLn="119" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(...)" ElType=".C" rngLn="118">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: line[&lt;some index>]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2086606902" ln="118" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="118" srcRngEndLn="119" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="118">
          <Anns>
            <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-688285623" ln="119" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="119" srcRngEndLn="120" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int day, month, year;" ElType="." rngLn="119"/>
        <ElDesc lineHash="723039117" ln="120" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="120" srcRngEndLn="121" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char* datePos = strstr(line, &quot; &quot;); // Start looking for dates after spaces" ElType="!" rngLn="120"/>
        <ElDesc lineHash="-1597845385" ln="122" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="122" srcRngEndLn="123" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (datePos) {" ElType="." rngLn="122">
          <Anns>
            <Ann msg="Tainted data: datePos" kind="var"/>
            <Ann msg="Loop condition evaluation: (datePos != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1188863936" ln="123" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="123" srcRngEndLn="124" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (sscanf(datePos, &quot;%2d-%*3s-%4d&quot;, &amp;day, &amp;year) == 2) {" ElType="." rngLn="123">
          <Anns>
            <Ann msg="Condition evaluation: (sscanf(...) == 2) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1916454930" ln="124" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="124" srcRngEndLn="125" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char monthStr[4];" ElType="." rngLn="124"/>
        <ElDesc lineHash="936057600" ln="125" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="125" srcRngEndLn="126" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="sscanf(datePos, &quot;%*2d-%3s-%*4d&quot;, monthStr);" ElType="!" rngLn="125"/>
        <ElDesc lineHash="-162925558" ln="126" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="126" srcRngEndLn="127" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="month = monthToNumber(monthStr);" ElType="!" rngLn="126">
          <ElDescList>
            <ElDesc lineHash="871928418" ln="43" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="43" srcRngEndLn="44" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char monthLower[4];" ElType="." rngLn="43">
              <Anns>
                <Ann msg="Tainted data: month[]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="1738018591" ln="44" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="44" srcRngEndLn="45" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 3; i++) {" ElType="." rngLn="44">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 3) (true)" kind="condEval"/>
                <Ann msg="Entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="1002600856" ln="45" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="45" srcRngEndLn="46" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="monthLower[i] = tolower(month[i]);" ElType="!" rngLn="45"/>
            <ElDesc lineHash="1738018591" ln="44" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="44" srcRngEndLn="45" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 3; i++) {" ElType="." rngLn="44">
              <Anns>
                <Ann msg="Tainted data: ((char*)month)[0]" kind="var"/>
                <Ann msg="Loop condition evaluation: (i &lt; 3) (assuming false)" kind="condEval"/>
                <Ann msg="Not entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="407903157" ln="47" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="47" srcRngEndLn="48" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="monthLower[3] = '\0'; // Null-terminate the string" ElType="." rngLn="47"/>
            <ElDesc lineHash="-1252698123" ln="49" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="49" srcRngEndLn="50" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 12; i++) {" ElType="." rngLn="49">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 12) (true)" kind="condEval"/>
                <Ann msg="Entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-2072426268" ln="50" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="50" srcRngEndLn="51" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strcmp(monthLower, months[i]) == 0) {" ElType="." rngLn="50">
              <Anns>
                <Ann msg="Condition evaluation: (strcmp(...) == 0) (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1253033097" ln="51" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="51" srcRngEndLn="52" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return i; // Return the zero-based index for the month" ElType="!" rngLn="51"/>
          </ElDescList>
          <Anns>
            <Ann msg="Tainted data: monthStr[]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1972123649" ln="128" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="128" srcRngEndLn="129" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (month != -1) {" ElType="." rngLn="128">
          <Anns>
            <Ann msg="Tainted data: monthStr[0]" kind="var"/>
            <Ann msg="Condition evaluation: (month != -1) (true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1063052744" ln="129" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="129" srcRngEndLn="130" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int daysLeft = daysUntil(day, month, year);" ElType="." rngLn="129">
          <ElDescList>
            <ElDesc lineHash="-279154857" ln="72" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="72" srcRngEndLn="73" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="struct tm future = { 0 };" ElType="." rngLn="72"/>
            <ElDesc lineHash="-134161896" ln="74" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="74" srcRngEndLn="75" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="future.tm_mday = day;" ElType="." rngLn="74"/>
            <ElDesc lineHash="-1806589075" ln="75" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="75" srcRngEndLn="76" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="future.tm_mon = month;" ElType="." rngLn="75"/>
            <ElDesc lineHash="-847282296" ln="76" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="76" srcRngEndLn="77" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="future.tm_year = year - 1900;" ElType="." rngLn="76"/>
            <ElDesc lineHash="-109824665" ln="77" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="77" srcRngEndLn="78" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="future.tm_isdst = -1; // Ignore daylight saving time" ElType="." rngLn="77"/>
            <ElDesc lineHash="1951175529" ln="79" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="79" srcRngEndLn="80" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="time_t now = time(NULL);" ElType="." rngLn="79"/>
            <ElDesc lineHash="559573299" ln="80" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="80" srcRngEndLn="81" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="time_t futureTime = mktime(&amp;future);" ElType="." rngLn="80"/>
            <ElDesc lineHash="325780107" ln="82" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="82" srcRngEndLn="83" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (futureTime == -1) {" ElType="." rngLn="82">
              <Anns>
                <Ann msg="Condition evaluation: (futureTime == -1) (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="988477150" ln="87" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="87" srcRngEndLn="88" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return (int)((futureTime - now) / (60 * 60 * 24));" ElType="." rngLn="87"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1752044184" ln="130" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="130" srcRngEndLn="131" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (daysLeft >= 0) {" ElType="." rngLn="130">
          <Anns>
            <Ann msg="Condition evaluation: (daysLeft >= 0) (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2111538180" ln="134" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="134" srcRngEndLn="135" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Expiration date: %02d-%s-%04d is in the past.\n&quot;, day, monthStr, year);" ElType=".P" rngLn="134">
          <Anns>
            <Ann msg="Tainted data: monthStr[0]" kind="var"/>
            <Ann msg="Call to a dangerous method" kind="point"/>
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a file (&quot;monthStr[0]&quot;) is printed on a console" ln="134" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="103" rule="BD-SECURITY-TDCONSOLE" FirstElSrcRngStartPos="0" lnHash="2111538180" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Avoid printing tainted data on the output console" FirstElSrcRngStartln="102" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="-15662481" lang="cpp" violId="bcb1e708-d103-3953-bfa7-906b81755c95" locEndPos="0" urgent="true" locEndLn="135" goals="1," locStartln="134" sev="1" locRef="1" tool="c++test" lineHash="2111538180" unbViolId="e040627b-8737-32df-ba23-ace9eb30adb5" locType="sr" hash="-1207189245" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="497856354" ln="92" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="92" srcRngEndLn="93" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* file = fopen(filePath, &quot;r&quot;);" ElType="." rngLn="92"/>
        <ElDesc lineHash="-642891540" ln="93" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="93" srcRngEndLn="94" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!file) {" ElType="." rngLn="93">
          <Anns>
            <Ann msg="Condition evaluation: !file (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1070453125" ln="98" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="98" srcRngEndLn="99" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char line[LINE_LEN];" ElType="." rngLn="98"/>
        <ElDesc lineHash="-1727056776" ln="99" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="99" srcRngEndLn="100" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="bool diaglistFound = false;" ElType="." rngLn="99"/>
        <ElDesc lineHash="2086606902" ln="102" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="102" srcRngEndLn="103" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(...)" ElType=".C" rngLn="102">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: line[&lt;some index>]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2086606902" ln="102" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="102" srcRngEndLn="103" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="102">
          <Anns>
            <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-125611083" ln="103" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="103" srcRngEndLn="104" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strstr(line, &quot;# Diaglist&quot;) != NULL) {" ElType="." rngLn="103">
          <Anns>
            <Ann msg="Condition evaluation: (strstr(...) != 0) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1089687517" ln="104" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="104" srcRngEndLn="105" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="diaglistFound = true;" ElType="." rngLn="104"/>
        <ElDesc lineHash="207609628" ln="105" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="105" srcRngEndLn="106" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="break;" ElType="." rngLn="105">
          <Anns>
            <Ann msg="Exit the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1243469831" ln="109" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="109" srcRngEndLn="110" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!diaglistFound) {" ElType="." rngLn="109">
          <Anns>
            <Ann msg="Condition evaluation: !diaglistFound (false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-810956815" ln="115" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="115" srcRngEndLn="116" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Diaglist section found. Checking for dates...\n&quot;);" ElType="." rngLn="115"/>
        <ElDesc lineHash="2086606902" ln="118" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="118" srcRngEndLn="119" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="118">
          <Anns>
            <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-688285623" ln="119" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="119" srcRngEndLn="120" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int day, month, year;" ElType="." rngLn="119"/>
        <ElDesc lineHash="723039117" ln="120" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="120" srcRngEndLn="121" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char* datePos = strstr(line, &quot; &quot;); // Start looking for dates after spaces" ElType="!" rngLn="120"/>
        <ElDesc lineHash="-1597845385" ln="122" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="122" srcRngEndLn="123" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (datePos) {" ElType="." rngLn="122">
          <Anns>
            <Ann msg="Tainted data: datePos" kind="var"/>
            <Ann msg="Loop condition evaluation: (datePos != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1188863936" ln="123" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="123" srcRngEndLn="124" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (sscanf(datePos, &quot;%2d-%*3s-%4d&quot;, &amp;day, &amp;year) == 2) {" ElType="." rngLn="123">
          <Anns>
            <Ann msg="Condition evaluation: (sscanf(...) == 2) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1916454930" ln="124" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="124" srcRngEndLn="125" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char monthStr[4];" ElType="." rngLn="124"/>
        <ElDesc lineHash="936057600" ln="125" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="125" srcRngEndLn="126" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="sscanf(datePos, &quot;%*2d-%3s-%*4d&quot;, monthStr);" ElType="!" rngLn="125"/>
        <ElDesc lineHash="-162925558" ln="126" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="126" srcRngEndLn="127" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="month = monthToNumber(monthStr);" ElType="!" rngLn="126">
          <ElDescList>
            <ElDesc lineHash="871928418" ln="43" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="43" srcRngEndLn="44" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char monthLower[4];" ElType="." rngLn="43">
              <Anns>
                <Ann msg="Tainted data: month[]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="1738018591" ln="44" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="44" srcRngEndLn="45" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 3; i++) {" ElType="." rngLn="44">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 3) (true)" kind="condEval"/>
                <Ann msg="Entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="1002600856" ln="45" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="45" srcRngEndLn="46" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="monthLower[i] = tolower(month[i]);" ElType="!" rngLn="45"/>
            <ElDesc lineHash="1738018591" ln="44" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="44" srcRngEndLn="45" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 3; i++) {" ElType="." rngLn="44">
              <Anns>
                <Ann msg="Tainted data: ((char*)month)[0]" kind="var"/>
                <Ann msg="Loop condition evaluation: (i &lt; 3) (assuming false)" kind="condEval"/>
                <Ann msg="Not entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="407903157" ln="47" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="47" srcRngEndLn="48" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="monthLower[3] = '\0'; // Null-terminate the string" ElType="." rngLn="47"/>
            <ElDesc lineHash="-1252698123" ln="49" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="49" srcRngEndLn="50" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 12; i++) {" ElType="." rngLn="49">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 12) (true)" kind="condEval"/>
                <Ann msg="Entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-2072426268" ln="50" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="50" srcRngEndLn="51" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strcmp(monthLower, months[i]) == 0) {" ElType="." rngLn="50">
              <Anns>
                <Ann msg="Condition evaluation: (strcmp(...) == 0) (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1253033097" ln="51" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="51" srcRngEndLn="52" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return i; // Return the zero-based index for the month" ElType="!" rngLn="51"/>
          </ElDescList>
          <Anns>
            <Ann msg="Tainted data: monthStr[]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1972123649" ln="128" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="128" srcRngEndLn="129" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (month != -1) {" ElType="." rngLn="128">
          <Anns>
            <Ann msg="Tainted data: monthStr[0]" kind="var"/>
            <Ann msg="Condition evaluation: (month != -1) (true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1063052744" ln="129" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="129" srcRngEndLn="130" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int daysLeft = daysUntil(day, month, year);" ElType="." rngLn="129">
          <ElDescList>
            <ElDesc lineHash="-279154857" ln="72" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="72" srcRngEndLn="73" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="struct tm future = { 0 };" ElType="." rngLn="72"/>
            <ElDesc lineHash="-134161896" ln="74" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="74" srcRngEndLn="75" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="future.tm_mday = day;" ElType="." rngLn="74"/>
            <ElDesc lineHash="-1806589075" ln="75" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="75" srcRngEndLn="76" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="future.tm_mon = month;" ElType="." rngLn="75"/>
            <ElDesc lineHash="-847282296" ln="76" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="76" srcRngEndLn="77" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="future.tm_year = year - 1900;" ElType="." rngLn="76"/>
            <ElDesc lineHash="-109824665" ln="77" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="77" srcRngEndLn="78" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="future.tm_isdst = -1; // Ignore daylight saving time" ElType="." rngLn="77"/>
            <ElDesc lineHash="1951175529" ln="79" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="79" srcRngEndLn="80" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="time_t now = time(NULL);" ElType="." rngLn="79"/>
            <ElDesc lineHash="559573299" ln="80" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="80" srcRngEndLn="81" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="time_t futureTime = mktime(&amp;future);" ElType="." rngLn="80"/>
            <ElDesc lineHash="325780107" ln="82" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="82" srcRngEndLn="83" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (futureTime == -1) {" ElType="." rngLn="82">
              <Anns>
                <Ann msg="Condition evaluation: (futureTime == -1) (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="988477150" ln="87" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="87" srcRngEndLn="88" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return (int)((futureTime - now) / (60 * 60 * 24));" ElType="." rngLn="87"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1752044184" ln="130" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="130" srcRngEndLn="131" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (daysLeft >= 0) {" ElType="." rngLn="130">
          <Anns>
            <Ann msg="Condition evaluation: (daysLeft >= 0) (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2111538180" ln="134" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="134" srcRngEndLn="135" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Expiration date: %02d-%s-%04d is in the past.\n&quot;, day, monthStr, year);" ElType=".P" rngLn="134">
          <Anns>
            <Ann msg="Tainted data: monthStr[0]" kind="var"/>
            <Ann msg="Call to a dangerous method" kind="point"/>
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a file (&quot;datePos&quot;) is printed on a console" ln="138" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="119" rule="BD-SECURITY-TDCONSOLE" FirstElSrcRngStartPos="0" lnHash="20471669" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Avoid printing tainted data on the output console" FirstElSrcRngStartln="118" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="718888858" lang="cpp" violId="52db4fdf-5f36-39f2-a3fd-fc4a59174cd4" locEndPos="0" urgent="true" locEndLn="139" goals="1," locStartln="138" sev="1" locRef="1" tool="c++test" lineHash="20471669" unbViolId="25d44f32-692f-3e8f-99c7-770277bbfcb2" locType="sr" hash="-1207189245" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="497856354" ln="92" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="92" srcRngEndLn="93" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* file = fopen(filePath, &quot;r&quot;);" ElType="." rngLn="92"/>
        <ElDesc lineHash="-642891540" ln="93" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="93" srcRngEndLn="94" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!file) {" ElType="." rngLn="93">
          <Anns>
            <Ann msg="Condition evaluation: !file (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1070453125" ln="98" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="98" srcRngEndLn="99" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char line[LINE_LEN];" ElType="." rngLn="98"/>
        <ElDesc lineHash="-1727056776" ln="99" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="99" srcRngEndLn="100" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="bool diaglistFound = false;" ElType="." rngLn="99"/>
        <ElDesc lineHash="2086606902" ln="102" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="102" srcRngEndLn="103" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="102">
          <Anns>
            <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-125611083" ln="103" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="103" srcRngEndLn="104" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strstr(line, &quot;# Diaglist&quot;) != NULL) {" ElType="." rngLn="103">
          <Anns>
            <Ann msg="Condition evaluation: (strstr(...) != 0) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1089687517" ln="104" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="104" srcRngEndLn="105" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="diaglistFound = true;" ElType="." rngLn="104"/>
        <ElDesc lineHash="207609628" ln="105" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="105" srcRngEndLn="106" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="break;" ElType="." rngLn="105">
          <Anns>
            <Ann msg="Exit the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1243469831" ln="109" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="109" srcRngEndLn="110" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!diaglistFound) {" ElType="." rngLn="109">
          <Anns>
            <Ann msg="Condition evaluation: !diaglistFound (false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-810956815" ln="115" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="115" srcRngEndLn="116" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Diaglist section found. Checking for dates...\n&quot;);" ElType="." rngLn="115"/>
        <ElDesc lineHash="2086606902" ln="118" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="118" srcRngEndLn="119" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(...)" ElType=".C" rngLn="118">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: line[&lt;some index>]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2086606902" ln="118" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="118" srcRngEndLn="119" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="118">
          <Anns>
            <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-688285623" ln="119" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="119" srcRngEndLn="120" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int day, month, year;" ElType="." rngLn="119"/>
        <ElDesc lineHash="723039117" ln="120" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="120" srcRngEndLn="121" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char* datePos = strstr(line, &quot; &quot;); // Start looking for dates after spaces" ElType="!" rngLn="120"/>
        <ElDesc lineHash="-1597845385" ln="122" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="122" srcRngEndLn="123" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (datePos) {" ElType="." rngLn="122">
          <Anns>
            <Ann msg="Tainted data: datePos" kind="var"/>
            <Ann msg="Loop condition evaluation: (datePos != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1188863936" ln="123" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="123" srcRngEndLn="124" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (sscanf(datePos, &quot;%2d-%*3s-%4d&quot;, &amp;day, &amp;year) == 2) {" ElType="." rngLn="123">
          <Anns>
            <Ann msg="Condition evaluation: (sscanf(...) == 2) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1916454930" ln="124" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="124" srcRngEndLn="125" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char monthStr[4];" ElType="." rngLn="124"/>
        <ElDesc lineHash="936057600" ln="125" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="125" srcRngEndLn="126" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="sscanf(datePos, &quot;%*2d-%3s-%*4d&quot;, monthStr);" ElType="." rngLn="125"/>
        <ElDesc lineHash="-162925558" ln="126" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="126" srcRngEndLn="127" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="month = monthToNumber(monthStr);" ElType="." rngLn="126">
          <ElDescList>
            <ElDesc lineHash="871928418" ln="43" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="43" srcRngEndLn="44" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char monthLower[4];" ElType="." rngLn="43"/>
            <ElDesc lineHash="1738018591" ln="44" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="44" srcRngEndLn="45" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 3; i++) {" ElType="." rngLn="44">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 3) (true)" kind="condEval"/>
                <Ann msg="Entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="1002600856" ln="45" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="45" srcRngEndLn="46" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="monthLower[i] = tolower(month[i]);" ElType="." rngLn="45"/>
            <ElDesc lineHash="1738018591" ln="44" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="44" srcRngEndLn="45" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 3; i++) {" ElType="." rngLn="44">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 3) (assuming false)" kind="condEval"/>
                <Ann msg="Not entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="407903157" ln="47" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="47" srcRngEndLn="48" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="monthLower[3] = '\0'; // Null-terminate the string" ElType="." rngLn="47"/>
            <ElDesc lineHash="-1252698123" ln="49" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="49" srcRngEndLn="50" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 12; i++) {" ElType="." rngLn="49">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 12) (true)" kind="condEval"/>
                <Ann msg="Entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-2072426268" ln="50" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="50" srcRngEndLn="51" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strcmp(monthLower, months[i]) == 0) {" ElType="." rngLn="50">
              <Anns>
                <Ann msg="Condition evaluation: (strcmp(...) == 0) (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1252698123" ln="49" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="49" srcRngEndLn="50" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 12; i++) {" ElType="." rngLn="49">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 12) (assuming false)" kind="condEval"/>
                <Ann msg="Not entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-477888624" ln="55" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="55" srcRngEndLn="56" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return -1; // Invalid month" ElType="." rngLn="55"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1972123649" ln="128" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="128" srcRngEndLn="129" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (month != -1) {" ElType="." rngLn="128">
          <Anns>
            <Ann msg="Condition evaluation: (month != -1) (false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="20471669" ln="138" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="138" srcRngEndLn="139" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Invalid month in date: %s\n&quot;, datePos);" ElType=".P" rngLn="138">
          <Anns>
            <Ann msg="Tainted data: datePos" kind="var"/>
            <Ann msg="Call to a dangerous method" kind="point"/>
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a file (&quot;datePos&quot;) is printed on a console" ln="138" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="103" rule="BD-SECURITY-TDCONSOLE" FirstElSrcRngStartPos="0" lnHash="20471669" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Avoid printing tainted data on the output console" FirstElSrcRngStartln="102" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="718888858" lang="cpp" violId="b7e2b699-b322-360b-8e50-a8dafc80f53e" locEndPos="0" urgent="true" locEndLn="139" goals="1," locStartln="138" sev="1" locRef="1" tool="c++test" lineHash="20471669" unbViolId="3a7b5b05-dc11-3fde-a2cc-8bddbf9f2a9e" locType="sr" hash="-1207189245" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="497856354" ln="92" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="92" srcRngEndLn="93" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* file = fopen(filePath, &quot;r&quot;);" ElType="." rngLn="92"/>
        <ElDesc lineHash="-642891540" ln="93" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="93" srcRngEndLn="94" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!file) {" ElType="." rngLn="93">
          <Anns>
            <Ann msg="Condition evaluation: !file (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1070453125" ln="98" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="98" srcRngEndLn="99" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char line[LINE_LEN];" ElType="." rngLn="98"/>
        <ElDesc lineHash="-1727056776" ln="99" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="99" srcRngEndLn="100" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="bool diaglistFound = false;" ElType="." rngLn="99"/>
        <ElDesc lineHash="2086606902" ln="102" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="102" srcRngEndLn="103" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(...)" ElType=".C" rngLn="102">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: line[&lt;some index>]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2086606902" ln="102" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="102" srcRngEndLn="103" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="102">
          <Anns>
            <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-125611083" ln="103" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="103" srcRngEndLn="104" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strstr(line, &quot;# Diaglist&quot;) != NULL) {" ElType="." rngLn="103">
          <Anns>
            <Ann msg="Condition evaluation: (strstr(...) != 0) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1089687517" ln="104" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="104" srcRngEndLn="105" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="diaglistFound = true;" ElType="." rngLn="104"/>
        <ElDesc lineHash="207609628" ln="105" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="105" srcRngEndLn="106" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="break;" ElType="." rngLn="105">
          <Anns>
            <Ann msg="Exit the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1243469831" ln="109" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="109" srcRngEndLn="110" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!diaglistFound) {" ElType="." rngLn="109">
          <Anns>
            <Ann msg="Condition evaluation: !diaglistFound (false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-810956815" ln="115" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="115" srcRngEndLn="116" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Diaglist section found. Checking for dates...\n&quot;);" ElType="." rngLn="115"/>
        <ElDesc lineHash="2086606902" ln="118" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="118" srcRngEndLn="119" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="118">
          <Anns>
            <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-688285623" ln="119" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="119" srcRngEndLn="120" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int day, month, year;" ElType="." rngLn="119"/>
        <ElDesc lineHash="723039117" ln="120" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="120" srcRngEndLn="121" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char* datePos = strstr(line, &quot; &quot;); // Start looking for dates after spaces" ElType="!" rngLn="120"/>
        <ElDesc lineHash="-1597845385" ln="122" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="122" srcRngEndLn="123" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (datePos) {" ElType="." rngLn="122">
          <Anns>
            <Ann msg="Tainted data: datePos" kind="var"/>
            <Ann msg="Loop condition evaluation: (datePos != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1188863936" ln="123" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="123" srcRngEndLn="124" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (sscanf(datePos, &quot;%2d-%*3s-%4d&quot;, &amp;day, &amp;year) == 2) {" ElType="." rngLn="123">
          <Anns>
            <Ann msg="Condition evaluation: (sscanf(...) == 2) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1916454930" ln="124" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="124" srcRngEndLn="125" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char monthStr[4];" ElType="." rngLn="124"/>
        <ElDesc lineHash="936057600" ln="125" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="125" srcRngEndLn="126" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="sscanf(datePos, &quot;%*2d-%3s-%*4d&quot;, monthStr);" ElType="." rngLn="125"/>
        <ElDesc lineHash="-162925558" ln="126" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="126" srcRngEndLn="127" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="month = monthToNumber(monthStr);" ElType="." rngLn="126">
          <ElDescList>
            <ElDesc lineHash="871928418" ln="43" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="43" srcRngEndLn="44" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char monthLower[4];" ElType="." rngLn="43"/>
            <ElDesc lineHash="1738018591" ln="44" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="44" srcRngEndLn="45" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 3; i++) {" ElType="." rngLn="44">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 3) (true)" kind="condEval"/>
                <Ann msg="Entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="1002600856" ln="45" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="45" srcRngEndLn="46" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="monthLower[i] = tolower(month[i]);" ElType="." rngLn="45"/>
            <ElDesc lineHash="1738018591" ln="44" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="44" srcRngEndLn="45" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 3; i++) {" ElType="." rngLn="44">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 3) (assuming false)" kind="condEval"/>
                <Ann msg="Not entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="407903157" ln="47" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="47" srcRngEndLn="48" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="monthLower[3] = '\0'; // Null-terminate the string" ElType="." rngLn="47"/>
            <ElDesc lineHash="-1252698123" ln="49" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="49" srcRngEndLn="50" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 12; i++) {" ElType="." rngLn="49">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 12) (true)" kind="condEval"/>
                <Ann msg="Entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-2072426268" ln="50" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="50" srcRngEndLn="51" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strcmp(monthLower, months[i]) == 0) {" ElType="." rngLn="50">
              <Anns>
                <Ann msg="Condition evaluation: (strcmp(...) == 0) (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1252698123" ln="49" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="49" srcRngEndLn="50" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 12; i++) {" ElType="." rngLn="49">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 12) (assuming false)" kind="condEval"/>
                <Ann msg="Not entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-477888624" ln="55" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="55" srcRngEndLn="56" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return -1; // Invalid month" ElType="." rngLn="55"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1972123649" ln="128" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="128" srcRngEndLn="129" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (month != -1) {" ElType="." rngLn="128">
          <Anns>
            <Ann msg="Condition evaluation: (month != -1) (false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="20471669" ln="138" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="138" srcRngEndLn="139" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Invalid month in date: %s\n&quot;, datePos);" ElType=".P" rngLn="138">
          <Anns>
            <Ann msg="Tainted data: datePos" kind="var"/>
            <Ann msg="Call to a dangerous method" kind="point"/>
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a file (&quot;strcspn(...)&quot;) is used to index an array char[]" ln="156" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="155" rule="BD-SECURITY-ARRAY" FirstElSrcRngStartPos="0" lnHash="-1861800122" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Avoid tainted data in array indexes" FirstElSrcRngStartln="154" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="1445710908" lang="cpp" violId="3b29e4d0-4848-352c-9f78-c6c90b09389d" locEndPos="0" urgent="true" locEndLn="157" goals="1," locStartln="156" sev="1" locRef="1" tool="c++test" lineHash="-1861800122" unbViolId="dda5f876-a7e6-3d18-bd3f-2b65ed9a3681" locType="sr" hash="-1207189245" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="842755070" ln="150" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="150" srcRngEndLn="151" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;r&quot;);" ElType="." rngLn="150"/>
        <ElDesc lineHash="1220656230" ln="151" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="151" srcRngEndLn="152" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!config) {" ElType="." rngLn="151">
          <Anns>
            <Ann msg="Condition evaluation: !config (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2127008475" ln="154" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="154" srcRngEndLn="155" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(...)" ElType=".C" rngLn="154">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: filePath[&lt;some index>]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2127008475" ln="154" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="154" srcRngEndLn="155" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (fgets(filePath, MAX_PATH_LEN, config) != NULL) {" ElType="." rngLn="154">
          <Anns>
            <Ann msg="Condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1861800122" ln="156" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="156" srcRngEndLn="157" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="strcspn(...)" ElType="!" rngLn="156"/>
        <ElDesc lineHash="-1861800122" ln="156" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="156" srcRngEndLn="157" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="filePath[strcspn(filePath, &quot;\n&quot;)] = '\0';" ElType=".P" rngLn="156">
          <Anns>
            <Ann msg="Tainted data: strcspn(...)" kind="var"/>
            <Ann msg="Call to a dangerous method" kind="point"/>
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The file &quot;stored_path.txt&quot; is opened more than once, which may cause a race condition" ln="166" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Point where the file is opened again" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="151" rule="BD-TRS-FRC" FirstElSrcRngStartPos="0" lnHash="842904025" ruleSCSCMsg="Point where the file is opened the first time" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Avoid race conditions while accessing files" FirstElSrcRngStartln="150" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="1468286197" lang="cpp" violId="b681a4f0-5df8-3b25-a76e-a86fd035fb43" locEndPos="0" urgent="true" locEndLn="167" goals="1," locStartln="166" sev="2" locRef="1" tool="c++test" lineHash="842904025" unbViolId="e57ea9c9-3499-3b37-b808-d46084aa07fc" locType="sr" hash="-1207189245" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="1524434609" ln="218" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="218" srcRngEndLn="219" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="loadStoredPath(...)" ElType="!" rngLn="218">
          <ElDescList>
            <ElDesc lineHash="842755070" ln="150" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="150" srcRngEndLn="151" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;r&quot;);" ElType=".C" rngLn="150">
              <Anns>
                <Ann msg="Point where the file is opened the first time" kind="cause"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="1220656230" ln="151" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="151" srcRngEndLn="152" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!config) {" ElType="." rngLn="151">
              <Anns>
                <Ann msg="Condition evaluation: !config (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-474288024" ln="152" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="152" srcRngEndLn="153" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return false;" ElType="." rngLn="152"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1524434609" ln="218" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="218" srcRngEndLn="219" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (loadStoredPath(filePath)) {" ElType="." rngLn="218">
          <Anns>
            <Ann msg="Condition evaluation: loadStoredPath(...) (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1506858587" ln="235" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="235" srcRngEndLn="236" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;No stored file path found. Please enter the license file path: &quot;);" ElType="." rngLn="235"/>
        <ElDesc lineHash="1115411321" ln="236" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="236" srcRngEndLn="237" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (scanf(&quot; %259s&quot;, filePath) != 1) { // Limit input length to prevent overflow" ElType="." rngLn="236">
          <Anns>
            <Ann msg="Condition evaluation: (scanf(...) != 1) (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1996922329" ln="240" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="240" srcRngEndLn="241" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="storeFilePath(filePath);" ElType="!" rngLn="240">
          <ElDescList>
            <ElDesc lineHash="842904025" ln="166" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="166" srcRngEndLn="167" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;w&quot;);" ElType=".P" rngLn="166">
              <Anns>
                <Ann msg="Point where the file is opened again" kind="point"/>
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a file (&quot;filePath[&lt;some index>]&quot;) is printed on a console" ln="219" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="155" rule="BD-SECURITY-TDCONSOLE" FirstElSrcRngStartPos="0" lnHash="-1615095582" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Avoid printing tainted data on the output console" FirstElSrcRngStartln="154" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="-79368305" lang="cpp" violId="f5d31095-aeea-37de-b738-f7aab8aa8aac" locEndPos="0" urgent="true" locEndLn="220" goals="1," locStartln="219" sev="1" locRef="1" tool="c++test" lineHash="-1615095582" unbViolId="cfe0ffe1-5ce6-3713-8812-2550e6afedbc" locType="sr" hash="-1207189245" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="-786871230" ln="216" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="216" srcRngEndLn="217" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char filePath[MAX_PATH_LEN] = { 0 }; // Initialize with zeros" ElType="." rngLn="216"/>
        <ElDesc lineHash="1524434609" ln="218" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="218" srcRngEndLn="219" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="loadStoredPath(...)" ElType="!" rngLn="218">
          <ElDescList>
            <ElDesc lineHash="842755070" ln="150" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="150" srcRngEndLn="151" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;r&quot;);" ElType="." rngLn="150"/>
            <ElDesc lineHash="1220656230" ln="151" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="151" srcRngEndLn="152" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!config) {" ElType="." rngLn="151">
              <Anns>
                <Ann msg="Condition evaluation: !config (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="2127008475" ln="154" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="154" srcRngEndLn="155" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(...)" ElType=".C" rngLn="154">
              <Anns>
                <Ann msg="Tainting point" kind="cause"/>
                <Ann msg="Tainted data: filePath[&lt;some index>]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="2127008475" ln="154" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="154" srcRngEndLn="155" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (fgets(filePath, MAX_PATH_LEN, config) != NULL) {" ElType="." rngLn="154">
              <Anns>
                <Ann msg="Condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1861800122" ln="156" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="156" srcRngEndLn="157" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="filePath[strcspn(filePath, &quot;\n&quot;)] = '\0';" ElType="." rngLn="156"/>
            <ElDesc lineHash="-1802127606" ln="157" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="157" srcRngEndLn="158" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fclose(config);" ElType="." rngLn="157"/>
            <ElDesc lineHash="-1525876355" ln="158" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="158" srcRngEndLn="159" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return true;" ElType="." rngLn="158"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1524434609" ln="218" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="218" srcRngEndLn="219" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (loadStoredPath(filePath)) {" ElType="." rngLn="218">
          <Anns>
            <Ann msg="Tainted data: filePath[&lt;some index>]" kind="var"/>
            <Ann msg="Condition evaluation: loadStoredPath(...) (true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1615095582" ln="219" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="-1207189245" srcRngStartln="219" srcRngEndLn="220" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Stored file path found: %s\n&quot;, filePath);" ElType=".P" rngLn="219">
          <Anns>
            <Ann msg="Tainted data: filePath[&lt;some index>]" kind="var"/>
            <Ann msg="Call to a dangerous method" kind="point"/>
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
  </StdViols>

      <TestedFilesDetails>
         <Total name="Total (Suppressed)" supp="0" total="21">
            <Project id="diaglist_license_check" name="diaglist_license_check" supp="0" total="21">
               <Res name="Source Files" supp="0" total="21">
                  <Res loc="/diaglist_license_check/Source Files/diaglist_license_check.c" locRef="1" locType="sr" name="diaglist_license_check.c" supp="0" total="21"/>
               </Res>
            </Project>
         </Total>
      </TestedFilesDetails>
   </CodingStandards>
   <Statistics>
      
   </Statistics>
</ResultsSession>