<?xml version='1.0' encoding='UTF-8'?><ResultsSession buildId="CLI-DEMO1-2025-01-13" climode="true" endTime="2025-01-13T10:57:01+02:00" execEnv="win32_x86_64" hasViols="true" id="1737380303284" lang="en_US" machine="ESL1" prjModule="diaglist_license_check" project="CLI-DEMO1" tag="Flow Analysis Aggressive" time="2025-01-13T10:56:49+02:00" toolDispName="C/C++test" toolId="c++test" toolName="DTP Engine for C/C++" toolVer="2024.2.0" user="danie">
   <TestConfig machine="ESL1" name="Flow Analysis Aggressive" pseudoUrl="builtin://Flow Analysis Aggressive" user="danie"/>
   <Authors>
      <Author id="dev1" name="danie"/>
   </Authors>
   <Analyzers>
      <Analyzer id="com.parasoft.xtest.scope.analyzer" name="Scope Analyzer" ver="10.7.1.20241108"/>
      <Analyzer id="com.parasoft.xtest.cpp.analyzer.static.code" name="Parasoft C/C++ Code Analyzer" ver="10.7.1.20241114B2528"/>
      <Analyzer id="com.parasoft.xtest.cpp.analyzer.desktop.files.in.scope" name="Helper Scope Analyzer for C/C++test Professional" ver="10.7.1.20241114B2528"/>
      <Analyzer id="com.parasoft.xtest.cpp.analyzer.static.pattern" name="Parasoft C/C++ Static Analyzer" ver="10.7.1.20241114B2528"/>
      <Analyzer id="com.parasoft.xtest.cpp.analyzer.static.flow" name="Parasoft C/C++ Flow Analyzer" ver="10.7.1.20241023B5124"/>
      <Analyzer id="com.parasoft.xtest.cpp.analyzer.static.global" name="Parasoft C/C++ Global Static Analyzer" ver="10.7.1.20241114B2528"/>
   </Analyzers>
   <VersionInfos>
      <StorageInfo ownerId="" resultId="ISetupResult" ver="1" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IMetricsViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IExecutionViolation" ver="1" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IDupCodeViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IFlowAnalysisViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IFunctionalViolation" ver="1" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IChangeImpactViolation" ver="1" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="ICodingStandardsViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IUnitTestViolation" ver="1" ver10x="1"/>
   </VersionInfos>
   <Goals tsks="24">
      
      <History>
         <Graph id="gls">
            <Categories>
               <Category color="red" name="Total" pos="0"/>
            </Categories>
            <Total secSer="1" title="" xTitle="Date" yTitle="Tasks" yTitle2="Total Tasks">
               <X>01-12-25,01-13-25,</X>
               <Y>20,24,</Y>
               <Delta>4,</Delta>
            </Total>
         </Graph>
      </History>
   
   </Goals>
   <Scope>
      <Repositories/>
      <Locations>
         <Loc auth="danie" hash="549210378" locRef="1" projId="diaglist_license_check" projPath="/diaglist_license_check" project="diaglist_license_check" resProjPath="Source Files/diaglist_license_check.c" totLns="284" uri="file:/C:/Users/danie/source/repos/diaglist_license_check_v2/diaglist_license_check/diaglist_license_check.c"/>
      </Locations>
   </Scope>
   
  <SetupProblems/>

   <CodingStandards ownerId="com.parasoft.xtest.checkers.api.standards" time="0:00:11">
      <Projects>
         <Project bdCheckedFiles="0" bdTotalFiles="0" checkedFiles="1" checkedLns="284" id="diaglist_license_check" name="diaglist_license_check" qfixErrs="0" suppErrs="0" totErrs="24" totFiles="1" totLns="284"/>
      </Projects>
      
      <History>
         <Graph id="lns">
            <Categories>
               <Category color="blue" name="Total Lines" pos="0"/>
               <Category color="green" name="Checked Lines" pos="1"/>
               <Category authPos="0" color="red" name="Tasks" pos="2"/>
            </Categories>
            <Total secSer="1" title="" xTitle="Date" yTitle="Lines" yTitle2="Tasks">
               <X>01-12-25,01-13-25,</X>
               <Y>247,284,247,284,20,24,</Y>
               <Delta>37,37,4,</Delta>
            </Total>
            <Authors title="" xTitle="Date" yTitle="Total Tasks">
               <Author name="danie">
                  <X>01-12-25,01-13-25,</X>
                  <Y>20,24,</Y>
                  <Delta>4,</Delta>
               </Author>
            </Authors>
         </Graph>
      </History>
   
      
      <Rules>
         <CategoriesList>
            <Category authTot="0;" authUrg="0;" desc="Flow Analysis" name="BD" rules="137" total="0">
               <Category authTot="0;" authUrg="0;" desc="Incorrect API usage" name="BD-API" rules="7" total="0"/>
               <Category authTot="5;" authUrg="5;" desc="Possible Bugs" name="BD-PB" rules="74" total="5"/>
               <Category authTot="3;" authUrg="3;" desc="Resources" name="BD-RES" rules="8" total="3"/>
               <Category authTot="15;" authUrg="15;" desc="Security" name="BD-SECURITY" rules="20" total="15"/>
               <Category authTot="0;" authUrg="0;" desc="Containers" name="BD-CO" rules="5" total="0"/>
               <Category authTot="1;" authUrg="1;" desc="Threads &amp; Synchronization" name="BD-TRS" rules="21" total="1"/>
            </Category>
         </CategoriesList>
         <RulesList>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-API" desc="Do not pass incorrect values to library functions" id="BD-API-BADPARAM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-API" desc="Do not pass negative values to functions expecting non-negative arguments" id="BD-API-NEGPARAM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-API" desc="Do not check for a non-negative value after passing as a non-negative argument" id="BD-API-REVNEGPARAM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-CO" desc="Do not access iterator out of range" id="BD-CO-ITOUT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-CO" desc="Use valid references, pointers, and iterators to reference elements of a basic_string" id="BD-CO-STRMOD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-CO" desc="Do not pass empty container iterators to std algorithms as destinations" id="BD-CO-EMPCON" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-CO" desc="Do not modify container while iterating over it" id="BD-CO-ITMOD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Always catch exceptions" id="BD-PB-EXCEPT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid signed integer overflows" id="BD-PB-INTUB" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid use before initialization" id="BD-PB-NOTINIT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Atomic objects shall be properly initialized before being accessed" id="BD-PB-NOTINITAT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid null pointer dereferencing" id="BD-PB-NP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid buffer overflow due to defining incorrect format limits" id="BD-PB-OVERFFMT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="2;" authUrg="2;" cat="BD-PB" desc="Avoid overflow due to reading a not zero terminated string" id="BD-PB-OVERFNZT" sev="1" total="2"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid overflow when reading from a buffer" id="BD-PB-OVERFRD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid overflow when writing to a buffer" id="BD-PB-OVERFWR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not point to a wrapped object that has been freed" id="BD-PB-WRAPESC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid division by zero" id="BD-PB-ZERO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid accessing arrays out of bounds" id="BD-PB-ARRAY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="A pointer pointing to an element of an array of objects shall not be passed to a smart pointer of single object type" id="BD-PB-ARRPTR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid incorrect shift operations" id="BD-PB-BADSHIFT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Use the correct byte ordering when transferring data between systems" id="BD-PB-BYTEORD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid conditions that always evaluate to the same value" id="BD-PB-CC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Consistently check the returned value of non-void functions" id="BD-PB-CHECKRET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="1;" authUrg="1;" cat="BD-PB" desc="Always check the returned value of non-void function" id="BD-PB-CHECKRETGEN" sev="2" total="1"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid accessing collections out of bounds" id="BD-PB-COOB" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not modify the alignment of objects by calling realloc()" id="BD-PB-DNMPTR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="The macro EOF should be compared with the unmodified return value from the Standard Library function" id="BD-PB-EOFCOMP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Properly use errno value" id="BD-PB-ERRNO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Properly define exit handlers" id="BD-PB-EXITHAN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="1;" authUrg="1;" cat="BD-PB" desc="Reset strings on fgets() or fgetws() failure" id="BD-PB-FGETS" sev="2" total="1"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Only use values for fsetpos() that are returned from fgetpos()" id="BD-PB-FSETPOS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid data loss when converting between integer types" id="BD-PB-INTDL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not rely on an environment pointer following an operation that may invalidate it" id="BD-PB-INVENV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Pointers returned by certain Standard Library functions should not be used following a subsequent call to the same or related function" id="BD-PB-INVRET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="The Standard Library function memcmp shall not be used to compare null terminated strings" id="BD-PB-MCCSTR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid calls to memory-setting functions that can be optimized out by the compiler" id="BD-PB-MEMOPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Properly define new handlers" id="BD-PB-NEWHAN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid throwing exceptions from functions that are declared not to throw" id="BD-PB-NOEXCEPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Never return from functions that should not return" id="BD-PB-NORETURN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid accessing arrays and pointers out of bounds" id="BD-PB-OVERFARRAY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="An object shall not be assigned or copied to an overlapping object" id="BD-PB-OVERLAP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not treat arrays polymorphically" id="BD-PB-POLARR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not compare two unrelated pointers" id="BD-PB-PTRCMP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not subtract two pointers that do not address elements of the same array" id="BD-PB-PTRSUB" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not store an already-owned pointer value in an unrelated smart pointer" id="BD-PB-PTRVALUE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not call putenv() with a pointer to an automatic variable as the argument" id="BD-PB-PUTENV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Properly define signal handlers" id="BD-PB-SIGHAN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not return from a computational exception signal handler" id="BD-PB-SIGRETURN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not alternately input and output from a stream without an intervening flush or positioning call" id="BD-PB-STREAMINOUT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not subsequently use the argument to std::forward" id="BD-PB-SUBSEQFRWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not rely on the value of a moved-from object" id="BD-PB-SUBSEQMOVE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid switch with unreachable branches" id="BD-PB-SWITCH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Properly define terminate handlers" id="BD-PB-TERMHAN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Properly define unexpected handlers" id="BD-PB-UNEXPHAN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not use the ungetc function on a stream with the file position indicator zero" id="BD-PB-UNGETC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not use dynamic type of an object under construction" id="BD-PB-VCTOR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not use dynamic type of an object under destruction" id="BD-PB-VDTOR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Ensure the size of the variable length array is in valid range" id="BD-PB-VLASIZE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="The same file shall not be opened for read and write access at the same time on different streams" id="BD-PB-WRRDSTR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid writing to a stream which has been opened as read only" id="BD-PB-WRROS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid value change when converting between integer types" id="BD-PB-INTVC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid wraparounds when performing arithmetic integer operations" id="BD-PB-INTWRAP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="1;" authUrg="1;" cat="BD-PB" desc="Ensure strings are zero terminated" id="BD-PB-NZTS" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Ensure the output buffer is large enough when using path manipulation functions" id="BD-PB-PATHBUF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Always throw the created std::exception object" id="BD-PB-STDEXC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Suspicious setting of stream flags" id="BD-PB-STREAMFLAGS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Restore stream format" id="BD-PB-STREAMFMT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid unused values" id="BD-PB-VOVR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Guarantee that container indices are within the valid range" id="BD-PB-VALRANGE" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-RES" desc="Properly deallocate dynamically allocated resources" id="BD-RES-BADDEALLOC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-RES" desc="Ensure deallocation functions guarantee resource freeing" id="BD-RES-BADFREEF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-RES" desc="Do not use resources that have been freed" id="BD-RES-FREE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-RES" desc="Allocate sufficient memory to hold an object of a given type" id="BD-RES-INSUFMEM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-RES" desc="Do not free resources using invalid pointers" id="BD-RES-INVFREE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-RES" desc="Ensure resources are freed" id="BD-RES-LEAKS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-RES" desc="Avoid cyclic shared_ptr references" id="BD-RES-CSP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="3;" authUrg="3;" cat="BD-RES" desc="Do not create variables on the stack above the defined limits" id="BD-RES-STACKLIM" sev="3" total="3"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="1;" authUrg="1;" cat="BD-SECURITY" desc="Avoid tainted data in array indexes" id="BD-SECURITY-ARRAY" sev="1" total="1"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Prevent buffer overflows from tainted data" id="BD-SECURITY-BUFWRITE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Avoid unsafe use of a value obtained from arithmetic operations on tainted value" id="BD-SECURITY-INTOVERF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Avoid buffer overflow from tainted data due to defining incorrect format limits" id="BD-SECURITY-OVERFFMT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Avoid buffer read overflow from tainted data" id="BD-SECURITY-OVERFRD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Avoid buffer write overflow from tainted data" id="BD-SECURITY-OVERFWR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Protect against command injection" id="BD-SECURITY-TDCMD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="8;" authUrg="8;" cat="BD-SECURITY" desc="Avoid printing tainted data on the output console" id="BD-SECURITY-TDCONSOLE" sev="1" total="8"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Protect against environment injection" id="BD-SECURITY-TDENV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="1;" authUrg="1;" cat="BD-SECURITY" desc="Protect against file name injection" id="BD-SECURITY-TDFNAMES" sev="1" total="1"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Exclude unsanitized user input from format strings" id="BD-SECURITY-TDINPUT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="5;" authUrg="5;" cat="BD-SECURITY" desc="Validate potentially tainted data before it is used in the controlling expression of a loop" id="BD-SECURITY-TDLOOP" sev="1" total="5"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Protect against SQL injection" id="BD-SECURITY-TDSQL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Properly seed pseudorandom number generators" id="BD-SECURITY-RAND" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Sensitive data should be cleared before being deallocated" id="BD-SECURITY-SENSFREE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Avoid passing sensitive data to functions that write to log files" id="BD-SECURITY-SENSLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Validate potentially tainted data before it is used to determine the size of memory allocation" id="BD-SECURITY-TDALLOC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-SECURITY" desc="Disable resolving XML external entities (XXE) in libxerces-c" id="BD-SECURITY-XXEXRC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="Avoid double locking" id="BD-TRS-DLOCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="Avoid race conditions when using fork and file descriptors" id="BD-TRS-FORKFILE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="Do not abandon unreleased locks" id="BD-TRS-LOCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="Do not acquire locks in different order" id="BD-TRS-ORDER" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="Avoid race conditions while checking for the existence of a symbolic link" id="BD-TRS-SYMLINK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="Do not use blocking functions while holding a lock" id="BD-TRS-TSHL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="Declare objects shared between POSIX threads with appropriate storage durations" id="BD-TRS-ARG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="Variable should be used in context of single critical section" id="BD-TRS-DIFCS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="1;" authUrg="1;" cat="BD-TRS" desc="Avoid race conditions while accessing files" id="BD-TRS-FRC" sev="2" total="1"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="Do not join or detach a thread that was previously joined or detached" id="BD-TRS-JOINDETACH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="The Standard Library function mtx_timedlock() shall not be invoked on a mutex that does not support timeout" id="BD-TRS-TIMEDLOCK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="Do not release a lock that has not been acquired" id="BD-TRS-REVLOCK" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="There shall be no data races between threads" id="BD-TRS-THRDR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="A thread synchronization object should not be destroyed by a thread" id="BD-TRS-THRDSTR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="A thread synchronization object should not be initialized by a thread" id="BD-TRS-THRINIT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="A thread should not be created by another thread" id="BD-TRS-THRTHR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="A thread-specific storage should not be created by a thread" id="BD-TRS-THRTSS" sev="3" total="0"/>
         </RulesList>
         <SeverityList>
            <Severity authTot="17;" authUrg="17;" id="1" total="17"/>
            <Severity authTot="3;" authUrg="3;" id="2" total="3"/>
            <Severity authTot="4;" authUrg="4;" id="3" total="4"/>
         </SeverityList>
      </Rules>
      
  <Supps/>

      
  <StdViols>
    <FlowViol msg="The file &quot;results.txt&quot; is opened more than once, which may cause a race condition" ln="78" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Point where the file is opened again" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="79" rule="BD-TRS-FRC" FirstElSrcRngStartPos="0" lnHash="494569958" ruleSCSCMsg="Point where the file is opened the first time" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Avoid race conditions while accessing files" FirstElSrcRngStartln="78" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="205414651" lang="cpp" violId="03211632-3ddb-31bc-9074-3116a1f4ad8f" locEndPos="0" urgent="true" locEndLn="79" goals="1," locStartln="78" sev="2" locRef="1" tool="c++test" lineHash="494569958" unbViolId="1d995886-51fe-3831-b66d-8e387ed24eac" locType="sr" hash="549210378" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="138878702" ln="133" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="133" srcRngEndLn="134" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="writeResultsToFile(resultsBuffer);" ElType="!" rngLn="133">
          <ElDescList>
            <ElDesc lineHash="494569958" ln="78" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="78" srcRngEndLn="79" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* resultsFile = fopen(RESULTS_FILE, &quot;a&quot;); // Append to results file" ElType=".C" rngLn="78">
              <Anns>
                <Ann msg="Point where the file is opened the first time" kind="cause"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="2093238350" ln="79" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="79" srcRngEndLn="80" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!resultsFile) {" ElType="." rngLn="79">
              <Anns>
                <Ann msg="Condition evaluation: !resultsFile (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-279959941" ln="80" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="80" srcRngEndLn="81" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fprintf(stderr, &quot;Error: Unable to create results file.\n&quot;);" ElType="." rngLn="80"/>
            <ElDesc lineHash="699226379" ln="81" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="81" srcRngEndLn="82" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return;" ElType="." rngLn="81"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-1248272121" ln="136" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="136" srcRngEndLn="137" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="snprintf(resultsBuffer, sizeof(resultsBuffer), &quot;License Type: %s\nCustomer Name: %s\n&quot;, licenseType, customerName);" ElType="." rngLn="136"/>
        <ElDesc lineHash="1550982067" ln="137" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="137" srcRngEndLn="138" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;%s&quot;, resultsBuffer);" ElType="." rngLn="137"/>
        <ElDesc lineHash="138878702" ln="138" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="138" srcRngEndLn="139" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="writeResultsToFile(resultsBuffer);" ElType="!" rngLn="138">
          <ElDescList>
            <ElDesc lineHash="494569958" ln="78" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="78" srcRngEndLn="79" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* resultsFile = fopen(RESULTS_FILE, &quot;a&quot;); // Append to results file" ElType=".P" rngLn="78">
              <Anns>
                <Ann msg="Point where the file is opened again" kind="point"/>
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a file (&quot;filePath[]&quot;) is injected to a file or path name" ln="91" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="239" rule="BD-SECURITY-TDFNAMES" FirstElSrcRngStartPos="0" lnHash="497856354" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Protect against file name injection" FirstElSrcRngStartln="238" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="-1925845309" lang="cpp" violId="9b785838-6af1-3149-8f61-5c54b10ab754" locEndPos="0" urgent="true" locEndLn="92" goals="1," locStartln="91" sev="1" locRef="1" tool="c++test" lineHash="497856354" unbViolId="bb9ba831-b3ae-312c-ba36-6e79fd4dec2d" locType="sr" hash="549210378" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="1036238815" ln="276" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="276" srcRngEndLn="277" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char filePath[MAX_PATH_LEN] = { 0 };" ElType="." rngLn="276"/>
        <ElDesc lineHash="2123734798" ln="278" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="278" srcRngEndLn="279" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="manageStoredPath(filePath);" ElType="!" rngLn="278">
          <ElDescList>
            <ElDesc lineHash="842755070" ln="236" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="236" srcRngEndLn="237" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;r&quot;);" ElType="." rngLn="236"/>
            <ElDesc lineHash="994035581" ln="237" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="237" srcRngEndLn="238" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (config) {" ElType="." rngLn="237">
              <Anns>
                <Ann msg="Condition evaluation: (config != 0) (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="421502936" ln="238" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="238" srcRngEndLn="239" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(filePath, MAX_PATH_LEN, config);" ElType=".C" rngLn="238">
              <Anns>
                <Ann msg="Tainting point" kind="cause"/>
                <Ann msg="Tainted data: filePath[]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-137669080" ln="239" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="239" srcRngEndLn="240" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="filePath[strcspn(filePath, &quot;\r\n&quot;)] = '\0'; // Remove newline" ElType="." rngLn="239"/>
            <ElDesc lineHash="-1802127606" ln="240" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="240" srcRngEndLn="241" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fclose(config);" ElType="." rngLn="240"/>
            <ElDesc lineHash="-874458958" ln="242" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="242" srcRngEndLn="243" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Stored path found: %s\n&quot;, filePath);" ElType="." rngLn="242"/>
            <ElDesc lineHash="-1144948456" ln="243" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="243" srcRngEndLn="244" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Do you want to use the stored path? (y/n): &quot;);" ElType="." rngLn="243"/>
            <ElDesc lineHash="10412016" ln="244" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="244" srcRngEndLn="245" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char choice;" ElType="." rngLn="244"/>
            <ElDesc lineHash="278597054" ln="245" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="245" srcRngEndLn="246" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(&quot; %c&quot;, &amp;choice);" ElType="." rngLn="245"/>
            <ElDesc lineHash="1555766143" ln="247" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="247" srcRngEndLn="248" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (choice == 'n' || choice == 'N') {" ElType="." rngLn="247">
              <Anns>
                <Ann msg="Condition evaluation: (choice == 110) (assuming false)" kind="condEval"/>
                <Ann msg="Condition evaluation: (choice == 78) (assuming false)" kind="condEval"/>
                <Ann msg="Condition evaluation: choice == 'n' || choice == 'N' (false)" kind="condEval"/>
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="952021493" ln="279" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="279" srcRngEndLn="280" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Checking license file: %s\n&quot;, filePath);" ElType="." rngLn="279">
          <Anns>
            <Ann msg="Tainted data: filePath[]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1143685017" ln="281" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="281" srcRngEndLn="282" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="checkDiaglistSection(filePath);" ElType="!" rngLn="281">
          <ElDescList>
            <ElDesc lineHash="497856354" ln="91" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="91" srcRngEndLn="92" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* file = fopen(filePath, &quot;r&quot;);" ElType=".P" rngLn="91">
              <Anns>
                <Ann msg="Tainted data: filePath[]" kind="var"/>
                <Ann msg="Call to a dangerous method" kind="point"/>
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Single stack variable &quot;resultsBuffer&quot; takes 8192 bytes which is greater than defined limit 4096 bytes" ln="99" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" locStartln="99" sev="3" auth="danie" locRef="1" rule="BD-RES-STACKLIM" lnHash="245180644" rule.header="Do not create variables on the stack above the defined limits" tool="c++test" lineHash="245180644" unbViolId="d9c335b2-7332-335e-a6f0-ee228ac14a11" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" lang="cpp" violId="230267ff-5dd2-3b76-a52a-75ce9af4e445" locEndPos="0" locType="sr" urgent="true" hash="549210378" locEndLn="100" goals="1,"/>
    <FlowViol msg="Data obtained from a file (&quot;file&quot;) is used in a loop condition" ln="103" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Tainted data use in a loop condition" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="239" rule="BD-SECURITY-TDLOOP" FirstElSrcRngStartPos="0" lnHash="2086606902" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Validate potentially tainted data before it is used in the controlling expression of a loop" FirstElSrcRngStartln="238" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="1965882392" lang="cpp" violId="509b6fe8-0498-3f80-86f4-32b792c7a889" locEndPos="0" urgent="true" locEndLn="104" goals="1," locStartln="103" sev="1" locRef="1" tool="c++test" lineHash="2086606902" unbViolId="d9b46da3-ab41-31cd-afec-2a9cff44ae04" locType="sr" hash="549210378" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="1036238815" ln="276" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="276" srcRngEndLn="277" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char filePath[MAX_PATH_LEN] = { 0 };" ElType="." rngLn="276"/>
        <ElDesc lineHash="2123734798" ln="278" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="278" srcRngEndLn="279" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="manageStoredPath(filePath);" ElType="!" rngLn="278">
          <ElDescList>
            <ElDesc lineHash="842755070" ln="236" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="236" srcRngEndLn="237" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;r&quot;);" ElType="." rngLn="236"/>
            <ElDesc lineHash="994035581" ln="237" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="237" srcRngEndLn="238" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (config) {" ElType="." rngLn="237">
              <Anns>
                <Ann msg="Condition evaluation: (config != 0) (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="421502936" ln="238" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="238" srcRngEndLn="239" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(filePath, MAX_PATH_LEN, config);" ElType=".C" rngLn="238">
              <Anns>
                <Ann msg="Tainting point" kind="cause"/>
                <Ann msg="Tainted data: filePath[&lt;some index>]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-137669080" ln="239" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="239" srcRngEndLn="240" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="filePath[strcspn(filePath, &quot;\r\n&quot;)] = '\0'; // Remove newline" ElType="." rngLn="239"/>
            <ElDesc lineHash="-1802127606" ln="240" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="240" srcRngEndLn="241" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fclose(config);" ElType="." rngLn="240"/>
            <ElDesc lineHash="-874458958" ln="242" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="242" srcRngEndLn="243" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Stored path found: %s\n&quot;, filePath);" ElType="." rngLn="242"/>
            <ElDesc lineHash="-1144948456" ln="243" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="243" srcRngEndLn="244" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Do you want to use the stored path? (y/n): &quot;);" ElType="." rngLn="243"/>
            <ElDesc lineHash="10412016" ln="244" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="244" srcRngEndLn="245" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char choice;" ElType="." rngLn="244"/>
            <ElDesc lineHash="278597054" ln="245" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="245" srcRngEndLn="246" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(&quot; %c&quot;, &amp;choice);" ElType="." rngLn="245"/>
            <ElDesc lineHash="1555766143" ln="247" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="247" srcRngEndLn="248" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (choice == 'n' || choice == 'N') {" ElType="." rngLn="247">
              <Anns>
                <Ann msg="Condition evaluation: (choice == 110) (assuming false)" kind="condEval"/>
                <Ann msg="Condition evaluation: (choice == 78) (assuming false)" kind="condEval"/>
                <Ann msg="Condition evaluation: choice == 'n' || choice == 'N' (false)" kind="condEval"/>
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="952021493" ln="279" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="279" srcRngEndLn="280" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Checking license file: %s\n&quot;, filePath);" ElType="." rngLn="279">
          <Anns>
            <Ann msg="Tainted data: filePath[&lt;some index>]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1143685017" ln="281" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="281" srcRngEndLn="282" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="checkDiaglistSection(filePath);" ElType="!" rngLn="281">
          <ElDescList>
            <ElDesc lineHash="497856354" ln="91" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="91" srcRngEndLn="92" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* file = fopen(filePath, &quot;r&quot;);" ElType="!" rngLn="91">
              <Anns>
                <Ann msg="Tainted data: ((char*)filePath)[&lt;some index>]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-642891540" ln="92" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="92" srcRngEndLn="93" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!file) {" ElType="." rngLn="92">
              <Anns>
                <Ann msg="Tainted data: file" kind="var"/>
                <Ann msg="Condition evaluation: !file (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="1070453125" ln="97" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="97" srcRngEndLn="98" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char line[LINE_LEN];" ElType="." rngLn="97"/>
            <ElDesc lineHash="-1727056776" ln="98" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="98" srcRngEndLn="99" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="bool diaglistFound = false;" ElType="." rngLn="98"/>
            <ElDesc lineHash="245180644" ln="99" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="99" srcRngEndLn="100" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char resultsBuffer[8192] = &quot;&quot;; // Buffer to store results for writing to file" ElType="." rngLn="99"/>
            <ElDesc lineHash="1641095690" ln="100" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="100" srcRngEndLn="101" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char licenseType[LINE_LEN] = &quot;&quot;; // To store LICENSE information" ElType="." rngLn="100"/>
            <ElDesc lineHash="-1023565332" ln="101" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="101" srcRngEndLn="102" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char customerName[LINE_LEN] = &quot;&quot;; // To store customer name" ElType="." rngLn="101"/>
            <ElDesc lineHash="2086606902" ln="103" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="103" srcRngEndLn="104" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(...)" ElType=".P" rngLn="103">
              <Anns>
                <Ann msg="Tainted data: file" kind="var"/>
                <Ann msg="Tainted data use in a loop condition" kind="point"/>
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a file (&quot;resultsBuffer[]&quot;) is printed on a console" ln="137" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="104" rule="BD-SECURITY-TDCONSOLE" FirstElSrcRngStartPos="0" lnHash="1550982067" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Avoid printing tainted data on the output console" FirstElSrcRngStartln="103" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="1389800621" lang="cpp" violId="53e2eb30-a4a3-3c7a-a39f-7ab6eaac83ba" locEndPos="0" urgent="true" locEndLn="138" goals="1," locStartln="137" sev="1" locRef="1" tool="c++test" lineHash="1550982067" unbViolId="c719eabe-a7e2-33a2-97b6-f8330e7b0488" locType="sr" hash="549210378" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="2086606902" ln="103" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="103" srcRngEndLn="104" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(...)" ElType=".C" rngLn="103">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: line[&lt;some index>]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2086606902" ln="103" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="103" srcRngEndLn="104" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="103">
          <Anns>
            <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-125611083" ln="104" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="104" srcRngEndLn="105" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strstr(line, &quot;# Diaglist&quot;) != NULL) {" ElType="." rngLn="104">
          <Anns>
            <Ann msg="Condition evaluation: (strstr(...) != 0) (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="91961352" ln="110" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="110" srcRngEndLn="111" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strstr(line, &quot;LICENSE&quot;) != NULL) {" ElType="." rngLn="110">
          <Anns>
            <Ann msg="Condition evaluation: (strstr(...) != 0) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-385010840" ln="111" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="111" srcRngEndLn="112" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="sscanf(line, &quot;LICENSE %511[^\n]&quot;, licenseType);" ElType="!" rngLn="111"/>
        <ElDesc lineHash="-895635702" ln="115" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="115" srcRngEndLn="116" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strstr(line, &quot;customer=&quot;) != NULL) {" ElType="." rngLn="115">
          <Anns>
            <Ann msg="Tainted data: licenseType[]" kind="var"/>
            <Ann msg="Condition evaluation: (strstr(...) != 0) (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2086606902" ln="103" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="103" srcRngEndLn="104" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="103">
          <Anns>
            <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming false)" kind="condEval"/>
            <Ann msg="Not entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1243469831" ln="123" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="123" srcRngEndLn="124" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!diaglistFound) {" ElType="." rngLn="123">
          <Anns>
            <Ann msg="Condition evaluation: !diaglistFound (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="481717791" ln="131" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="131" srcRngEndLn="132" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="snprintf(resultsBuffer, sizeof(resultsBuffer), &quot;Diaglist section found. Checking for dates...\n&quot;);" ElType="." rngLn="131"/>
        <ElDesc lineHash="1550982067" ln="132" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="132" srcRngEndLn="133" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;%s&quot;, resultsBuffer);" ElType="." rngLn="132"/>
        <ElDesc lineHash="138878702" ln="133" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="133" srcRngEndLn="134" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="writeResultsToFile(resultsBuffer);" ElType="." rngLn="133"/>
        <ElDesc lineHash="-1248272121" ln="136" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="136" srcRngEndLn="137" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="snprintf(resultsBuffer, sizeof(resultsBuffer), &quot;License Type: %s\nCustomer Name: %s\n&quot;, licenseType, customerName);" ElType="!" rngLn="136"/>
        <ElDesc lineHash="1550982067" ln="137" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="137" srcRngEndLn="138" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;%s&quot;, resultsBuffer);" ElType=".P" rngLn="137">
          <Anns>
            <Ann msg="Tainted data: resultsBuffer[]" kind="var"/>
            <Ann msg="Call to a dangerous method" kind="point"/>
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a file (&quot;datePos&quot;) is used in a loop condition" ln="145" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Tainted data use in a loop condition" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="142" rule="BD-SECURITY-TDLOOP" FirstElSrcRngStartPos="0" lnHash="-1597845385" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Validate potentially tainted data before it is used in the controlling expression of a loop" FirstElSrcRngStartln="141" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="1424194988" lang="cpp" violId="12f04ba9-a3ca-3ba5-9be9-6633c2c28fc5" locEndPos="0" urgent="true" locEndLn="146" goals="1," locStartln="145" sev="1" locRef="1" tool="c++test" lineHash="-1597845385" unbViolId="e2d3eaca-70f7-3690-a04c-67e67f2ed433" locType="sr" hash="549210378" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="497856354" ln="91" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="91" srcRngEndLn="92" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* file = fopen(filePath, &quot;r&quot;);" ElType="." rngLn="91"/>
        <ElDesc lineHash="-642891540" ln="92" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="92" srcRngEndLn="93" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!file) {" ElType="." rngLn="92">
          <Anns>
            <Ann msg="Condition evaluation: !file (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1070453125" ln="97" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="97" srcRngEndLn="98" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char line[LINE_LEN];" ElType="." rngLn="97"/>
        <ElDesc lineHash="-1727056776" ln="98" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="98" srcRngEndLn="99" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="bool diaglistFound = false;" ElType="." rngLn="98"/>
        <ElDesc lineHash="245180644" ln="99" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="99" srcRngEndLn="100" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char resultsBuffer[8192] = &quot;&quot;; // Buffer to store results for writing to file" ElType="." rngLn="99"/>
        <ElDesc lineHash="1641095690" ln="100" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="100" srcRngEndLn="101" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char licenseType[LINE_LEN] = &quot;&quot;; // To store LICENSE information" ElType="." rngLn="100"/>
        <ElDesc lineHash="-1023565332" ln="101" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="101" srcRngEndLn="102" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char customerName[LINE_LEN] = &quot;&quot;; // To store customer name" ElType="." rngLn="101"/>
        <ElDesc lineHash="2086606902" ln="103" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="103" srcRngEndLn="104" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="103">
          <Anns>
            <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-125611083" ln="104" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="104" srcRngEndLn="105" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strstr(line, &quot;# Diaglist&quot;) != NULL) {" ElType="." rngLn="104">
          <Anns>
            <Ann msg="Condition evaluation: (strstr(...) != 0) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1089687517" ln="105" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="105" srcRngEndLn="106" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="diaglistFound = true;" ElType="." rngLn="105"/>
        <ElDesc lineHash="207609628" ln="106" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="106" srcRngEndLn="107" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="break;" ElType="." rngLn="106">
          <Anns>
            <Ann msg="Exit the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1243469831" ln="123" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="123" srcRngEndLn="124" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!diaglistFound) {" ElType="." rngLn="123">
          <Anns>
            <Ann msg="Condition evaluation: !diaglistFound (false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="481717791" ln="131" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="131" srcRngEndLn="132" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="snprintf(resultsBuffer, sizeof(resultsBuffer), &quot;Diaglist section found. Checking for dates...\n&quot;);" ElType="." rngLn="131"/>
        <ElDesc lineHash="1550982067" ln="132" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="132" srcRngEndLn="133" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;%s&quot;, resultsBuffer);" ElType="." rngLn="132"/>
        <ElDesc lineHash="138878702" ln="133" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="133" srcRngEndLn="134" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="writeResultsToFile(resultsBuffer);" ElType="." rngLn="133">
          <ElDescList>
            <ElDesc lineHash="494569958" ln="78" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="78" srcRngEndLn="79" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* resultsFile = fopen(RESULTS_FILE, &quot;a&quot;); // Append to results file" ElType="." rngLn="78"/>
            <ElDesc lineHash="2093238350" ln="79" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="79" srcRngEndLn="80" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!resultsFile) {" ElType="." rngLn="79">
              <Anns>
                <Ann msg="Condition evaluation: !resultsFile (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-279959941" ln="80" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="80" srcRngEndLn="81" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fprintf(stderr, &quot;Error: Unable to create results file.\n&quot;);" ElType="." rngLn="80"/>
            <ElDesc lineHash="699226379" ln="81" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="81" srcRngEndLn="82" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return;" ElType="." rngLn="81"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-1248272121" ln="136" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="136" srcRngEndLn="137" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="snprintf(resultsBuffer, sizeof(resultsBuffer), &quot;License Type: %s\nCustomer Name: %s\n&quot;, licenseType, customerName);" ElType="." rngLn="136"/>
        <ElDesc lineHash="1550982067" ln="137" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="137" srcRngEndLn="138" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;%s&quot;, resultsBuffer);" ElType="." rngLn="137"/>
        <ElDesc lineHash="138878702" ln="138" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="138" srcRngEndLn="139" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="writeResultsToFile(resultsBuffer);" ElType="." rngLn="138">
          <ElDescList>
            <ElDesc lineHash="494569958" ln="78" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="78" srcRngEndLn="79" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* resultsFile = fopen(RESULTS_FILE, &quot;a&quot;); // Append to results file" ElType="." rngLn="78"/>
            <ElDesc lineHash="2093238350" ln="79" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="79" srcRngEndLn="80" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!resultsFile) {" ElType="." rngLn="79">
              <Anns>
                <Ann msg="Condition evaluation: !resultsFile (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-279959941" ln="80" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="80" srcRngEndLn="81" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fprintf(stderr, &quot;Error: Unable to create results file.\n&quot;);" ElType="." rngLn="80"/>
            <ElDesc lineHash="699226379" ln="81" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="81" srcRngEndLn="82" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return;" ElType="." rngLn="81"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="2086606902" ln="141" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="141" srcRngEndLn="142" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(...)" ElType=".C" rngLn="141">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: line[&lt;some index>]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2086606902" ln="141" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="141" srcRngEndLn="142" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="141">
          <Anns>
            <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-688285623" ln="142" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="142" srcRngEndLn="143" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int day, month, year;" ElType="." rngLn="142"/>
        <ElDesc lineHash="723039117" ln="143" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="143" srcRngEndLn="144" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char* datePos = strstr(line, &quot; &quot;); // Start looking for dates after spaces" ElType="!" rngLn="143"/>
        <ElDesc lineHash="-1597845385" ln="145" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="145" srcRngEndLn="146" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (datePos) {" ElType=".P" rngLn="145">
          <Anns>
            <Ann msg="Tainted data: datePos" kind="var"/>
            <Ann msg="Tainted data use in a loop condition" kind="point"/>
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a file (&quot;datePos&quot;) is used in a loop condition" ln="145" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Tainted data use in a loop condition" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="104" rule="BD-SECURITY-TDLOOP" FirstElSrcRngStartPos="0" lnHash="-1597845385" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Validate potentially tainted data before it is used in the controlling expression of a loop" FirstElSrcRngStartln="103" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="1310445302" lang="cpp" violId="062cfe13-a429-398b-a91d-a5125cd67839" locEndPos="0" urgent="true" locEndLn="146" goals="1," locStartln="145" sev="1" locRef="1" tool="c++test" lineHash="-1597845385" unbViolId="78002774-c268-3726-ad49-1125d7199086" locType="sr" hash="549210378" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="2086606902" ln="103" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="103" srcRngEndLn="104" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(...)" ElType=".C" rngLn="103">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: line[&lt;some index>]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2086606902" ln="103" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="103" srcRngEndLn="104" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="103">
          <Anns>
            <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-125611083" ln="104" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="104" srcRngEndLn="105" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strstr(line, &quot;# Diaglist&quot;) != NULL) {" ElType="." rngLn="104">
          <Anns>
            <Ann msg="Condition evaluation: (strstr(...) != 0) (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="91961352" ln="110" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="110" srcRngEndLn="111" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strstr(line, &quot;LICENSE&quot;) != NULL) {" ElType="." rngLn="110">
          <Anns>
            <Ann msg="Condition evaluation: (strstr(...) != 0) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-385010840" ln="111" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="111" srcRngEndLn="112" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="sscanf(line, &quot;LICENSE %511[^\n]&quot;, licenseType);" ElType="." rngLn="111"/>
        <ElDesc lineHash="-895635702" ln="115" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="115" srcRngEndLn="116" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strstr(line, &quot;customer=&quot;) != NULL) {" ElType="." rngLn="115">
          <Anns>
            <Ann msg="Condition evaluation: (strstr(...) != 0) (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2086606902" ln="103" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="103" srcRngEndLn="104" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="103">
          <Anns>
            <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming false)" kind="condEval"/>
            <Ann msg="Not entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1243469831" ln="123" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="123" srcRngEndLn="124" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!diaglistFound) {" ElType="." rngLn="123">
          <Anns>
            <Ann msg="Condition evaluation: !diaglistFound (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="481717791" ln="131" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="131" srcRngEndLn="132" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="snprintf(resultsBuffer, sizeof(resultsBuffer), &quot;Diaglist section found. Checking for dates...\n&quot;);" ElType="." rngLn="131"/>
        <ElDesc lineHash="1550982067" ln="132" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="132" srcRngEndLn="133" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;%s&quot;, resultsBuffer);" ElType="." rngLn="132"/>
        <ElDesc lineHash="138878702" ln="133" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="133" srcRngEndLn="134" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="writeResultsToFile(resultsBuffer);" ElType="." rngLn="133"/>
        <ElDesc lineHash="-1248272121" ln="136" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="136" srcRngEndLn="137" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="snprintf(resultsBuffer, sizeof(resultsBuffer), &quot;License Type: %s\nCustomer Name: %s\n&quot;, licenseType, customerName);" ElType="." rngLn="136"/>
        <ElDesc lineHash="1550982067" ln="137" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="137" srcRngEndLn="138" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;%s&quot;, resultsBuffer);" ElType="." rngLn="137"/>
        <ElDesc lineHash="138878702" ln="138" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="138" srcRngEndLn="139" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="writeResultsToFile(resultsBuffer);" ElType="." rngLn="138">
          <ElDescList>
            <ElDesc lineHash="494569958" ln="78" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="78" srcRngEndLn="79" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* resultsFile = fopen(RESULTS_FILE, &quot;a&quot;); // Append to results file" ElType="." rngLn="78"/>
            <ElDesc lineHash="2093238350" ln="79" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="79" srcRngEndLn="80" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!resultsFile) {" ElType="." rngLn="79">
              <Anns>
                <Ann msg="Condition evaluation: !resultsFile (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-279959941" ln="80" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="80" srcRngEndLn="81" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fprintf(stderr, &quot;Error: Unable to create results file.\n&quot;);" ElType="." rngLn="80"/>
            <ElDesc lineHash="699226379" ln="81" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="81" srcRngEndLn="82" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return;" ElType="." rngLn="81"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="2086606902" ln="141" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="141" srcRngEndLn="142" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="141">
          <Anns>
            <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-688285623" ln="142" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="142" srcRngEndLn="143" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int day, month, year;" ElType="." rngLn="142"/>
        <ElDesc lineHash="723039117" ln="143" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="143" srcRngEndLn="144" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char* datePos = strstr(line, &quot; &quot;); // Start looking for dates after spaces" ElType="!" rngLn="143"/>
        <ElDesc lineHash="-1597845385" ln="145" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="145" srcRngEndLn="146" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (datePos) {" ElType=".P" rngLn="145">
          <Anns>
            <Ann msg="Tainted data: datePos" kind="var"/>
            <Ann msg="Tainted data use in a loop condition" kind="point"/>
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a file (&quot;resultsLine[]&quot;) is printed on a console" ln="164" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="142" rule="BD-SECURITY-TDCONSOLE" FirstElSrcRngStartPos="0" lnHash="1823067815" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Avoid printing tainted data on the output console" FirstElSrcRngStartln="141" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="1551268824" lang="cpp" violId="c59a07a0-198a-34fc-9409-82f771c6c1fc" locEndPos="0" urgent="true" locEndLn="165" goals="1," locStartln="164" sev="1" locRef="1" tool="c++test" lineHash="1823067815" unbViolId="bad0127b-8c3d-3264-921c-043578ea402d" locType="sr" hash="549210378" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="497856354" ln="91" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="91" srcRngEndLn="92" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* file = fopen(filePath, &quot;r&quot;);" ElType="." rngLn="91"/>
        <ElDesc lineHash="-642891540" ln="92" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="92" srcRngEndLn="93" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!file) {" ElType="." rngLn="92">
          <Anns>
            <Ann msg="Condition evaluation: !file (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1070453125" ln="97" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="97" srcRngEndLn="98" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char line[LINE_LEN];" ElType="." rngLn="97"/>
        <ElDesc lineHash="-1727056776" ln="98" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="98" srcRngEndLn="99" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="bool diaglistFound = false;" ElType="." rngLn="98"/>
        <ElDesc lineHash="245180644" ln="99" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="99" srcRngEndLn="100" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char resultsBuffer[8192] = &quot;&quot;; // Buffer to store results for writing to file" ElType="." rngLn="99"/>
        <ElDesc lineHash="1641095690" ln="100" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="100" srcRngEndLn="101" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char licenseType[LINE_LEN] = &quot;&quot;; // To store LICENSE information" ElType="." rngLn="100"/>
        <ElDesc lineHash="-1023565332" ln="101" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="101" srcRngEndLn="102" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char customerName[LINE_LEN] = &quot;&quot;; // To store customer name" ElType="." rngLn="101"/>
        <ElDesc lineHash="2086606902" ln="103" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="103" srcRngEndLn="104" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="103">
          <Anns>
            <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-125611083" ln="104" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="104" srcRngEndLn="105" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strstr(line, &quot;# Diaglist&quot;) != NULL) {" ElType="." rngLn="104">
          <Anns>
            <Ann msg="Condition evaluation: (strstr(...) != 0) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1089687517" ln="105" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="105" srcRngEndLn="106" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="diaglistFound = true;" ElType="." rngLn="105"/>
        <ElDesc lineHash="207609628" ln="106" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="106" srcRngEndLn="107" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="break;" ElType="." rngLn="106">
          <Anns>
            <Ann msg="Exit the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1243469831" ln="123" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="123" srcRngEndLn="124" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!diaglistFound) {" ElType="." rngLn="123">
          <Anns>
            <Ann msg="Condition evaluation: !diaglistFound (false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="481717791" ln="131" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="131" srcRngEndLn="132" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="snprintf(resultsBuffer, sizeof(resultsBuffer), &quot;Diaglist section found. Checking for dates...\n&quot;);" ElType="." rngLn="131"/>
        <ElDesc lineHash="1550982067" ln="132" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="132" srcRngEndLn="133" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;%s&quot;, resultsBuffer);" ElType="." rngLn="132"/>
        <ElDesc lineHash="138878702" ln="133" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="133" srcRngEndLn="134" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="writeResultsToFile(resultsBuffer);" ElType="." rngLn="133">
          <ElDescList>
            <ElDesc lineHash="494569958" ln="78" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="78" srcRngEndLn="79" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* resultsFile = fopen(RESULTS_FILE, &quot;a&quot;); // Append to results file" ElType="." rngLn="78"/>
            <ElDesc lineHash="2093238350" ln="79" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="79" srcRngEndLn="80" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!resultsFile) {" ElType="." rngLn="79">
              <Anns>
                <Ann msg="Condition evaluation: !resultsFile (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-279959941" ln="80" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="80" srcRngEndLn="81" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fprintf(stderr, &quot;Error: Unable to create results file.\n&quot;);" ElType="." rngLn="80"/>
            <ElDesc lineHash="699226379" ln="81" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="81" srcRngEndLn="82" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return;" ElType="." rngLn="81"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-1248272121" ln="136" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="136" srcRngEndLn="137" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="snprintf(resultsBuffer, sizeof(resultsBuffer), &quot;License Type: %s\nCustomer Name: %s\n&quot;, licenseType, customerName);" ElType="." rngLn="136"/>
        <ElDesc lineHash="1550982067" ln="137" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="137" srcRngEndLn="138" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;%s&quot;, resultsBuffer);" ElType="." rngLn="137"/>
        <ElDesc lineHash="138878702" ln="138" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="138" srcRngEndLn="139" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="writeResultsToFile(resultsBuffer);" ElType="." rngLn="138">
          <ElDescList>
            <ElDesc lineHash="494569958" ln="78" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="78" srcRngEndLn="79" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* resultsFile = fopen(RESULTS_FILE, &quot;a&quot;); // Append to results file" ElType="." rngLn="78"/>
            <ElDesc lineHash="2093238350" ln="79" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="79" srcRngEndLn="80" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!resultsFile) {" ElType="." rngLn="79">
              <Anns>
                <Ann msg="Condition evaluation: !resultsFile (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-279959941" ln="80" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="80" srcRngEndLn="81" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fprintf(stderr, &quot;Error: Unable to create results file.\n&quot;);" ElType="." rngLn="80"/>
            <ElDesc lineHash="699226379" ln="81" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="81" srcRngEndLn="82" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return;" ElType="." rngLn="81"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="2086606902" ln="141" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="141" srcRngEndLn="142" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(...)" ElType=".C" rngLn="141">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: line[&lt;some index>]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2086606902" ln="141" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="141" srcRngEndLn="142" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="141">
          <Anns>
            <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-688285623" ln="142" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="142" srcRngEndLn="143" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int day, month, year;" ElType="." rngLn="142"/>
        <ElDesc lineHash="723039117" ln="143" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="143" srcRngEndLn="144" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char* datePos = strstr(line, &quot; &quot;); // Start looking for dates after spaces" ElType="!" rngLn="143"/>
        <ElDesc lineHash="-1597845385" ln="145" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="145" srcRngEndLn="146" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (datePos) {" ElType="." rngLn="145">
          <Anns>
            <Ann msg="Tainted data: datePos" kind="var"/>
            <Ann msg="Loop condition evaluation: (datePos != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-80813991" ln="146" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="146" srcRngEndLn="147" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char resultsLine[1024] = &quot;&quot;;" ElType="." rngLn="146"/>
        <ElDesc lineHash="1188863936" ln="148" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="148" srcRngEndLn="149" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (sscanf(datePos, &quot;%2d-%*3s-%4d&quot;, &amp;day, &amp;year) == 2) {" ElType="." rngLn="148">
          <Anns>
            <Ann msg="Condition evaluation: (sscanf(...) == 2) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1916454930" ln="149" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="149" srcRngEndLn="150" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char monthStr[4];" ElType="." rngLn="149"/>
        <ElDesc lineHash="936057600" ln="150" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="150" srcRngEndLn="151" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="sscanf(datePos, &quot;%*2d-%3s-%*4d&quot;, monthStr);" ElType="." rngLn="150"/>
        <ElDesc lineHash="-162925558" ln="151" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="151" srcRngEndLn="152" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="month = monthToNumber(monthStr);" ElType="." rngLn="151">
          <ElDescList>
            <ElDesc lineHash="871928418" ln="41" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="41" srcRngEndLn="42" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char monthLower[4];" ElType="." rngLn="41"/>
            <ElDesc lineHash="1738018591" ln="42" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="42" srcRngEndLn="43" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 3; i++) {" ElType="." rngLn="42">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 3) (true)" kind="condEval"/>
                <Ann msg="Entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="1002600856" ln="43" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="43" srcRngEndLn="44" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="monthLower[i] = tolower(month[i]);" ElType="." rngLn="43"/>
            <ElDesc lineHash="1738018591" ln="42" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="42" srcRngEndLn="43" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 3; i++) {" ElType="." rngLn="42">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 3) (assuming false)" kind="condEval"/>
                <Ann msg="Not entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="407903157" ln="45" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="45" srcRngEndLn="46" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="monthLower[3] = '\0'; // Null-terminate the string" ElType="." rngLn="45"/>
            <ElDesc lineHash="-1252698123" ln="47" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="47" srcRngEndLn="48" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 12; i++) {" ElType="." rngLn="47">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 12) (true)" kind="condEval"/>
                <Ann msg="Entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-2072426268" ln="48" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="48" srcRngEndLn="49" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strcmp(monthLower, months[i]) == 0) {" ElType="." rngLn="48">
              <Anns>
                <Ann msg="Condition evaluation: (strcmp(...) == 0) (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1252698123" ln="47" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="47" srcRngEndLn="48" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 12; i++) {" ElType="." rngLn="47">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 12) (assuming false)" kind="condEval"/>
                <Ann msg="Not entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-477888624" ln="53" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="53" srcRngEndLn="54" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return -1; // Invalid month" ElType="." rngLn="53"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1972123649" ln="153" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="153" srcRngEndLn="154" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (month != -1) {" ElType="." rngLn="153">
          <Anns>
            <Ann msg="Condition evaluation: (month != -1) (false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="948554783" ln="160" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="160" srcRngEndLn="161" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="snprintf(resultsLine, sizeof(resultsLine), &quot;Invalid month in date: %s\n&quot;, datePos);" ElType="!" rngLn="160"/>
        <ElDesc lineHash="1823067815" ln="164" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="164" srcRngEndLn="165" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;%s&quot;, resultsLine);" ElType=".P" rngLn="164">
          <Anns>
            <Ann msg="Tainted data: resultsLine[]" kind="var"/>
            <Ann msg="Call to a dangerous method" kind="point"/>
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a file (&quot;resultsLine[]&quot;) is printed on a console" ln="164" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="104" rule="BD-SECURITY-TDCONSOLE" FirstElSrcRngStartPos="0" lnHash="1823067815" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Avoid printing tainted data on the output console" FirstElSrcRngStartln="103" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="-1704623638" lang="cpp" violId="ed796c5b-f597-30a0-bf68-9bb6670e24ab" locEndPos="0" urgent="true" locEndLn="165" goals="1," locStartln="164" sev="1" locRef="1" tool="c++test" lineHash="1823067815" unbViolId="fb4b18e5-534e-37fc-8b56-87574c701b70" locType="sr" hash="549210378" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="497856354" ln="91" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="91" srcRngEndLn="92" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* file = fopen(filePath, &quot;r&quot;);" ElType="." rngLn="91"/>
        <ElDesc lineHash="-642891540" ln="92" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="92" srcRngEndLn="93" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!file) {" ElType="." rngLn="92">
          <Anns>
            <Ann msg="Condition evaluation: !file (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1070453125" ln="97" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="97" srcRngEndLn="98" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char line[LINE_LEN];" ElType="." rngLn="97"/>
        <ElDesc lineHash="-1727056776" ln="98" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="98" srcRngEndLn="99" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="bool diaglistFound = false;" ElType="." rngLn="98"/>
        <ElDesc lineHash="245180644" ln="99" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="99" srcRngEndLn="100" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char resultsBuffer[8192] = &quot;&quot;; // Buffer to store results for writing to file" ElType="." rngLn="99"/>
        <ElDesc lineHash="1641095690" ln="100" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="100" srcRngEndLn="101" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char licenseType[LINE_LEN] = &quot;&quot;; // To store LICENSE information" ElType="." rngLn="100"/>
        <ElDesc lineHash="-1023565332" ln="101" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="101" srcRngEndLn="102" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char customerName[LINE_LEN] = &quot;&quot;; // To store customer name" ElType="." rngLn="101"/>
        <ElDesc lineHash="2086606902" ln="103" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="103" srcRngEndLn="104" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(...)" ElType=".C" rngLn="103">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: line[&lt;some index>]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2086606902" ln="103" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="103" srcRngEndLn="104" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="103">
          <Anns>
            <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-125611083" ln="104" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="104" srcRngEndLn="105" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strstr(line, &quot;# Diaglist&quot;) != NULL) {" ElType="." rngLn="104">
          <Anns>
            <Ann msg="Condition evaluation: (strstr(...) != 0) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1089687517" ln="105" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="105" srcRngEndLn="106" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="diaglistFound = true;" ElType="." rngLn="105"/>
        <ElDesc lineHash="207609628" ln="106" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="106" srcRngEndLn="107" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="break;" ElType="." rngLn="106">
          <Anns>
            <Ann msg="Exit the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1243469831" ln="123" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="123" srcRngEndLn="124" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!diaglistFound) {" ElType="." rngLn="123">
          <Anns>
            <Ann msg="Condition evaluation: !diaglistFound (false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="481717791" ln="131" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="131" srcRngEndLn="132" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="snprintf(resultsBuffer, sizeof(resultsBuffer), &quot;Diaglist section found. Checking for dates...\n&quot;);" ElType="." rngLn="131"/>
        <ElDesc lineHash="1550982067" ln="132" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="132" srcRngEndLn="133" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;%s&quot;, resultsBuffer);" ElType="." rngLn="132"/>
        <ElDesc lineHash="138878702" ln="133" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="133" srcRngEndLn="134" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="writeResultsToFile(resultsBuffer);" ElType="." rngLn="133"/>
        <ElDesc lineHash="-1248272121" ln="136" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="136" srcRngEndLn="137" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="snprintf(resultsBuffer, sizeof(resultsBuffer), &quot;License Type: %s\nCustomer Name: %s\n&quot;, licenseType, customerName);" ElType="." rngLn="136"/>
        <ElDesc lineHash="1550982067" ln="137" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="137" srcRngEndLn="138" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;%s&quot;, resultsBuffer);" ElType="." rngLn="137"/>
        <ElDesc lineHash="138878702" ln="138" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="138" srcRngEndLn="139" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="writeResultsToFile(resultsBuffer);" ElType="." rngLn="138"/>
        <ElDesc lineHash="2086606902" ln="141" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="141" srcRngEndLn="142" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (fgets(line, sizeof(line), file)) {" ElType="." rngLn="141">
          <Anns>
            <Ann msg="Loop condition evaluation: (fgets(...) != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-688285623" ln="142" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="142" srcRngEndLn="143" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int day, month, year;" ElType="." rngLn="142"/>
        <ElDesc lineHash="723039117" ln="143" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="143" srcRngEndLn="144" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char* datePos = strstr(line, &quot; &quot;); // Start looking for dates after spaces" ElType="!" rngLn="143"/>
        <ElDesc lineHash="-1597845385" ln="145" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="145" srcRngEndLn="146" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="while (datePos) {" ElType="." rngLn="145">
          <Anns>
            <Ann msg="Tainted data: datePos" kind="var"/>
            <Ann msg="Loop condition evaluation: (datePos != 0) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-80813991" ln="146" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="146" srcRngEndLn="147" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char resultsLine[1024] = &quot;&quot;;" ElType="." rngLn="146"/>
        <ElDesc lineHash="1188863936" ln="148" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="148" srcRngEndLn="149" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (sscanf(datePos, &quot;%2d-%*3s-%4d&quot;, &amp;day, &amp;year) == 2) {" ElType="." rngLn="148">
          <Anns>
            <Ann msg="Condition evaluation: (sscanf(...) == 2) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1916454930" ln="149" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="149" srcRngEndLn="150" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char monthStr[4];" ElType="." rngLn="149"/>
        <ElDesc lineHash="936057600" ln="150" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="150" srcRngEndLn="151" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="sscanf(datePos, &quot;%*2d-%3s-%*4d&quot;, monthStr);" ElType="." rngLn="150"/>
        <ElDesc lineHash="-162925558" ln="151" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="151" srcRngEndLn="152" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="month = monthToNumber(monthStr);" ElType="." rngLn="151">
          <ElDescList>
            <ElDesc lineHash="871928418" ln="41" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="41" srcRngEndLn="42" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char monthLower[4];" ElType="." rngLn="41"/>
            <ElDesc lineHash="1738018591" ln="42" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="42" srcRngEndLn="43" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 3; i++) {" ElType="." rngLn="42">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 3) (assuming true)" kind="condEval"/>
                <Ann msg="Entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="1002600856" ln="43" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="43" srcRngEndLn="44" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="monthLower[i] = tolower(month[i]);" ElType="." rngLn="43"/>
            <ElDesc lineHash="1738018591" ln="42" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="42" srcRngEndLn="43" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 3; i++) {" ElType="." rngLn="42">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 3) (assuming false)" kind="condEval"/>
                <Ann msg="Not entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="407903157" ln="45" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="45" srcRngEndLn="46" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="monthLower[3] = '\0'; // Null-terminate the string" ElType="." rngLn="45"/>
            <ElDesc lineHash="-1252698123" ln="47" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="47" srcRngEndLn="48" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 12; i++) {" ElType="." rngLn="47">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 12) (assuming true)" kind="condEval"/>
                <Ann msg="Entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-2072426268" ln="48" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="48" srcRngEndLn="49" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (strcmp(monthLower, months[i]) == 0) {" ElType="." rngLn="48">
              <Anns>
                <Ann msg="Condition evaluation: (strcmp(...) == 0) (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1252698123" ln="47" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="47" srcRngEndLn="48" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; 12; i++) {" ElType="." rngLn="47">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 12) (assuming false)" kind="condEval"/>
                <Ann msg="Not entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-477888624" ln="53" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="53" srcRngEndLn="54" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return -1; // Invalid month" ElType="." rngLn="53"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1972123649" ln="153" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="153" srcRngEndLn="154" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (month != -1) {" ElType="." rngLn="153">
          <Anns>
            <Ann msg="Condition evaluation: (month != -1) (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="948554783" ln="160" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="160" srcRngEndLn="161" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="snprintf(resultsLine, sizeof(resultsLine), &quot;Invalid month in date: %s\n&quot;, datePos);" ElType="!" rngLn="160"/>
        <ElDesc lineHash="1823067815" ln="164" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="164" srcRngEndLn="165" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;%s&quot;, resultsLine);" ElType=".P" rngLn="164">
          <Anns>
            <Ann msg="Tainted data: resultsLine[]" kind="var"/>
            <Ann msg="Call to a dangerous method" kind="point"/>
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a console (&quot;findFileData&quot;) is used in a loop condition" ln="194" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Tainted data use in a loop condition" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="252" rule="BD-SECURITY-TDLOOP" FirstElSrcRngStartPos="0" lnHash="1054933362" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Validate potentially tainted data before it is used in the controlling expression of a loop" FirstElSrcRngStartln="251" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="334227303" lang="cpp" violId="33abfafa-a944-3bfe-909b-49421859f558" locEndPos="0" urgent="true" locEndLn="195" goals="1," locStartln="194" sev="1" locRef="1" tool="c++test" lineHash="1054933362" unbViolId="b7cdc94a-dc96-3b68-845c-80c137fd33b7" locType="sr" hash="549210378" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="842755070" ln="236" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="236" srcRngEndLn="237" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;r&quot;);" ElType="." rngLn="236"/>
        <ElDesc lineHash="994035581" ln="237" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="237" srcRngEndLn="238" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (config) {" ElType="." rngLn="237">
          <Anns>
            <Ann msg="Condition evaluation: (config != 0) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="421502936" ln="238" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="238" srcRngEndLn="239" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(filePath, MAX_PATH_LEN, config);" ElType="." rngLn="238"/>
        <ElDesc lineHash="-137669080" ln="239" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="239" srcRngEndLn="240" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="filePath[strcspn(filePath, &quot;\r\n&quot;)] = '\0'; // Remove newline" ElType="." rngLn="239"/>
        <ElDesc lineHash="-1802127606" ln="240" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="240" srcRngEndLn="241" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fclose(config);" ElType="." rngLn="240"/>
        <ElDesc lineHash="-874458958" ln="242" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="242" srcRngEndLn="243" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Stored path found: %s\n&quot;, filePath);" ElType="." rngLn="242"/>
        <ElDesc lineHash="-1144948456" ln="243" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="243" srcRngEndLn="244" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Do you want to use the stored path? (y/n): &quot;);" ElType="." rngLn="243"/>
        <ElDesc lineHash="10412016" ln="244" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="244" srcRngEndLn="245" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char choice;" ElType="." rngLn="244"/>
        <ElDesc lineHash="278597054" ln="245" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="245" srcRngEndLn="246" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(&quot; %c&quot;, &amp;choice);" ElType="." rngLn="245"/>
        <ElDesc lineHash="1555766143" ln="247" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="247" srcRngEndLn="248" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (choice == 'n' || choice == 'N') {" ElType="." rngLn="247">
          <Anns>
            <Ann msg="Condition evaluation: (choice == 110) (assuming true)" kind="condEval"/>
            <Ann msg="Condition evaluation: choice == 'n' || choice == 'N' (true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-372566617" ln="248" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="248" srcRngEndLn="249" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="remove(CONFIG_FILE);" ElType="." rngLn="248"/>
        <ElDesc lineHash="-402752085" ln="249" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="249" srcRngEndLn="250" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Enter the directory containing license files: &quot;);" ElType="." rngLn="249"/>
        <ElDesc lineHash="-923471348" ln="250" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="250" srcRngEndLn="251" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char directory[MAX_PATH_LEN];" ElType="." rngLn="250"/>
        <ElDesc lineHash="-2073627346" ln="251" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="251" srcRngEndLn="252" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(&quot; %259s&quot;, directory);" ElType=".C" rngLn="251">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: directory[]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-850845177" ln="253" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="253" srcRngEndLn="254" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="isDirectory(...)" ElType="!" rngLn="253">
          <ElDescList>
            <ElDesc lineHash="1109750861" ln="27" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="27" srcRngEndLn="28" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="DWORD attributes = GetFileAttributesA(path);" ElType="." rngLn="27">
              <Anns>
                <Ann msg="Tainted data: path[]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-92531762" ln="28" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="28" srcRngEndLn="29" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (attributes == INVALID_FILE_ATTRIBUTES) {" ElType="." rngLn="28">
              <Anns>
                <Ann msg="Condition evaluation: (attributes == 4294967295) (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="998513316" ln="31" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="31" srcRngEndLn="32" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return (attributes &amp; FILE_ATTRIBUTE_DIRECTORY);" ElType="!" rngLn="31"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-850845177" ln="253" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="253" srcRngEndLn="254" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!isDirectory(directory)) {" ElType="." rngLn="253">
          <Anns>
            <Ann msg="Condition evaluation: !isDirectory(...) (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1955791720" ln="258" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="258" srcRngEndLn="259" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="chooseLicenseFile(filePath, directory);" ElType="!" rngLn="258">
          <ElDescList>
            <ElDesc lineHash="-1364436747" ln="202" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="202" srcRngEndLn="203" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char files[100][MAX_PATH_LEN];" ElType="." rngLn="202">
              <Anns>
                <Ann msg="Tainted data: directory[]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-438817434" ln="203" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="203" srcRngEndLn="204" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int fileCount = listLicenseFiles(directory, files, 100);" ElType="!" rngLn="203">
              <ElDescList>
                <ElDesc lineHash="-1480736111" ln="176" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="176" srcRngEndLn="177" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="WIN32_FIND_DATAA findFileData;" ElType="." rngLn="176">
                  <Anns>
                    <Ann msg="Tainted data: directory[]" kind="var"/>
                  </Anns>
                </ElDesc>
                <ElDesc lineHash="1594921746" ln="177" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="177" srcRngEndLn="178" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="HANDLE hFind;" ElType="." rngLn="177"/>
                <ElDesc lineHash="-1185082184" ln="178" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="178" srcRngEndLn="179" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char searchPath[MAX_PATH_LEN];" ElType="." rngLn="178"/>
                <ElDesc lineHash="-1648584774" ln="180" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="180" srcRngEndLn="181" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="snprintf(searchPath, MAX_PATH_LEN, &quot;%s\\*.lic&quot;, directory);" ElType="!" rngLn="180"/>
                <ElDesc lineHash="38350398" ln="181" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="181" srcRngEndLn="182" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="hFind = FindFirstFileA(searchPath, &amp;findFileData);" ElType="!" rngLn="181">
                  <Anns>
                    <Ann msg="Tainted data: searchPath[]" kind="var"/>
                  </Anns>
                </ElDesc>
                <ElDesc lineHash="141356998" ln="183" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="183" srcRngEndLn="184" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (hFind == INVALID_HANDLE_VALUE) {" ElType="." rngLn="183">
                  <Anns>
                    <Ann msg="Tainted data: findFileData" kind="var"/>
                    <Ann msg="Condition evaluation: (hFind == 18446744073709551615) (assuming false)" kind="condEval"/>
                  </Anns>
                </ElDesc>
                <ElDesc lineHash="221640208" ln="188" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="188" srcRngEndLn="189" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int count = 0;" ElType="." rngLn="188"/>
                <ElDesc lineHash="-2009163853" ln="190" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="190" srcRngEndLn="191" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!(findFileData.dwFileAttributes &amp; FILE_ATTRIBUTE_DIRECTORY)) {" ElType="." rngLn="190">
                  <Anns>
                    <Ann msg="Condition evaluation: !findFileData.dwFileAttributes &amp; 16 != 0 (assuming false)" kind="condEval"/>
                  </Anns>
                </ElDesc>
                <ElDesc lineHash="1054933362" ln="194" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="194" srcRngEndLn="195" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="} while (FindNextFileA(hFind, &amp;findFileData) != 0 &amp;&amp; count &lt; maxFiles);" ElType=".P" rngLn="194">
                  <Anns>
                    <Ann msg="Tainted data: findFileData" kind="var"/>
                    <Ann msg="Tainted data use in a loop condition" kind="point"/>
                  </Anns>
                </ElDesc>
              </ElDescList>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a console (&quot;findFileData&quot;) is used in a loop condition" ln="194" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Tainted data use in a loop condition" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="265" rule="BD-SECURITY-TDLOOP" FirstElSrcRngStartPos="0" lnHash="1054933362" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Validate potentially tainted data before it is used in the controlling expression of a loop" FirstElSrcRngStartln="264" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="323773818" lang="cpp" violId="9150f857-befb-312a-a85e-ab9fe941115c" locEndPos="0" urgent="true" locEndLn="195" goals="1," locStartln="194" sev="1" locRef="1" tool="c++test" lineHash="1054933362" unbViolId="976f9afc-4799-3fa6-aad9-4a9dc413b38c" locType="sr" hash="549210378" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="842755070" ln="236" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="236" srcRngEndLn="237" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;r&quot;);" ElType="." rngLn="236"/>
        <ElDesc lineHash="994035581" ln="237" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="237" srcRngEndLn="238" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (config) {" ElType="." rngLn="237">
          <Anns>
            <Ann msg="Condition evaluation: (config != 0) (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1911326123" ln="262" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="262" srcRngEndLn="263" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Enter the directory containing license files: &quot;);" ElType="." rngLn="262"/>
        <ElDesc lineHash="113179148" ln="263" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="263" srcRngEndLn="264" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char directory[MAX_PATH_LEN];" ElType="." rngLn="263"/>
        <ElDesc lineHash="1024654638" ln="264" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="264" srcRngEndLn="265" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(&quot; %259s&quot;, directory);" ElType=".C" rngLn="264">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: directory[]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1220549127" ln="266" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="266" srcRngEndLn="267" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="isDirectory(...)" ElType="!" rngLn="266">
          <ElDescList>
            <ElDesc lineHash="1109750861" ln="27" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="27" srcRngEndLn="28" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="DWORD attributes = GetFileAttributesA(path);" ElType="." rngLn="27">
              <Anns>
                <Ann msg="Tainted data: path[]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-92531762" ln="28" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="28" srcRngEndLn="29" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (attributes == INVALID_FILE_ATTRIBUTES) {" ElType="." rngLn="28">
              <Anns>
                <Ann msg="Condition evaluation: (attributes == 4294967295) (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="998513316" ln="31" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="31" srcRngEndLn="32" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return (attributes &amp; FILE_ATTRIBUTE_DIRECTORY);" ElType="!" rngLn="31"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1220549127" ln="266" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="266" srcRngEndLn="267" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!isDirectory(directory)) {" ElType="." rngLn="266">
          <Anns>
            <Ann msg="Condition evaluation: !isDirectory(...) (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1552741528" ln="271" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="271" srcRngEndLn="272" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="chooseLicenseFile(filePath, directory);" ElType="!" rngLn="271">
          <ElDescList>
            <ElDesc lineHash="-1364436747" ln="202" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="202" srcRngEndLn="203" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char files[100][MAX_PATH_LEN];" ElType="." rngLn="202">
              <Anns>
                <Ann msg="Tainted data: directory[]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-438817434" ln="203" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="203" srcRngEndLn="204" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int fileCount = listLicenseFiles(directory, files, 100);" ElType="!" rngLn="203">
              <ElDescList>
                <ElDesc lineHash="-1480736111" ln="176" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="176" srcRngEndLn="177" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="WIN32_FIND_DATAA findFileData;" ElType="." rngLn="176">
                  <Anns>
                    <Ann msg="Tainted data: directory[]" kind="var"/>
                  </Anns>
                </ElDesc>
                <ElDesc lineHash="1594921746" ln="177" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="177" srcRngEndLn="178" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="HANDLE hFind;" ElType="." rngLn="177"/>
                <ElDesc lineHash="-1185082184" ln="178" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="178" srcRngEndLn="179" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char searchPath[MAX_PATH_LEN];" ElType="." rngLn="178"/>
                <ElDesc lineHash="-1648584774" ln="180" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="180" srcRngEndLn="181" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="snprintf(searchPath, MAX_PATH_LEN, &quot;%s\\*.lic&quot;, directory);" ElType="!" rngLn="180"/>
                <ElDesc lineHash="38350398" ln="181" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="181" srcRngEndLn="182" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="hFind = FindFirstFileA(searchPath, &amp;findFileData);" ElType="!" rngLn="181">
                  <Anns>
                    <Ann msg="Tainted data: searchPath[]" kind="var"/>
                  </Anns>
                </ElDesc>
                <ElDesc lineHash="141356998" ln="183" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="183" srcRngEndLn="184" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (hFind == INVALID_HANDLE_VALUE) {" ElType="." rngLn="183">
                  <Anns>
                    <Ann msg="Tainted data: findFileData" kind="var"/>
                    <Ann msg="Condition evaluation: (hFind == 18446744073709551615) (assuming false)" kind="condEval"/>
                  </Anns>
                </ElDesc>
                <ElDesc lineHash="221640208" ln="188" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="188" srcRngEndLn="189" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int count = 0;" ElType="." rngLn="188"/>
                <ElDesc lineHash="-2009163853" ln="190" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="190" srcRngEndLn="191" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!(findFileData.dwFileAttributes &amp; FILE_ATTRIBUTE_DIRECTORY)) {" ElType="." rngLn="190">
                  <Anns>
                    <Ann msg="Condition evaluation: !findFileData.dwFileAttributes &amp; 16 != 0 (assuming false)" kind="condEval"/>
                  </Anns>
                </ElDesc>
                <ElDesc lineHash="1054933362" ln="194" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="194" srcRngEndLn="195" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="} while (FindNextFileA(hFind, &amp;findFileData) != 0 &amp;&amp; count &lt; maxFiles);" ElType=".P" rngLn="194">
                  <Anns>
                    <Ann msg="Tainted data: findFileData" kind="var"/>
                    <Ann msg="Tainted data use in a loop condition" kind="point"/>
                  </Anns>
                </ElDesc>
              </ElDescList>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Single stack variable &quot;files&quot; takes 26000 bytes which is greater than defined limit 4096 bytes" ln="202" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" locStartln="202" sev="3" auth="danie" locRef="1" rule="BD-RES-STACKLIM" lnHash="-1364436747" rule.header="Do not create variables on the stack above the defined limits" tool="c++test" lineHash="-1364436747" unbViolId="5c401793-9e90-3300-a3af-33916a15f141" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" lang="cpp" violId="e69cb3cf-c613-375d-af4c-80210cc1dee1" locEndPos="0" locType="sr" urgent="true" hash="549210378" locEndLn="203" goals="1,"/>
    <FlowViol msg="Data obtained from a console (&quot;files[0][]&quot;) is printed on a console" ln="212" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="265" rule="BD-SECURITY-TDCONSOLE" FirstElSrcRngStartPos="0" lnHash="-1083478587" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Avoid printing tainted data on the output console" FirstElSrcRngStartln="264" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="811625193" lang="cpp" violId="d29a1185-f3c9-3d53-9efd-e5b2ea275518" locEndPos="0" urgent="true" locEndLn="213" goals="1," locStartln="212" sev="1" locRef="1" tool="c++test" lineHash="-1083478587" unbViolId="88ce138b-13f4-3e0f-978e-d64773dc88d0" locType="sr" hash="549210378" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="842755070" ln="236" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="236" srcRngEndLn="237" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;r&quot;);" ElType="." rngLn="236"/>
        <ElDesc lineHash="994035581" ln="237" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="237" srcRngEndLn="238" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (config) {" ElType="." rngLn="237">
          <Anns>
            <Ann msg="Condition evaluation: (config != 0) (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1911326123" ln="262" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="262" srcRngEndLn="263" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Enter the directory containing license files: &quot;);" ElType="." rngLn="262"/>
        <ElDesc lineHash="113179148" ln="263" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="263" srcRngEndLn="264" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char directory[MAX_PATH_LEN];" ElType="." rngLn="263"/>
        <ElDesc lineHash="1024654638" ln="264" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="264" srcRngEndLn="265" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(&quot; %259s&quot;, directory);" ElType=".C" rngLn="264">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: directory[]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1220549127" ln="266" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="266" srcRngEndLn="267" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="isDirectory(...)" ElType="!" rngLn="266">
          <ElDescList>
            <ElDesc lineHash="1109750861" ln="27" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="27" srcRngEndLn="28" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="DWORD attributes = GetFileAttributesA(path);" ElType="." rngLn="27">
              <Anns>
                <Ann msg="Tainted data: path[]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-92531762" ln="28" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="28" srcRngEndLn="29" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (attributes == INVALID_FILE_ATTRIBUTES) {" ElType="." rngLn="28">
              <Anns>
                <Ann msg="Condition evaluation: (attributes == 4294967295) (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="998513316" ln="31" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="31" srcRngEndLn="32" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return (attributes &amp; FILE_ATTRIBUTE_DIRECTORY);" ElType="!" rngLn="31"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1220549127" ln="266" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="266" srcRngEndLn="267" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!isDirectory(directory)) {" ElType="." rngLn="266">
          <Anns>
            <Ann msg="Condition evaluation: !isDirectory(...) (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1552741528" ln="271" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="271" srcRngEndLn="272" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="chooseLicenseFile(filePath, directory);" ElType="!" rngLn="271">
          <ElDescList>
            <ElDesc lineHash="-1364436747" ln="202" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="202" srcRngEndLn="203" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char files[100][MAX_PATH_LEN];" ElType="." rngLn="202">
              <Anns>
                <Ann msg="Tainted data: directory[]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-438817434" ln="203" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="203" srcRngEndLn="204" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int fileCount = listLicenseFiles(directory, files, 100);" ElType="!" rngLn="203">
              <ElDescList>
                <ElDesc lineHash="-1480736111" ln="176" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="176" srcRngEndLn="177" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="WIN32_FIND_DATAA findFileData;" ElType="." rngLn="176">
                  <Anns>
                    <Ann msg="Tainted data: directory[]" kind="var"/>
                  </Anns>
                </ElDesc>
                <ElDesc lineHash="1594921746" ln="177" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="177" srcRngEndLn="178" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="HANDLE hFind;" ElType="." rngLn="177"/>
                <ElDesc lineHash="-1185082184" ln="178" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="178" srcRngEndLn="179" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char searchPath[MAX_PATH_LEN];" ElType="." rngLn="178"/>
                <ElDesc lineHash="-1648584774" ln="180" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="180" srcRngEndLn="181" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="snprintf(searchPath, MAX_PATH_LEN, &quot;%s\\*.lic&quot;, directory);" ElType="." rngLn="180"/>
                <ElDesc lineHash="38350398" ln="181" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="181" srcRngEndLn="182" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="hFind = FindFirstFileA(searchPath, &amp;findFileData);" ElType="." rngLn="181"/>
                <ElDesc lineHash="141356998" ln="183" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="183" srcRngEndLn="184" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (hFind == INVALID_HANDLE_VALUE) {" ElType="." rngLn="183">
                  <Anns>
                    <Ann msg="Condition evaluation: (hFind == 18446744073709551615) (assuming false)" kind="condEval"/>
                  </Anns>
                </ElDesc>
                <ElDesc lineHash="221640208" ln="188" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="188" srcRngEndLn="189" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int count = 0;" ElType="." rngLn="188"/>
                <ElDesc lineHash="-2009163853" ln="190" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="190" srcRngEndLn="191" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!(findFileData.dwFileAttributes &amp; FILE_ATTRIBUTE_DIRECTORY)) {" ElType="." rngLn="190">
                  <Anns>
                    <Ann msg="Condition evaluation: !findFileData.dwFileAttributes &amp; 16 != 0 (assuming true)" kind="condEval"/>
                  </Anns>
                </ElDesc>
                <ElDesc lineHash="1432741074" ln="191" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="191" srcRngEndLn="192" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="snprintf(files[count], MAX_PATH_LEN, &quot;%s\\%s&quot;, directory, findFileData.cFileName);" ElType="!" rngLn="191"/>
                <ElDesc lineHash="1494982508" ln="192" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="192" srcRngEndLn="193" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="count++;" ElType="." rngLn="192">
                  <Anns>
                    <Ann msg="Tainted data: files[0][]" kind="var"/>
                  </Anns>
                </ElDesc>
                <ElDesc lineHash="1054933362" ln="194" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="194" srcRngEndLn="195" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="} while (FindNextFileA(hFind, &amp;findFileData) != 0 &amp;&amp; count &lt; maxFiles);" ElType="." rngLn="194">
                  <Anns>
                    <Ann msg="Loop condition evaluation: (FindNextFileA(...) != 0) (assuming false)" kind="condEval"/>
                    <Ann msg="Loop condition evaluation: FindNextFileA(hFind, &amp;findFileData) != 0 &amp;&amp; count &lt; maxFiles (false)" kind="condEval"/>
                    <Ann msg="Not entering the loop" kind="condEval"/>
                  </Anns>
                </ElDesc>
                <ElDesc lineHash="-442753366" ln="196" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="196" srcRngEndLn="197" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FindClose(hFind);" ElType="." rngLn="196"/>
                <ElDesc lineHash="277069308" ln="197" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="197" srcRngEndLn="198" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return count;" ElType="." rngLn="197"/>
              </ElDescList>
            </ElDesc>
            <ElDesc lineHash="-1570492638" ln="205" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="205" srcRngEndLn="206" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (fileCount == 0) {" ElType="." rngLn="205">
              <Anns>
                <Ann msg="Tainted data: files[0][]" kind="var"/>
                <Ann msg="Condition evaluation: (fileCount == 0) (false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-735021688" ln="210" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="210" srcRngEndLn="211" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Found %d license file(s):\n&quot;, fileCount);" ElType="." rngLn="210"/>
            <ElDesc lineHash="1162263519" ln="211" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="211" srcRngEndLn="212" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; fileCount; i++) {" ElType="." rngLn="211">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; fileCount) (true)" kind="condEval"/>
                <Ann msg="Entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1083478587" ln="212" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="212" srcRngEndLn="213" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;%d: %s\n&quot;, i + 1, files[i]);" ElType=".P" rngLn="212">
              <Anns>
                <Ann msg="Tainted data: files[0][]" kind="var"/>
                <Ann msg="Call to a dangerous method" kind="point"/>
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a console (&quot;files[0][]&quot;) is printed on a console" ln="212" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="252" rule="BD-SECURITY-TDCONSOLE" FirstElSrcRngStartPos="0" lnHash="-1083478587" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Avoid printing tainted data on the output console" FirstElSrcRngStartln="251" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="-2133724668" lang="cpp" violId="f99f6b23-156c-3594-a756-5d409c3fa691" locEndPos="0" urgent="true" locEndLn="213" goals="1," locStartln="212" sev="1" locRef="1" tool="c++test" lineHash="-1083478587" unbViolId="5e8b2048-26fb-3580-851c-7a8257adbbee" locType="sr" hash="549210378" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="842755070" ln="236" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="236" srcRngEndLn="237" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;r&quot;);" ElType="." rngLn="236"/>
        <ElDesc lineHash="994035581" ln="237" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="237" srcRngEndLn="238" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (config) {" ElType="." rngLn="237">
          <Anns>
            <Ann msg="Condition evaluation: (config != 0) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="421502936" ln="238" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="238" srcRngEndLn="239" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(filePath, MAX_PATH_LEN, config);" ElType="." rngLn="238"/>
        <ElDesc lineHash="-137669080" ln="239" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="239" srcRngEndLn="240" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="filePath[strcspn(filePath, &quot;\r\n&quot;)] = '\0'; // Remove newline" ElType="." rngLn="239"/>
        <ElDesc lineHash="-1802127606" ln="240" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="240" srcRngEndLn="241" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fclose(config);" ElType="." rngLn="240"/>
        <ElDesc lineHash="-874458958" ln="242" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="242" srcRngEndLn="243" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Stored path found: %s\n&quot;, filePath);" ElType="." rngLn="242"/>
        <ElDesc lineHash="-1144948456" ln="243" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="243" srcRngEndLn="244" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Do you want to use the stored path? (y/n): &quot;);" ElType="." rngLn="243"/>
        <ElDesc lineHash="10412016" ln="244" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="244" srcRngEndLn="245" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char choice;" ElType="." rngLn="244"/>
        <ElDesc lineHash="278597054" ln="245" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="245" srcRngEndLn="246" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(&quot; %c&quot;, &amp;choice);" ElType="." rngLn="245"/>
        <ElDesc lineHash="1555766143" ln="247" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="247" srcRngEndLn="248" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (choice == 'n' || choice == 'N') {" ElType="." rngLn="247">
          <Anns>
            <Ann msg="Condition evaluation: (choice == 110) (assuming true)" kind="condEval"/>
            <Ann msg="Condition evaluation: choice == 'n' || choice == 'N' (true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-372566617" ln="248" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="248" srcRngEndLn="249" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="remove(CONFIG_FILE);" ElType="." rngLn="248"/>
        <ElDesc lineHash="-402752085" ln="249" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="249" srcRngEndLn="250" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Enter the directory containing license files: &quot;);" ElType="." rngLn="249"/>
        <ElDesc lineHash="-923471348" ln="250" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="250" srcRngEndLn="251" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char directory[MAX_PATH_LEN];" ElType="." rngLn="250"/>
        <ElDesc lineHash="-2073627346" ln="251" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="251" srcRngEndLn="252" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(&quot; %259s&quot;, directory);" ElType=".C" rngLn="251">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: directory[]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-850845177" ln="253" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="253" srcRngEndLn="254" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="isDirectory(...)" ElType="!" rngLn="253">
          <ElDescList>
            <ElDesc lineHash="1109750861" ln="27" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="27" srcRngEndLn="28" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="DWORD attributes = GetFileAttributesA(path);" ElType="." rngLn="27">
              <Anns>
                <Ann msg="Tainted data: path[]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-92531762" ln="28" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="28" srcRngEndLn="29" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (attributes == INVALID_FILE_ATTRIBUTES) {" ElType="." rngLn="28">
              <Anns>
                <Ann msg="Condition evaluation: (attributes == 4294967295) (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="998513316" ln="31" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="31" srcRngEndLn="32" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return (attributes &amp; FILE_ATTRIBUTE_DIRECTORY);" ElType="!" rngLn="31"/>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-850845177" ln="253" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="253" srcRngEndLn="254" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!isDirectory(directory)) {" ElType="." rngLn="253">
          <Anns>
            <Ann msg="Condition evaluation: !isDirectory(...) (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1955791720" ln="258" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="258" srcRngEndLn="259" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="chooseLicenseFile(filePath, directory);" ElType="!" rngLn="258">
          <ElDescList>
            <ElDesc lineHash="-1364436747" ln="202" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="202" srcRngEndLn="203" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char files[100][MAX_PATH_LEN];" ElType="." rngLn="202">
              <Anns>
                <Ann msg="Tainted data: directory[]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-438817434" ln="203" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="203" srcRngEndLn="204" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int fileCount = listLicenseFiles(directory, files, 100);" ElType="!" rngLn="203">
              <ElDescList>
                <ElDesc lineHash="-1480736111" ln="176" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="176" srcRngEndLn="177" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="WIN32_FIND_DATAA findFileData;" ElType="." rngLn="176">
                  <Anns>
                    <Ann msg="Tainted data: directory[]" kind="var"/>
                  </Anns>
                </ElDesc>
                <ElDesc lineHash="1594921746" ln="177" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="177" srcRngEndLn="178" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="HANDLE hFind;" ElType="." rngLn="177"/>
                <ElDesc lineHash="-1185082184" ln="178" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="178" srcRngEndLn="179" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char searchPath[MAX_PATH_LEN];" ElType="." rngLn="178"/>
                <ElDesc lineHash="-1648584774" ln="180" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="180" srcRngEndLn="181" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="snprintf(searchPath, MAX_PATH_LEN, &quot;%s\\*.lic&quot;, directory);" ElType="." rngLn="180"/>
                <ElDesc lineHash="38350398" ln="181" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="181" srcRngEndLn="182" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="hFind = FindFirstFileA(searchPath, &amp;findFileData);" ElType="." rngLn="181"/>
                <ElDesc lineHash="141356998" ln="183" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="183" srcRngEndLn="184" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (hFind == INVALID_HANDLE_VALUE) {" ElType="." rngLn="183">
                  <Anns>
                    <Ann msg="Condition evaluation: (hFind == 18446744073709551615) (assuming false)" kind="condEval"/>
                  </Anns>
                </ElDesc>
                <ElDesc lineHash="221640208" ln="188" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="188" srcRngEndLn="189" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int count = 0;" ElType="." rngLn="188"/>
                <ElDesc lineHash="-2009163853" ln="190" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="190" srcRngEndLn="191" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!(findFileData.dwFileAttributes &amp; FILE_ATTRIBUTE_DIRECTORY)) {" ElType="." rngLn="190">
                  <Anns>
                    <Ann msg="Condition evaluation: !findFileData.dwFileAttributes &amp; 16 != 0 (assuming true)" kind="condEval"/>
                  </Anns>
                </ElDesc>
                <ElDesc lineHash="1432741074" ln="191" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="191" srcRngEndLn="192" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="snprintf(files[count], MAX_PATH_LEN, &quot;%s\\%s&quot;, directory, findFileData.cFileName);" ElType="!" rngLn="191"/>
                <ElDesc lineHash="1494982508" ln="192" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="192" srcRngEndLn="193" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="count++;" ElType="." rngLn="192">
                  <Anns>
                    <Ann msg="Tainted data: files[0][]" kind="var"/>
                  </Anns>
                </ElDesc>
                <ElDesc lineHash="1054933362" ln="194" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="194" srcRngEndLn="195" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="} while (FindNextFileA(hFind, &amp;findFileData) != 0 &amp;&amp; count &lt; maxFiles);" ElType="." rngLn="194">
                  <Anns>
                    <Ann msg="Loop condition evaluation: (FindNextFileA(...) != 0) (assuming false)" kind="condEval"/>
                    <Ann msg="Loop condition evaluation: FindNextFileA(hFind, &amp;findFileData) != 0 &amp;&amp; count &lt; maxFiles (false)" kind="condEval"/>
                    <Ann msg="Not entering the loop" kind="condEval"/>
                  </Anns>
                </ElDesc>
                <ElDesc lineHash="-442753366" ln="196" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="196" srcRngEndLn="197" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FindClose(hFind);" ElType="." rngLn="196"/>
                <ElDesc lineHash="277069308" ln="197" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="197" srcRngEndLn="198" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="return count;" ElType="." rngLn="197"/>
              </ElDescList>
            </ElDesc>
            <ElDesc lineHash="-1570492638" ln="205" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="205" srcRngEndLn="206" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (fileCount == 0) {" ElType="." rngLn="205">
              <Anns>
                <Ann msg="Tainted data: files[0][]" kind="var"/>
                <Ann msg="Condition evaluation: (fileCount == 0) (false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-735021688" ln="210" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="210" srcRngEndLn="211" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Found %d license file(s):\n&quot;, fileCount);" ElType="." rngLn="210"/>
            <ElDesc lineHash="1162263519" ln="211" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="211" srcRngEndLn="212" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; fileCount; i++) {" ElType="." rngLn="211">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; fileCount) (true)" kind="condEval"/>
                <Ann msg="Entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1083478587" ln="212" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="212" srcRngEndLn="213" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;%d: %s\n&quot;, i + 1, files[i]);" ElType=".P" rngLn="212">
              <Anns>
                <Ann msg="Tainted data: files[0][]" kind="var"/>
                <Ann msg="Call to a dangerous method" kind="point"/>
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly non-zero terminated string in buffer &quot;filePath&quot; char[260]. Number of bytes to write (= 260) is the same as the buffer size" ln="222" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Point where the buffer overflow occurs" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="279" rule="BD-PB-NZTS" FirstElSrcRngStartPos="0" lnHash="617593544" ruleSCSCMsg="Point where the buffer size becomes known" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Ensure strings are zero terminated" FirstElSrcRngStartln="278" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="967480596" lang="cpp" violId="fca9c668-3f9f-3378-94f0-53b6ac8941bc" locEndPos="0" urgent="true" locEndLn="223" goals="1," locStartln="222" sev="3" locRef="1" tool="c++test" lineHash="617593544" unbViolId="b0c3e128-6b7a-3fd5-9321-093bb1d45cc3" locType="sr" hash="549210378" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="1036238815" ln="276" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="276" srcRngEndLn="277" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char filePath[MAX_PATH_LEN] = { 0 };" ElType="." rngLn="276"/>
        <ElDesc lineHash="2123734798" ln="278" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="278" srcRngEndLn="279" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="manageStoredPath(filePath);" ElType=".C" rngLn="278">
          <ElDescList>
            <ElDesc lineHash="842755070" ln="236" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="236" srcRngEndLn="237" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;r&quot;);" ElType="." rngLn="236">
              <Anns>
                <Ann msg="number of elements to write: 260" kind="var"/>
                <Ann msg="Buffer: char filePath[260]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="994035581" ln="237" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="237" srcRngEndLn="238" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (config) {" ElType="." rngLn="237">
              <Anns>
                <Ann msg="Condition evaluation: (config != 0) (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="1911326123" ln="262" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="262" srcRngEndLn="263" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Enter the directory containing license files: &quot;);" ElType="." rngLn="262"/>
            <ElDesc lineHash="113179148" ln="263" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="263" srcRngEndLn="264" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char directory[MAX_PATH_LEN];" ElType="." rngLn="263"/>
            <ElDesc lineHash="1024654638" ln="264" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="264" srcRngEndLn="265" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(&quot; %259s&quot;, directory);" ElType="." rngLn="264"/>
            <ElDesc lineHash="1220549127" ln="266" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="266" srcRngEndLn="267" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!isDirectory(directory)) {" ElType="." rngLn="266">
              <Anns>
                <Ann msg="Condition evaluation: !isDirectory(...) (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1552741528" ln="271" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="271" srcRngEndLn="272" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="chooseLicenseFile(filePath, directory);" ElType="!" rngLn="271">
              <ElDescList>
                <ElDesc lineHash="-1364436747" ln="202" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="202" srcRngEndLn="203" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char files[100][MAX_PATH_LEN];" ElType="." rngLn="202">
                  <Anns>
                    <Ann msg="number of elements to write: 260" kind="var"/>
                    <Ann msg="Buffer: char filePath[260]" kind="var"/>
                  </Anns>
                </ElDesc>
                <ElDesc lineHash="-438817434" ln="203" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="203" srcRngEndLn="204" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int fileCount = listLicenseFiles(directory, files, 100);" ElType="." rngLn="203"/>
                <ElDesc lineHash="-1570492638" ln="205" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="205" srcRngEndLn="206" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (fileCount == 0) {" ElType="." rngLn="205">
                  <Anns>
                    <Ann msg="Condition evaluation: (fileCount == 0) (assuming false)" kind="condEval"/>
                  </Anns>
                </ElDesc>
                <ElDesc lineHash="-735021688" ln="210" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="210" srcRngEndLn="211" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Found %d license file(s):\n&quot;, fileCount);" ElType="." rngLn="210"/>
                <ElDesc lineHash="1162263519" ln="211" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="211" srcRngEndLn="212" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; fileCount; i++) {" ElType="." rngLn="211">
                  <Anns>
                    <Ann msg="Loop condition evaluation: (i &lt; fileCount) (assuming true)" kind="condEval"/>
                    <Ann msg="Entering the loop" kind="condEval"/>
                  </Anns>
                </ElDesc>
                <ElDesc lineHash="-1083478587" ln="212" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="212" srcRngEndLn="213" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;%d: %s\n&quot;, i + 1, files[i]);" ElType="." rngLn="212"/>
                <ElDesc lineHash="1162263519" ln="211" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="211" srcRngEndLn="212" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; fileCount; i++) {" ElType="." rngLn="211">
                  <Anns>
                    <Ann msg="Loop condition evaluation: (i &lt; fileCount) (assuming false)" kind="condEval"/>
                    <Ann msg="Not entering the loop" kind="condEval"/>
                  </Anns>
                </ElDesc>
                <ElDesc lineHash="1978713200" ln="215" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="215" srcRngEndLn="216" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Select a file by number: &quot;);" ElType="." rngLn="215"/>
                <ElDesc lineHash="-1626463351" ln="216" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="216" srcRngEndLn="217" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int choice;" ElType="." rngLn="216"/>
                <ElDesc lineHash="11796978" ln="217" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="217" srcRngEndLn="218" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (scanf(&quot;%d&quot;, &amp;choice) != 1 || choice &lt; 1 || choice > fileCount) {" ElType="." rngLn="217">
                  <Anns>
                    <Ann msg="Condition evaluation: (scanf(...) != 1) (assuming false)" kind="condEval"/>
                    <Ann msg="Condition evaluation: (choice &lt; 1) (assuming false)" kind="condEval"/>
                    <Ann msg="Condition evaluation: (choice > fileCount) (assuming false)" kind="condEval"/>
                    <Ann msg="Condition evaluation: scanf(&quot;%d&quot;, &amp;choice) != 1 || choice &lt; 1 || choice > fileCount (assuming false)" kind="condEval"/>
                  </Anns>
                </ElDesc>
                <ElDesc lineHash="617593544" ln="222" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="222" srcRngEndLn="223" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="strncpy(filePath, files[choice - 1], MAX_PATH_LEN);" ElType=".P" rngLn="222">
                  <Anns>
                    <Ann msg="number of elements to write: 260" kind="var"/>
                    <Ann msg="Buffer: char filePath[260]" kind="var"/>
                    <Ann msg="Point where the buffer overflow occurs" kind="point"/>
                  </Anns>
                </ElDesc>
              </ElDescList>
            </ElDesc>
          </ElDescList>
          <Anns>
            <Ann msg="Point where the buffer size becomes known" kind="cause"/>
            <Ann msg="number of elements to write: 260" kind="var"/>
            <Ann msg="Buffer: char filePath[260]" kind="var"/>
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a file (&quot;filePath[&lt;some index>]&quot;) is printed on a console" ln="223" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="239" rule="BD-SECURITY-TDCONSOLE" FirstElSrcRngStartPos="0" lnHash="-578215084" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Avoid printing tainted data on the output console" FirstElSrcRngStartln="238" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="-759764608" lang="cpp" violId="c9df9620-1131-3cc9-9542-70111ae0dcdd" locEndPos="0" urgent="true" locEndLn="224" goals="1," locStartln="223" sev="1" locRef="1" tool="c++test" lineHash="-578215084" unbViolId="d82ac34b-2d57-3efc-9b37-f9a0b60d75ca" locType="sr" hash="549210378" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="842755070" ln="236" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="236" srcRngEndLn="237" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;r&quot;);" ElType="." rngLn="236"/>
        <ElDesc lineHash="994035581" ln="237" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="237" srcRngEndLn="238" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (config) {" ElType="." rngLn="237">
          <Anns>
            <Ann msg="Condition evaluation: (config != 0) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="421502936" ln="238" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="238" srcRngEndLn="239" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(filePath, MAX_PATH_LEN, config);" ElType=".C" rngLn="238">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: filePath[&lt;some index>]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-137669080" ln="239" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="239" srcRngEndLn="240" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="filePath[strcspn(filePath, &quot;\r\n&quot;)] = '\0'; // Remove newline" ElType="." rngLn="239"/>
        <ElDesc lineHash="-1802127606" ln="240" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="240" srcRngEndLn="241" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fclose(config);" ElType="." rngLn="240"/>
        <ElDesc lineHash="-874458958" ln="242" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="242" srcRngEndLn="243" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Stored path found: %s\n&quot;, filePath);" ElType="." rngLn="242"/>
        <ElDesc lineHash="-1144948456" ln="243" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="243" srcRngEndLn="244" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Do you want to use the stored path? (y/n): &quot;);" ElType="." rngLn="243"/>
        <ElDesc lineHash="10412016" ln="244" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="244" srcRngEndLn="245" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char choice;" ElType="." rngLn="244"/>
        <ElDesc lineHash="278597054" ln="245" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="245" srcRngEndLn="246" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(&quot; %c&quot;, &amp;choice);" ElType="." rngLn="245"/>
        <ElDesc lineHash="1555766143" ln="247" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="247" srcRngEndLn="248" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (choice == 'n' || choice == 'N') {" ElType="." rngLn="247">
          <Anns>
            <Ann msg="Condition evaluation: (choice == 110) (assuming true)" kind="condEval"/>
            <Ann msg="Condition evaluation: choice == 'n' || choice == 'N' (true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-372566617" ln="248" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="248" srcRngEndLn="249" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="remove(CONFIG_FILE);" ElType="." rngLn="248"/>
        <ElDesc lineHash="-402752085" ln="249" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="249" srcRngEndLn="250" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Enter the directory containing license files: &quot;);" ElType="." rngLn="249"/>
        <ElDesc lineHash="-923471348" ln="250" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="250" srcRngEndLn="251" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char directory[MAX_PATH_LEN];" ElType="." rngLn="250"/>
        <ElDesc lineHash="-2073627346" ln="251" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="251" srcRngEndLn="252" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(&quot; %259s&quot;, directory);" ElType="." rngLn="251"/>
        <ElDesc lineHash="-850845177" ln="253" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="253" srcRngEndLn="254" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (!isDirectory(directory)) {" ElType="." rngLn="253">
          <Anns>
            <Ann msg="Condition evaluation: !isDirectory(...) (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1955791720" ln="258" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="258" srcRngEndLn="259" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="chooseLicenseFile(filePath, directory);" ElType="!" rngLn="258">
          <ElDescList>
            <ElDesc lineHash="-1364436747" ln="202" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="202" srcRngEndLn="203" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char files[100][MAX_PATH_LEN];" ElType="." rngLn="202">
              <Anns>
                <Ann msg="Tainted data: filePath[&lt;some index>]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-438817434" ln="203" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="203" srcRngEndLn="204" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int fileCount = listLicenseFiles(directory, files, 100);" ElType="." rngLn="203"/>
            <ElDesc lineHash="-1570492638" ln="205" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="205" srcRngEndLn="206" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (fileCount == 0) {" ElType="." rngLn="205">
              <Anns>
                <Ann msg="Condition evaluation: (fileCount == 0) (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-735021688" ln="210" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="210" srcRngEndLn="211" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Found %d license file(s):\n&quot;, fileCount);" ElType="." rngLn="210"/>
            <ElDesc lineHash="1162263519" ln="211" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="211" srcRngEndLn="212" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; fileCount; i++) {" ElType="." rngLn="211">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; fileCount) (assuming true)" kind="condEval"/>
                <Ann msg="Entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1083478587" ln="212" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="212" srcRngEndLn="213" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;%d: %s\n&quot;, i + 1, files[i]);" ElType="." rngLn="212"/>
            <ElDesc lineHash="1162263519" ln="211" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="211" srcRngEndLn="212" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; fileCount; i++) {" ElType="." rngLn="211">
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; fileCount) (assuming false)" kind="condEval"/>
                <Ann msg="Not entering the loop" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="1978713200" ln="215" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="215" srcRngEndLn="216" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Select a file by number: &quot;);" ElType="." rngLn="215"/>
            <ElDesc lineHash="-1626463351" ln="216" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="216" srcRngEndLn="217" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int choice;" ElType="." rngLn="216"/>
            <ElDesc lineHash="11796978" ln="217" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="217" srcRngEndLn="218" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (scanf(&quot;%d&quot;, &amp;choice) != 1 || choice &lt; 1 || choice > fileCount) {" ElType="." rngLn="217">
              <Anns>
                <Ann msg="Condition evaluation: (scanf(...) != 1) (assuming false)" kind="condEval"/>
                <Ann msg="Condition evaluation: (choice &lt; 1) (assuming false)" kind="condEval"/>
                <Ann msg="Condition evaluation: (choice > fileCount) (assuming false)" kind="condEval"/>
                <Ann msg="Condition evaluation: scanf(&quot;%d&quot;, &amp;choice) != 1 || choice &lt; 1 || choice > fileCount (assuming false)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="617593544" ln="222" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="222" srcRngEndLn="223" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="strncpy(filePath, files[choice - 1], MAX_PATH_LEN);" ElType="." rngLn="222"/>
            <ElDesc lineHash="-578215084" ln="223" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="223" srcRngEndLn="224" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;You selected: %s\n&quot;, filePath);" ElType=".P" rngLn="223">
              <Anns>
                <Ann msg="Tainted data: filePath[&lt;some index>]" kind="var"/>
                <Ann msg="Call to a dangerous method" kind="point"/>
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="All local stack variables in method &quot;chooseLicenseFile&quot; take 26032 bytes which is greater than defined limit 20480 bytes" ln="225" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Point where the calculated size becomes greater than defined limit" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="202" rule="BD-RES-STACKLIM" FirstElSrcRngStartPos="0" lnHash="842904025" ruleSCSCMsg="Point where the size of local variables on the stack is calculated" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Do not create variables on the stack above the defined limits" FirstElSrcRngStartln="201" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="2121518261" lang="cpp" violId="1f083e73-90a0-35f6-8eb1-2abd2d93fb27" locEndPos="0" urgent="true" locEndLn="226" goals="1," locStartln="225" sev="3" locRef="1" tool="c++test" lineHash="842904025" unbViolId="7ddc7c11-eb14-37e3-ab02-2e0d3829c05b" locType="sr" hash="549210378" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="710518223" ln="201" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="201" srcRngEndLn="202" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="void chooseLicenseFile(char* filePath, const char* directory) {" ElType=".C" rngLn="201">
          <Anns>
            <Ann msg="Point where the size of local variables on the stack is calculated" kind="cause"/>
            <Ann msg="+ 8 bytes" kind="comment"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1364436747" ln="202" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="202" srcRngEndLn="203" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char files[100][MAX_PATH_LEN];" ElType="." rngLn="202">
          <Anns>
            <Ann msg="+ 26000 bytes" kind="comment"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-438817434" ln="203" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="203" srcRngEndLn="204" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int fileCount = listLicenseFiles(directory, files, 100);" ElType="." rngLn="203">
          <Anns>
            <Ann msg="+ 4 bytes" kind="comment"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1570492638" ln="205" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="205" srcRngEndLn="206" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (fileCount == 0) {" ElType="." rngLn="205">
          <Anns>
            <Ann msg="Condition evaluation: (fileCount == 0) (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-735021688" ln="210" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="210" srcRngEndLn="211" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Found %d license file(s):\n&quot;, fileCount);" ElType="." rngLn="210"/>
        <ElDesc lineHash="1162263519" ln="211" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="211" srcRngEndLn="212" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; fileCount; i++) {" ElType="." rngLn="211">
          <Anns>
            <Ann msg="+ 4 bytes" kind="comment"/>
            <Ann msg="Loop condition evaluation: (i &lt; fileCount) (assuming true)" kind="condEval"/>
            <Ann msg="Entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1083478587" ln="212" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="212" srcRngEndLn="213" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;%d: %s\n&quot;, i + 1, files[i]);" ElType="." rngLn="212"/>
        <ElDesc lineHash="1162263519" ln="211" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="211" srcRngEndLn="212" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="for (int i = 0; i &lt; fileCount; i++) {" ElType="." rngLn="211">
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; fileCount) (assuming false)" kind="condEval"/>
            <Ann msg="Not entering the loop" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1978713200" ln="215" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="215" srcRngEndLn="216" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Select a file by number: &quot;);" ElType="." rngLn="215"/>
        <ElDesc lineHash="-1626463351" ln="216" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="216" srcRngEndLn="217" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="int choice;" ElType="." rngLn="216">
          <Anns>
            <Ann msg="+ 4 bytes" kind="comment"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="11796978" ln="217" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="217" srcRngEndLn="218" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (scanf(&quot;%d&quot;, &amp;choice) != 1 || choice &lt; 1 || choice > fileCount) {" ElType="." rngLn="217">
          <Anns>
            <Ann msg="Condition evaluation: (scanf(...) != 1) (assuming false)" kind="condEval"/>
            <Ann msg="Condition evaluation: (choice &lt; 1) (assuming false)" kind="condEval"/>
            <Ann msg="Condition evaluation: (choice > fileCount) (assuming false)" kind="condEval"/>
            <Ann msg="Condition evaluation: scanf(&quot;%d&quot;, &amp;choice) != 1 || choice &lt; 1 || choice > fileCount (false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="617593544" ln="222" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="222" srcRngEndLn="223" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="strncpy(filePath, files[choice - 1], MAX_PATH_LEN);" ElType="." rngLn="222"/>
        <ElDesc lineHash="-578215084" ln="223" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="223" srcRngEndLn="224" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;You selected: %s\n&quot;, filePath);" ElType="." rngLn="223"/>
        <ElDesc lineHash="842904025" ln="225" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="225" srcRngEndLn="226" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;w&quot;);" ElType=".P" rngLn="225">
          <Anns>
            <Ann msg="+ 8 bytes" kind="comment"/>
            <Ann msg="Point where the calculated size becomes greater than defined limit" kind="point"/>
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Value returned from method &quot;fgets&quot; should be checked" ln="238" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Point by which returned value should be checked" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="239" rule="BD-PB-CHECKRETGEN" FirstElSrcRngStartPos="0" lnHash="421502936" ruleSCSCMsg="Method call" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Always check the returned value of non-void function" FirstElSrcRngStartln="238" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="1694215967" lang="cpp" violId="c99839d3-8455-3c4d-9da0-d284fa7bfaf3" locEndPos="0" urgent="true" locEndLn="239" goals="1," locStartln="238" sev="2" locRef="1" tool="c++test" lineHash="421502936" unbViolId="ac37bdd2-9019-3376-b09e-10dbbd157600" locType="sr" hash="549210378" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="842755070" ln="236" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="236" srcRngEndLn="237" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;r&quot;);" ElType="." rngLn="236"/>
        <ElDesc lineHash="994035581" ln="237" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="237" srcRngEndLn="238" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (config) {" ElType="." rngLn="237">
          <Anns>
            <Ann msg="Condition evaluation: (config != 0) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="421502936" ln="238" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="238" srcRngEndLn="239" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(filePath, MAX_PATH_LEN, config);" ElType="CP" rngLn="238">
          <Anns>
            <Ann msg="Method call" kind="cause"/>
            <Ann msg="Point by which returned value should be checked" kind="point"/>
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a file (&quot;strcspn(...)&quot;) is used to index an array char[]" ln="239" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="239" rule="BD-SECURITY-ARRAY" FirstElSrcRngStartPos="0" lnHash="-137669080" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Avoid tainted data in array indexes" FirstElSrcRngStartln="238" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="1968558123" lang="cpp" violId="d5f10fff-1b54-3389-b632-97958f695f82" locEndPos="0" urgent="true" locEndLn="240" goals="1," locStartln="239" sev="1" locRef="1" tool="c++test" lineHash="-137669080" unbViolId="416bac7d-f861-30f3-91de-c1a579db23b2" locType="sr" hash="549210378" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="842755070" ln="236" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="236" srcRngEndLn="237" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;r&quot;);" ElType="." rngLn="236"/>
        <ElDesc lineHash="994035581" ln="237" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="237" srcRngEndLn="238" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (config) {" ElType="." rngLn="237">
          <Anns>
            <Ann msg="Condition evaluation: (config != 0) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="421502936" ln="238" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="238" srcRngEndLn="239" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(filePath, MAX_PATH_LEN, config);" ElType=".C" rngLn="238">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: filePath[&lt;some index>]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-137669080" ln="239" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="239" srcRngEndLn="240" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="strcspn(...)" ElType="!" rngLn="239"/>
        <ElDesc lineHash="-137669080" ln="239" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="239" srcRngEndLn="240" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="filePath[strcspn(filePath, &quot;\r\n&quot;)] = '\0'; // Remove newline" ElType=".P" rngLn="239">
          <Anns>
            <Ann msg="Tainted data: strcspn(...)" kind="var"/>
            <Ann msg="Call to a dangerous method" kind="point"/>
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The &quot;filePath&quot; string from the &quot;fgets&quot; method is used but was not reset" ln="239" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Place where the string is used" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="239" rule="BD-PB-FGETS" FirstElSrcRngStartPos="0" lnHash="-137669080" ruleSCSCMsg="Place where the string is obtained" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Reset strings on fgets() or fgetws() failure" FirstElSrcRngStartln="238" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="312138982" lang="cpp" violId="1c9d2727-93d0-35dc-adc6-391408c37343" locEndPos="0" urgent="true" locEndLn="240" goals="1," locStartln="239" sev="2" locRef="1" tool="c++test" lineHash="-137669080" unbViolId="ee1e8852-8b41-33db-9f0a-b3b566d27448" locType="sr" hash="549210378" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="421502936" ln="238" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="238" srcRngEndLn="239" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(filePath, MAX_PATH_LEN, config);" ElType=".C" rngLn="238">
          <Anns>
            <Ann msg="Place where the string is obtained" kind="cause"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-137669080" ln="239" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="239" srcRngEndLn="240" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="strcspn(...)" ElType=".P" rngLn="239">
          <Anns>
            <Ann msg="Place where the string is used" kind="point"/>
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a file (&quot;filePath[&lt;some index>]&quot;) is printed on a console" ln="242" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="239" rule="BD-SECURITY-TDCONSOLE" FirstElSrcRngStartPos="0" lnHash="-874458958" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Avoid printing tainted data on the output console" FirstElSrcRngStartln="238" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="1794996020" lang="cpp" violId="3403f3be-aaff-393d-b698-71b932826224" locEndPos="0" urgent="true" locEndLn="243" goals="1," locStartln="242" sev="1" locRef="1" tool="c++test" lineHash="-874458958" unbViolId="b023e821-5443-3b6b-a041-b323d062edfb" locType="sr" hash="549210378" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="842755070" ln="236" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="236" srcRngEndLn="237" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;r&quot;);" ElType="." rngLn="236"/>
        <ElDesc lineHash="994035581" ln="237" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="237" srcRngEndLn="238" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (config) {" ElType="." rngLn="237">
          <Anns>
            <Ann msg="Condition evaluation: (config != 0) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="421502936" ln="238" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="238" srcRngEndLn="239" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(filePath, MAX_PATH_LEN, config);" ElType=".C" rngLn="238">
          <Anns>
            <Ann msg="Tainting point" kind="cause"/>
            <Ann msg="Tainted data: filePath[&lt;some index>]" kind="var"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-137669080" ln="239" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="239" srcRngEndLn="240" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="filePath[strcspn(filePath, &quot;\r\n&quot;)] = '\0'; // Remove newline" ElType="." rngLn="239"/>
        <ElDesc lineHash="-1802127606" ln="240" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="240" srcRngEndLn="241" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fclose(config);" ElType="." rngLn="240"/>
        <ElDesc lineHash="-874458958" ln="242" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="242" srcRngEndLn="243" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Stored path found: %s\n&quot;, filePath);" ElType=".P" rngLn="242">
          <Anns>
            <Ann msg="Tainted data: filePath[&lt;some index>]" kind="var"/>
            <Ann msg="Call to a dangerous method" kind="point"/>
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of not zero-terminated string: &quot;directory&quot; is uninitialized" ln="251" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Usage point" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="236" rule="BD-PB-OVERFNZT" FirstElSrcRngStartPos="0" lnHash="-2073627346" ruleSCSCMsg="Start of the path" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Avoid overflow due to reading a not zero terminated string" FirstElSrcRngStartln="235" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="-1424681480" lang="cpp" violId="a3024bcc-237f-3ec4-8e99-19dfaa2fd668" locEndPos="0" urgent="true" locEndLn="252" goals="1," locStartln="251" sev="1" locRef="1" tool="c++test" lineHash="-2073627346" unbViolId="104f96a5-b2ec-376a-a547-6083ad171215" locType="sr" hash="549210378" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="-587856984" ln="235" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="235" srcRngEndLn="236" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="void manageStoredPath(char* filePath) {" ElType=".C" rngLn="235">
          <Anns>
            <Ann msg="Start of the path" kind="cause"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="842755070" ln="236" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="236" srcRngEndLn="237" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;r&quot;);" ElType="." rngLn="236"/>
        <ElDesc lineHash="994035581" ln="237" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="237" srcRngEndLn="238" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (config) {" ElType="." rngLn="237">
          <Anns>
            <Ann msg="Condition evaluation: (config != 0) (assuming true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="421502936" ln="238" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="238" srcRngEndLn="239" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(filePath, MAX_PATH_LEN, config);" ElType="." rngLn="238"/>
        <ElDesc lineHash="-137669080" ln="239" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="239" srcRngEndLn="240" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="filePath[strcspn(filePath, &quot;\r\n&quot;)] = '\0'; // Remove newline" ElType="." rngLn="239"/>
        <ElDesc lineHash="-1802127606" ln="240" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="240" srcRngEndLn="241" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fclose(config);" ElType="." rngLn="240"/>
        <ElDesc lineHash="-874458958" ln="242" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="242" srcRngEndLn="243" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Stored path found: %s\n&quot;, filePath);" ElType="." rngLn="242"/>
        <ElDesc lineHash="-1144948456" ln="243" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="243" srcRngEndLn="244" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Do you want to use the stored path? (y/n): &quot;);" ElType="." rngLn="243"/>
        <ElDesc lineHash="10412016" ln="244" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="244" srcRngEndLn="245" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char choice;" ElType="." rngLn="244"/>
        <ElDesc lineHash="278597054" ln="245" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="245" srcRngEndLn="246" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(&quot; %c&quot;, &amp;choice);" ElType="." rngLn="245"/>
        <ElDesc lineHash="1555766143" ln="247" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="247" srcRngEndLn="248" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (choice == 'n' || choice == 'N') {" ElType="." rngLn="247">
          <Anns>
            <Ann msg="Condition evaluation: (choice == 110) (assuming false)" kind="condEval"/>
            <Ann msg="Condition evaluation: (choice == 78) (assuming true)" kind="condEval"/>
            <Ann msg="Condition evaluation: choice == 'n' || choice == 'N' (true)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-372566617" ln="248" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="248" srcRngEndLn="249" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="remove(CONFIG_FILE);" ElType="." rngLn="248"/>
        <ElDesc lineHash="-402752085" ln="249" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="249" srcRngEndLn="250" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Enter the directory containing license files: &quot;);" ElType="." rngLn="249"/>
        <ElDesc lineHash="-923471348" ln="250" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="250" srcRngEndLn="251" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char directory[MAX_PATH_LEN];" ElType="." rngLn="250"/>
        <ElDesc lineHash="-2073627346" ln="251" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="251" srcRngEndLn="252" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(&quot; %259s&quot;, directory);" ElType=".P" rngLn="251">
          <Anns>
            <Ann msg="Not zero-terminated string: directory" kind="comment"/>
            <Ann msg="Usage point" kind="point"/>
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of not zero-terminated string: &quot;directory&quot; is uninitialized" ln="264" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Usage point" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="236" rule="BD-PB-OVERFNZT" FirstElSrcRngStartPos="0" lnHash="1024654638" ruleSCSCMsg="Start of the path" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Avoid overflow due to reading a not zero terminated string" FirstElSrcRngStartln="235" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="920663329" lang="cpp" violId="197930ca-9156-38f3-a7d4-446694ec7dec" locEndPos="0" urgent="true" locEndLn="265" goals="1," locStartln="264" sev="1" locRef="1" tool="c++test" lineHash="1024654638" unbViolId="c26e73c9-af0a-3c76-afa0-6956f3c5e6fe" locType="sr" hash="549210378" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="-587856984" ln="235" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="235" srcRngEndLn="236" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="void manageStoredPath(char* filePath) {" ElType=".C" rngLn="235">
          <Anns>
            <Ann msg="Start of the path" kind="cause"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="842755070" ln="236" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="236" srcRngEndLn="237" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;r&quot;);" ElType="." rngLn="236"/>
        <ElDesc lineHash="994035581" ln="237" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="237" srcRngEndLn="238" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (config) {" ElType="." rngLn="237">
          <Anns>
            <Ann msg="Condition evaluation: (config != 0) (assuming false)" kind="condEval"/>
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1911326123" ln="262" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="262" srcRngEndLn="263" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Enter the directory containing license files: &quot;);" ElType="." rngLn="262"/>
        <ElDesc lineHash="113179148" ln="263" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="263" srcRngEndLn="264" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char directory[MAX_PATH_LEN];" ElType="." rngLn="263"/>
        <ElDesc lineHash="1024654638" ln="264" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="264" srcRngEndLn="265" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(&quot; %259s&quot;, directory);" ElType=".P" rngLn="264">
          <Anns>
            <Ann msg="Not zero-terminated string: directory" kind="comment"/>
            <Ann msg="Usage point" kind="point"/>
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a file (&quot;filePath[&lt;some index>]&quot;) is printed on a console" ln="279" locFile="/diaglist_license_check/Source Files/diaglist_license_check.c" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="0" auth="danie" FirstElSrcRngEndLn="239" rule="BD-SECURITY-TDCONSOLE" FirstElSrcRngStartPos="0" lnHash="952021493" ruleSCSCMsg="Tainting point" FirstElSrcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" rule.header="Avoid printing tainted data on the output console" FirstElSrcRngStartln="238" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" id="-1481146704" lang="cpp" violId="b5d16b37-fc3d-3c4b-9fd0-ad0118fe7129" locEndPos="0" urgent="true" locEndLn="280" goals="1," locStartln="279" sev="1" locRef="1" tool="c++test" lineHash="952021493" unbViolId="b9990723-6198-3640-babb-c5917ab77dc3" locType="sr" hash="549210378" causeLocRef="1">
      <ElDescList>
        <ElDesc lineHash="1036238815" ln="276" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="276" srcRngEndLn="277" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char filePath[MAX_PATH_LEN] = { 0 };" ElType="." rngLn="276"/>
        <ElDesc lineHash="2123734798" ln="278" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="278" srcRngEndLn="279" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="manageStoredPath(filePath);" ElType="!" rngLn="278">
          <ElDescList>
            <ElDesc lineHash="842755070" ln="236" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="236" srcRngEndLn="237" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="FILE* config = fopen(CONFIG_FILE, &quot;r&quot;);" ElType="." rngLn="236"/>
            <ElDesc lineHash="994035581" ln="237" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="237" srcRngEndLn="238" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (config) {" ElType="." rngLn="237">
              <Anns>
                <Ann msg="Condition evaluation: (config != 0) (assuming true)" kind="condEval"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="421502936" ln="238" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="238" srcRngEndLn="239" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fgets(filePath, MAX_PATH_LEN, config);" ElType=".C" rngLn="238">
              <Anns>
                <Ann msg="Tainting point" kind="cause"/>
                <Ann msg="Tainted data: filePath[&lt;some index>]" kind="var"/>
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-137669080" ln="239" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="239" srcRngEndLn="240" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="filePath[strcspn(filePath, &quot;\r\n&quot;)] = '\0'; // Remove newline" ElType="." rngLn="239"/>
            <ElDesc lineHash="-1802127606" ln="240" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="240" srcRngEndLn="241" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="fclose(config);" ElType="." rngLn="240"/>
            <ElDesc lineHash="-874458958" ln="242" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="242" srcRngEndLn="243" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Stored path found: %s\n&quot;, filePath);" ElType="." rngLn="242"/>
            <ElDesc lineHash="-1144948456" ln="243" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="243" srcRngEndLn="244" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Do you want to use the stored path? (y/n): &quot;);" ElType="." rngLn="243"/>
            <ElDesc lineHash="10412016" ln="244" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="244" srcRngEndLn="245" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="char choice;" ElType="." rngLn="244"/>
            <ElDesc lineHash="278597054" ln="245" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="245" srcRngEndLn="246" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="scanf(&quot; %c&quot;, &amp;choice);" ElType="." rngLn="245"/>
            <ElDesc lineHash="1555766143" ln="247" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="247" srcRngEndLn="248" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="if (choice == 'n' || choice == 'N') {" ElType="." rngLn="247">
              <Anns>
                <Ann msg="Condition evaluation: (choice == 110) (assuming false)" kind="condEval"/>
                <Ann msg="Condition evaluation: (choice == 78) (assuming false)" kind="condEval"/>
                <Ann msg="Condition evaluation: choice == 'n' || choice == 'N' (false)" kind="condEval"/>
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="952021493" ln="279" srcRngStartPos="0" srcRngEndPos="0" locRef="1" locType="sr" srcRnghash="549210378" srcRngStartln="279" srcRngEndLn="280" srcRngFile="/diaglist_license_check/Source Files/diaglist_license_check.c" desc="printf(&quot;Checking license file: %s\n&quot;, filePath);" ElType=".P" rngLn="279">
          <Anns>
            <Ann msg="Tainted data: filePath[&lt;some index>]" kind="var"/>
            <Ann msg="Call to a dangerous method" kind="point"/>
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
  </StdViols>

      <TestedFilesDetails>
         <Total name="Total (Suppressed)" supp="0" total="24">
            <Project id="diaglist_license_check" name="diaglist_license_check" supp="0" total="24">
               <Res name="Source Files" supp="0" total="24">
                  <Res loc="/diaglist_license_check/Source Files/diaglist_license_check.c" locRef="1" locType="sr" name="diaglist_license_check.c" supp="0" total="24"/>
               </Res>
            </Project>
         </Total>
      </TestedFilesDetails>
   </CodingStandards>
   <Statistics>
      
   </Statistics>
</ResultsSession>